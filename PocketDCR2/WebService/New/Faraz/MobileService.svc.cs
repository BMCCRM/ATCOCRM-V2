using System;
using System.Net;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.ServiceModel;
using System.ServiceModel.Activation;
using System.Text;
using System.ServiceModel.Web;
using System.Web.Hosting;
using System.Collections.Specialized;
using System.Web.Script.Serialization;
//using System.Net.Mail;
using System.Configuration;
using System.Data;
using Newtonsoft.Json;
using System.Globalization;
using PocketDCR2.Classes;
using DatabaseLayer.SQL;
using System.Device.Location;
//using System.Net.Http;
using System.Threading.Tasks;
using System.Net.Http.Headers;
using System.Net.Http;
using System.Web;

namespace PocketDCR2.WebService
{
    [AspNetCompatibilityRequirements(RequirementsMode = AspNetCompatibilityRequirementsMode.Allowed)]
    // NOTE: You can use the "Rename" command on the "Refactor" menu to change the class name "MobileService" in code, svc and config file together.
    // NOTE: In order to launch WCF Test Client for testing this service, please select MobileService.svc or MobileService.svc.cs at the Solution Explorer and start debugging.
    public class MobileService : IMobileService
    {
        DAL _dl = new DAL();
        private readonly DatabaseDataContext _dataContext = new DatabaseDataContext(Constants.GetConnectionString());
        string ExpenseExecutionImagesPath = ConfigurationManager.AppSettings["ExpenseExecutionImagesPath"].ToString();
        string ExpenseIndiImagesPath = ConfigurationManager.AppSettings["ExpenseIndividualImagesPath"].ToString();
        string GeoFencingForExecution = ConfigurationManager.AppSettings["GeoFencingForExecution"].ToString();

        public void DoWork()
        {


        }

        #region Comment By Rahim on Behalf of Ahmer
        //public string UploadCallsData(string fileName, Stream stream)
        //{
        //    List<CallExecutionResponseObject> CallExecutionResponse = new List<CallExecutionResponseObject>();
        //    ////string FilePath = Path.Combine(HostingEnvironment.MapPath("~/Uploads/Files"), fileName);
        //    string CreateFilePath = Path.Combine(HostingEnvironment.MapPath("~/Uploads/Files"));
        //    try
        //    {
        //        if (!Directory.Exists(CreateFilePath))
        //        {
        //            Directory.CreateDirectory(CreateFilePath);
        //        }
        //    }
        //    catch (Exception exception)
        //    {
        //        Console.Out.WriteLine(exception.Message);
        //    }

        //    string FilePath = Path.Combine(CreateFilePath, fileName);

        //    int length = 0;
        //    string returnString = null;
        //    using (FileStream writer = new FileStream(FilePath, FileMode.Create))
        //    {
        //        int readCount;
        //        var buffer = new byte[8192];
        //        while ((readCount = stream.Read(buffer, 0, buffer.Length)) != 0)
        //        {
        //            writer.Write(buffer, 0, readCount);
        //            length += readCount;
        //        }
        //    }
        //    JavaScriptSerializer js = new JavaScriptSerializer();
        //    string jsondata = System.IO.File.ReadAllText(FilePath);
        //    var CallsData = js.Deserialize<List<CallExecutionDataObject>>(jsondata);
        //    for (int i = 0; i < CallsData.Count; i++)
        //    {
        //        CallExecutionDataObject callExecutionDataObject = CallsData[i];

        //        string date = "";

        //        string level1 = null, level2 = null, level3 = null, level4 = null, level5 = null, level6 = null;
        //        var doctorId = "";
        //        string classId = "", specialityId = "", qulificationId = "";
        //        int month = 0;
        //        int year = 0;
        //        long salesCallsId = 0;

        //        double GetCallDitanceForMobile = 0.0;
        //        double Previous_salescallid = 0;
        //        double startactid = 0;
        //        string Previous_Longitude = "";
        //        string Previous_Latitude = "";
        //        string distanceZero = "";
        //        NameValueCollection _nvCollection = new NameValueCollection();
        //        try
        //        {
        //            #region CheckLeave
        //            DataSet set0 = _dl.GetData("sp_check_ZSM_MIO_leave", new NameValueCollection { { "@Startdate-date", callExecutionDataObject.date }, { "@Enddate-date", callExecutionDataObject.date }, { "@employeeid-INT", callExecutionDataObject.employeeId } });
        //            if (set0.Tables[0].Rows.Count > 0)
        //            {
        //                returnString = set0.Tables[0].Rows[0][0].ToString() == "Available" ? "Meetingandleave" : "";
        //                if (returnString == "Meetingandleave")
        //                {
        //                    goto Error;
        //                }
        //                else
        //                {

        //                    date = callExecutionDataObject.date + " " + callExecutionDataObject.startTime;
        //                    DateTime result;
        //                    if (!DateTime.TryParse(date, out result))
        //                    {
        //                        returnString = "DateTime Format Is invalid";
        //                        goto Error;
        //                    }
        //                    DateTime executedDateTime = DateTime.ParseExact(callExecutionDataObject.executionDateTime, "dd/MM/yyyy HH:mm:ss",
        //                                     CultureInfo.InvariantCulture);

        //                    string rectype = "S";
        //                    month = result.Month;
        //                    year = result.Year;
        //                    var smsmonth = Convert.ToInt32(result.Month);
        //                    var smsyear = Convert.ToInt32(result.Year);

        //                    #region preedays work

        //                    string dt_temp = "";
        //                    string pree_day = "0";
        //                    int aloowsDays = 24;

        //                    dt_temp = Convert.ToString(result).ToString();

        //                    _nvCollection.Clear();
        //                    _nvCollection.Add("@EmployeeId-bigint", callExecutionDataObject.employeeId.ToString());

        //                    DataSet ds_p = _dl.GetData("sp_SelectEmployeePree_days_withEmpID", _nvCollection);
        //                    if (ds_p != null)
        //                    {
        //                        if (ds_p.Tables[0].Rows.Count > 0)
        //                        {
        //                            pree_day = ds_p.Tables[0].Rows[0]["pree_days"].ToString();

        //                            if (pree_day == "")
        //                            {
        //                                pree_day = "0";
        //                            }
        //                            else if (ds_p.Tables[0].Rows[0]["pree_days"] == null)
        //                            {
        //                                pree_day = "0";
        //                            }

        //                        }
        //                    }

        //                    //if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) <= Convert.ToDateTime(System.DateTime.Now.ToString("MM/dd/yyyy")))
        //                    //{
        //                    //    if (DATEDIFFForHours("Hours", Convert.ToDateTime(dt_temp), Convert.ToDateTime(System.DateTime.Now)) > 24)
        //                    //    {
        //                    //        if (DATEDIFFForHours("Hours", Convert.ToDateTime(dt_temp), Convert.ToDateTime(System.DateTime.Now)) > ((Convert.ToInt32(pree_day) * aloowsDays) + 24))
        //                    //        {
        //                    //            returnString = "PreeDays";
        //                    //            goto Error;
        //                    //        }
        //                    //    }
        //                    //}



        //                    if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) <= Convert.ToDateTime(System.DateTime.Now.ToString("MM/dd/yyyy")))
        //                    {
        //                        if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) != Convert.ToDateTime(executedDateTime.ToString("MM/dd/yyyy")))
        //                        {
        //                            if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) <= Convert.ToDateTime(executedDateTime.ToString("MM/dd/yyyy")))
        //                            {
        //                                if (DATEDIFF("Days", Convert.ToDateTime(dt_temp), Convert.ToDateTime(executedDateTime)) > Convert.ToInt32(pree_day))
        //                                {
        //                                    returnString = "PreeDays";
        //                                    goto Error;
        //                                }
        //                            }
        //                            else
        //                            {
        //                                returnString = "Not Allowed";
        //                                goto Error;
        //                            }
        //                        }
        //                    }


        //                    else
        //                    {
        //                        returnString = "Not Allowed";
        //                        goto Error;
        //                    }

        //                    #endregion

        //                    #region Employee Information
        //                    var dsEmployeeMemberShipInfo = _dl.GetData("sp_EmployeeMembershipSelectByEmployee",
        //                        new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObject.employeeId } });
        //                    if (dsEmployeeMemberShipInfo != null)
        //                    {
        //                        var dsEmployeeHierarchy = _dl.GetData("sp_EmplyeeHierarchySelect",
        //                            new NameValueCollection { { "@SystemUserID-BIGINT", dsEmployeeMemberShipInfo.Tables[0].Rows[0]["SystemUserID"].ToString() } });
        //                        if (dsEmployeeHierarchy != null)
        //                        {
        //                            level1 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId1"].ToString();
        //                            level2 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId2"].ToString();
        //                            level3 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId3"].ToString();
        //                            level4 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId4"].ToString();
        //                            level5 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId5"].ToString();
        //                            level6 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId6"].ToString();
        //                        }
        //                    }
        //                    else
        //                    {
        //                        returnString = "Employee Not Found";
        //                        goto Error;
        //                    }
        //                    #endregion


        //                    var doctorCodeArray = callExecutionDataObject.docDetail.Split(',');
        //                    for (int k = 0; k < doctorCodeArray.Length; k++)
        //                    {

        //                        #region Get Doctor Details
        //                        var doctorCode = doctorCodeArray[k];
        //                        //var dsGetMrDoctorDetails = _dl.GetData("sp_MRDoctorSelectByCode", new NameValueCollection { { "@EmployeeId-bigint", employeeId }, { "@Code-nvarchar-20", doctorCode } });+
        //                        var dsGetMrDoctorDetails = _dl.GetData("sp_MRDoctorSelectByCode_new", new NameValueCollection { { "@EmployeeId-bigint", callExecutionDataObject.employeeId }, { "@Code-nvarchar-20", doctorCode }, { "@month-int", month.ToString() }, { "@year-int", year.ToString() } });
        //                        if (dsGetMrDoctorDetails != null)
        //                        {
        //                            if (dsGetMrDoctorDetails.Tables[0].Rows.Count > 0)
        //                            {
        //                                doctorId = dsGetMrDoctorDetails.Tables[0].Rows[0]["DoctorId"].ToString();

        //                                #region Get Class Of Doctor

        //                                //var doctorClassDetail = _dl.GetData("sp_ClassOfDoctorSelect",	
        //                                //    new NameValueCollection { { "@DoctorId-bigint", doctorId } });	
        //                                var doctorClassDetail = _dl.GetData("sp_ClassOfDoctorOfSPOSelect",
        //                         new NameValueCollection { { "@EmployeeId-bigint", callExecutionDataObject.employeeId }, { "@DoctorId-bigint", doctorId }, { "@month-int", month.ToString() }, { "@year-int", year.ToString() } });
        //                                if (doctorClassDetail != null)
        //                                    if (doctorClassDetail.Tables[0].Rows.Count > 0)
        //                                    {
        //                                        classId = doctorClassDetail.Tables[0].Rows[0]["ClassId"].ToString();
        //                                    }
        //                                    else
        //                                    {
        //                                        returnString = "Class Of Doctor Not Found";
        //                                        if (callExecutionDataObject.callType == "0") goto Error;
        //                                    }

        //                                #endregion

        //                                #region Get Speciality Of Doctor

        //                                var doctorspecialitydetail = _dl.GetData("sp_doctorspecialityselectbydoctor",
        //                                    new NameValueCollection { { "@doctorid-bigint", doctorId } });
        //                                if (doctorspecialitydetail != null)
        //                                    if (doctorspecialitydetail.Tables[0].Rows.Count > 0)
        //                                    {
        //                                        specialityId = doctorspecialitydetail.Tables[0].Rows[0]["specialityid"].ToString();
        //                                    }
        //                                    else
        //                                    {
        //                                        returnString = "speciality of doctor not found";
        //                                        if (callExecutionDataObject.callType == "0") goto Error;
        //                                    }

        //                                #endregion

        //                                #region Get Qualification Of Doctor

        //                                var doctorQualificationDetail = _dl.GetData("sp_QualificationsOfDoctorsSelectByDoctor",
        //                                    new NameValueCollection { { "@DoctorId-BIGINT", doctorId } });
        //                                if (doctorQualificationDetail != null)
        //                                    if (doctorQualificationDetail.Tables[0].Rows.Count > 0)
        //                                    {
        //                                        qulificationId = doctorQualificationDetail.Tables[0].Rows[0]["QulificationId"].ToString();
        //                                    }
        //                                    else
        //                                    {
        //                                        returnString = "Qualification Of Doctor Not Found";
        //                                        if (callExecutionDataObject.callType == "0") goto Error;
        //                                    }

        //                                #endregion
        //                            }
        //                        }
        //                        else
        //                        {
        //                            returnString = "Doctor Not Found in Doctor List Of MIO";
        //                            if (callExecutionDataObject.callType == "0") goto Error;
        //                        }

        //                        #endregion

        //                        #region Get Visit Shift

        //                        var hour = Convert.ToInt32(result.ToString("HH"));

        //                        string vt;
        //                        if (hour >= 0 && hour < 12)
        //                        {
        //                            vt = "1";
        //                        }
        //                        else if (hour < 17)
        //                        {
        //                            vt = "1";
        //                        }
        //                        else
        //                        {
        //                            vt = "2";
        //                        }



        //                        #endregion

        //                        #region PreSalesCallInsert
        //                        var getcountstand = _dl.GetData("getcountryStandardtime", new NameValueCollection { { "@employeeid-int", callExecutionDataObject.employeeId } });
        //                        //   var inTimeZone = TimeZoneInfo.FindSystemTimeZoneById(getcountstand.ToString());
        //                        string inTime = DateTime.Now.ToString();// TimeZoneInfo.ConvertTime(DateTime.Now, TimeZoneInfo.Local, inTimeZone);
        //                        DataSet set = _dl.GetData("sp_check_call_execute", new NameValueCollection { { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QualificationId-int,", qulificationId }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObject.employeeId }, { "@IsPlanned-VARCHAR-50", callExecutionDataObject.isPlanned == "No" ? "NULL" : callExecutionDataObject.isPlanned }, { "@visitdate-datetime", result.ToString() }, });
        //                        if (set.Tables[0].Rows.Count > 0)
        //                        {
        //                            returnString = "Already Executed";
        //                            if (callExecutionDataObject.callType == "0") goto Error;
        //                        }
        //                        else
        //                        {

        //                            if (callExecutionDataObject.isPlanned == "No")
        //                            {

        //                                DataSet set2 = _dl.GetData("sp_check_CallExecuteForUnplanned", new NameValueCollection { { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObject.employeeId }, { "@visitdate-datetime", result.ToString() }, });
        //                                if (set2.Tables[0].Rows.Count > 0)
        //                                {
        //                                    returnString = "Planned";
        //                                    if (callExecutionDataObject.callType == "0") goto Error;
        //                                }
        //                                else
        //                                {

        //                                    var dsPreSalesCalls = _dl.GetData("sp_PreSalesCallsInsert2", new NameValueCollection { { "@VisitDateTime-datetime", result.ToString() }, { "@Level1LevelId-int,", level1 }, { "@Level2LevelId-int,", level2 }, { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QulificationId-int,", qulificationId }, { "@CreationDateTime-datetime", inTime.ToString() }, { "@CallTypeId-int", "1" }, { "@VisitShift-int,", vt }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObject.employeeId }, { "@InboundId-bigint", "NULL" }, { "@DocCode-INT", doctorCode }, { "@IsPlanned-VARCHAR-50", callExecutionDataObject.isPlanned == "No" ? "NULL" : callExecutionDataObject.isPlanned }, { "@ActivityID-INT", callExecutionDataObject.activity }, { "@ReasonID-INT", callExecutionDataObject.reason } });
        //                                    if (dsPreSalesCalls != null)
        //                                    {
        //                                        if (dsPreSalesCalls.Tables[0].Rows.Count > 0)
        //                                        {
        //                                            salesCallsId = Convert.ToInt64(dsPreSalesCalls.Tables[0].Rows[0]["SalesCallId"].ToString());
        //                                        }
        //                                        else
        //                                        {
        //                                            returnString = "Error In Saving In PreSalesCalls";
        //                                            if (callExecutionDataObject.callType == "0") goto Error;
        //                                        }
        //                                    }
        //                                    else
        //                                    {
        //                                        returnString = "Error In Saving In PreSalesCalls";
        //                                        if (callExecutionDataObject.callType == "0") goto Error;
        //                                    }
        //                                }
        //                            }
        //                            else
        //                            {
        //                                var dsPreSalesCalls = _dl.GetData("sp_PreSalesCallsInsert2", new NameValueCollection { { "@VisitDateTime-datetime", result.ToString() }, { "@Level1LevelId-int,", level1 }, { "@Level2LevelId-int,", level2 }, { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QulificationId-int,", qulificationId }, { "@CreationDateTime-datetime", inTime.ToString() }, { "@CallTypeId-int", "1" }, { "@VisitShift-int,", vt }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObject.employeeId }, { "@InboundId-bigint", "NULL" }, { "@DocCode-INT", doctorCode }, { "@IsPlanned-VARCHAR-50", callExecutionDataObject.isPlanned == "No" ? "NULL" : callExecutionDataObject.isPlanned }, { "@ActivityID-INT", callExecutionDataObject.activity }, { "@ReasonID-INT", callExecutionDataObject.reason } });
        //                                if (dsPreSalesCalls != null)
        //                                {
        //                                    if (dsPreSalesCalls.Tables[0].Rows.Count > 0)
        //                                    {
        //                                        salesCallsId = Convert.ToInt64(dsPreSalesCalls.Tables[0].Rows[0]["SalesCallId"].ToString());
        //                                    }
        //                                    else
        //                                    {
        //                                        returnString = "Error In Saving In PreSalesCalls";
        //                                        if (callExecutionDataObject.callType == "0") goto Error;
        //                                    }
        //                                }
        //                                else
        //                                {
        //                                    returnString = "Error In Saving In PreSalesCalls";
        //                                    if (callExecutionDataObject.callType == "0") goto Error;
        //                                }
        //                            }
        //                        }
        //                        #endregion

        //                        if (salesCallsId != 0)
        //                        {

        //                            #region Mobile Exec Time
        //                            if (callExecutionDataObject.executionDateTime != null)
        //                            {
        //                                _nvCollection.Clear();
        //                                _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                _nvCollection.Add("@mobexectime-datetime", executedDateTime.ToString());

        //                                var mac = _dl.GetData("sp_Insert_MobExecutionTime", _nvCollection);
        //                            }
        //                            #endregion

        //                            #region CallDoctors


        //                            // ReSharper disable once UnusedVariable
        //                            if (_dataContext != null)
        //                            {
        //                                var insertCallDoctors = _dataContext.sp_CallDoctorsInsert(salesCallsId, Convert.ToInt64(doctorId)).ToList();
        //                            }

        //                            #endregion

        //                            #region CallVisitors


        //                            if (!Convert.ToBoolean(callExecutionDataObject.coaching))
        //                            {
        //                                // ReSharper disable once UnusedVariable
        //                                var dsIsCoaching = _dl.InserData("sp_InsertCallCoaching",
        //                                    new NameValueCollection
        //                {
        //                    {"@SalesCallId-INT", salesCallsId.ToString()},
        //                    {"@IsCoaching-VARCHAR-50", "0"}
        //                });
        //                            }
        //                            else
        //                            {
        //                                // ReSharper disable once UnusedVariable
        //                                var dsIsCoaching = _dl.InserData("sp_InsertCallCoaching",
        //                                    new NameValueCollection
        //                {
        //                    {"@SalesCallId-INT", salesCallsId.ToString()},
        //                    {"@IsCoaching-VARCHAR-50", "1"}
        //                });
        //                            }

        //                            long jvflma = 0;
        //                            long jvslma = 0;
        //                            long jvHO1 = 0;
        //                            long jvHO2 = 0;
        //                            if (Convert.ToBoolean(callExecutionDataObject.jvflm))
        //                            {
        //                                var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObject.employeeId } });
        //                                if (dsFlm != null)
        //                                {
        //                                    if (dsFlm.Tables[0].Rows.Count > 0)
        //                                    {
        //                                        jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                    }
        //                                }
        //                            }
        //                            if (Convert.ToBoolean(callExecutionDataObject.jvslm))
        //                            {
        //                                var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObject.employeeId } });
        //                                if (dsFlm != null)
        //                                {
        //                                    if (dsFlm.Tables[0].Rows.Count > 0)
        //                                    {
        //                                        jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                        var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(jvflma) } });
        //                                        if (dsSlm != null)
        //                                        {
        //                                            if (dsSlm.Tables[0].Rows.Count > 0)
        //                                            {
        //                                                jvslma = Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                            }
        //                                        }
        //                                    }
        //                                }
        //                            }
        //                            if (Convert.ToBoolean(callExecutionDataObject.jvho1))
        //                            {
        //                                jvHO1 = 1;
        //                            }
        //                            if (Convert.ToBoolean(callExecutionDataObject.jvho2))
        //                            {
        //                                jvHO2 = 1;
        //                            }
        //                            // ReSharper disable once UnusedVariable
        //                            long? nullable = null;
        //                            if (_dataContext != null)
        //                            {

        //                                /* var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew(salesCallsId, Convert.ToInt64(callExecutionDataObject.employeeId),
        //                                     ((jvflma == 0) ? nullable : jvflma),
        //                                     ((jvslma == 0) ? nullable : jvslma),
        //                                     ((jvHO1 == 0) ? nullable : jvHO1),
        //                                     ((jvHO2 == 0) ? nullable : jvHO2)).ToList();*/
        //                                var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew(salesCallsId, Convert.ToInt64(callExecutionDataObject.employeeId),
        //                            (!(Convert.ToBoolean(callExecutionDataObject.jvflm)) ? nullable : jvflma),
        //                            (!(Convert.ToBoolean(callExecutionDataObject.jvslm)) ? nullable : jvslma),
        //                            (!(Convert.ToBoolean(callExecutionDataObject.jvho1)) ? nullable : jvHO1),
        //                            (!(Convert.ToBoolean(callExecutionDataObject.jvho2)) ? nullable : jvHO2)).ToList();

        //                                /*if (jvflma == 0 && jvslma == 0)
        //                                {
        //                                    var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew(salesCallsId, Convert.ToInt64(callExecutionDataObject.employeeId), null, null, null, null).ToList();
        //                                }
        //                                else
        //                                {
        //                                    var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew(salesCallsId, Convert.ToInt64(callExecutionDataObject.employeeId), jvflma, jvslma, 0, 0).ToList();
        //                                }*/

        //                            }

        //                            #endregion

        //                            #region VisitFeedBack

        //                            if (_dataContext != null)
        //                            {
        //                                // ReSharper disable once UnusedVariable
        //                                var insertFeedBack = _dataContext.sp_VisitFeedBackInsert(salesCallsId, callExecutionDataObject.callNotes).ToList();
        //                            }

        //                            #endregion

        //                            #region CallProducts

        //                            // ReSharper disable once NotAccessedVariable	
        //                            List<CallProduct> insertCallProduct;

        //                            if (callExecutionDataObject.product1 != "-1")
        //                            {
        //                                if (_dataContext != null)
        //                                {
        //                                    // ReSharper disable once RedundantAssignment	
        //                                    //insertCallProduct =	
        //                                    //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product1), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product1), 1).ToList();	
        //                                    insertCallProduct =
        //                                        _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product1), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product1), 1).ToList();

        //                                    if (callExecutionDataObject.p1Notes != "" && insertCallProduct.Count > 0)
        //                                    {
        //                                        var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
        //                                            new NameValueCollection { 	
        //                                        { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() }, 	
        //                                        { "@Comment-varchar(max),", callExecutionDataObject.p1Notes} 	
        //                                        });
        //                                    }
        //                                }


        //                            }


        //                            if (callExecutionDataObject.product2 != "-1")
        //                            {
        //                                if (_dataContext != null)
        //                                {
        //                                    // ReSharper disable once RedundantAssignment	
        //                                    //insertCallProduct =	
        //                                    //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product2), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product1), 2).ToList();	
        //                                    insertCallProduct =
        //                                        _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product2), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product2), 2).ToList();

        //                                    if (callExecutionDataObject.p2Notes != "" && insertCallProduct.Count > 0)
        //                                    {
        //                                        var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
        //                                            new NameValueCollection { 	
        //                                        { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() }, 	
        //                                        { "@Comment-varchar(max),", callExecutionDataObject.p2Notes} 	
        //                                        });
        //                                    }

        //                                }
        //                            }

        //                            if (callExecutionDataObject.product3 != "-1")
        //                            {
        //                                if (_dataContext != null)
        //                                {
        //                                    // ReSharper disable once RedundantAssignment	
        //                                    //insertCallProduct =	
        //                                    //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product3), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product3), 3).ToList();	
        //                                    insertCallProduct =
        //                                        _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product3), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product3), 3).ToList();

        //                                    if (callExecutionDataObject.p3Notes != "" && insertCallProduct.Count > 0)
        //                                    {
        //                                        var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
        //                                            new NameValueCollection { 	
        //                                        { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() }, 	
        //                                        { "@Comment-varchar(max),", callExecutionDataObject.p3Notes} 	
        //                                        });
        //                                    }
        //                                }
        //                            }

        //                            if (callExecutionDataObject.product4 != "-1")
        //                            {
        //                                if (_dataContext != null)
        //                                {
        //                                    // ReSharper disable once RedundantAssignment	
        //                                    //insertCallProduct =	
        //                                    //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product4), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product4), 4).ToList();	
        //                                    insertCallProduct =
        //                                        _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product4), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product4), 4).ToList();

        //                                    if (callExecutionDataObject.p4Notes != "" && insertCallProduct.Count > 0)
        //                                    {
        //                                        var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
        //                                            new NameValueCollection { 	
        //                                        { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() }, 	
        //                                        { "@Comment-varchar(max),", callExecutionDataObject.p4Notes} 	
        //                                        });
        //                                    }
        //                                }

        //                            }



        //                            #endregion

        //                            #region CallProductSamples

        //                            if (callExecutionDataObject.sample1 != "-1" && callExecutionDataObject.sampleQty1 != "")
        //                            {

        //                                // var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample1 } });

        //                                // int SampleProdID1 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());


        //                                var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample1 } });

        //                                int SampleProdID1 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
        //                                _nvCollection.Clear();
        //                                _nvCollection.Add("@mioid-int", callExecutionDataObject.employeeId.ToString());
        //                                _nvCollection.Add("@sample_id-int", callExecutionDataObject.sample1.ToString());
        //                                _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                _nvCollection.Add("@year-int", smsyear.ToString());
        //                                var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
        //                                if (checkSample1Balance.Tables[0].Rows.Count > 0)
        //                                {
        //                                    int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
        //                                    int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
        //                                    int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

        //                                    if (balnc >= (qty + opening))
        //                                    {

        //                                    }
        //                                    else if ((Convert.ToInt32(callExecutionDataObject.sampleQty1) + balnc) > (qty + opening))
        //                                    {

        //                                    }
        //                                    else
        //                                    {
        //                                        var newbalance = Convert.ToInt32(callExecutionDataObject.sampleQty1) + balnc;
        //                                        _nvCollection.Clear();
        //                                        _nvCollection.Add("@mioid-int", callExecutionDataObject.employeeId.ToString());
        //                                        _nvCollection.Add("@sample_id-int", callExecutionDataObject.sample1.ToString());
        //                                        _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                        _nvCollection.Add("@Qty-int", newbalance.ToString());
        //                                        _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                        _nvCollection.Add("@year-int", smsyear.ToString());
        //                                        var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

        //                                        _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID1, Convert.ToInt32(callExecutionDataObject.sample1), Convert.ToInt32(callExecutionDataObject.sampleQty1), 1).ToList();
        //                                    }
        //                                }

        //                            }

        //                            if (callExecutionDataObject.sample2 != "-1" && callExecutionDataObject.sampleQty2 != "")
        //                            {
        //                                // var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample2 } });

        //                                // int SampleProdID2 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

        //                                // _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID2, Convert.ToInt32(callExecutionDataObject.sample2), Convert.ToInt32(callExecutionDataObject.sampleQty2), 2).ToList();


        //                                var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample2 } });

        //                                int SampleProdID2 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
        //                                // int SampleProdID2 = Convert.ToInt32(sample2);
        //                                _nvCollection.Clear();
        //                                _nvCollection.Add("@mioid-int", callExecutionDataObject.employeeId.ToString());
        //                                _nvCollection.Add("@sample_id-int", callExecutionDataObject.sample2.ToString());
        //                                _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                _nvCollection.Add("@year-int", smsyear.ToString());
        //                                var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
        //                                if (checkSample1Balance.Tables[0].Rows.Count > 0)
        //                                {
        //                                    int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
        //                                    int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
        //                                    int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

        //                                    if (balnc >= (qty + opening))
        //                                    {

        //                                    }
        //                                    else if ((Convert.ToInt32(callExecutionDataObject.sampleQty2) + balnc) > (qty + opening))
        //                                    {

        //                                    }
        //                                    else
        //                                    {
        //                                        var newbalance = Convert.ToInt32(callExecutionDataObject.sampleQty2) + balnc;
        //                                        _nvCollection.Clear();
        //                                        _nvCollection.Add("@mioid-int", callExecutionDataObject.employeeId.ToString());
        //                                        _nvCollection.Add("@sample_id-int", callExecutionDataObject.sample2.ToString());
        //                                        _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                        _nvCollection.Add("@Qty-int", newbalance.ToString());
        //                                        _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                        _nvCollection.Add("@year-int", smsyear.ToString());
        //                                        var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

        //                                        _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID2, Convert.ToInt32(callExecutionDataObject.sample2), Convert.ToInt32(callExecutionDataObject.sampleQty2), 2).ToList();
        //                                    }
        //                                }

        //                            }

        //                            if (callExecutionDataObject.sample3 != "-1" && callExecutionDataObject.sampleQty3 != "")
        //                            {

        //                                // var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample3 } });

        //                                //   int SampleProdID3 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

        //                                //   _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID3, Convert.ToInt32(callExecutionDataObject.sample3), Convert.ToInt32(callExecutionDataObject.sampleQty3), 3).ToList();

        //                                var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample3 } });

        //                                int SampleProdID3 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
        //                                //  int SampleProdID3 = Convert.ToInt32(sample3);
        //                                _nvCollection.Clear();
        //                                _nvCollection.Add("@mioid-int", callExecutionDataObject.employeeId.ToString());
        //                                _nvCollection.Add("@sample_id-int", callExecutionDataObject.sample3.ToString());
        //                                _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                _nvCollection.Add("@year-int", smsyear.ToString());
        //                                var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
        //                                if (checkSample1Balance.Tables[0].Rows.Count > 0)
        //                                {
        //                                    int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
        //                                    int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
        //                                    int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

        //                                    if (balnc >= (qty + opening))
        //                                    {

        //                                    }
        //                                    else if ((Convert.ToInt32(callExecutionDataObject.sampleQty3) + balnc) > (qty + opening))
        //                                    {

        //                                    }
        //                                    else
        //                                    {
        //                                        var newbalance = Convert.ToInt32(callExecutionDataObject.sampleQty3) + balnc;
        //                                        _nvCollection.Clear();
        //                                        _nvCollection.Add("@mioid-int", callExecutionDataObject.employeeId.ToString());
        //                                        _nvCollection.Add("@sample_id-int", callExecutionDataObject.sample3.ToString());
        //                                        _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                        _nvCollection.Add("@Qty-int", newbalance.ToString());
        //                                        _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                        _nvCollection.Add("@year-int", smsyear.ToString());
        //                                        var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

        //                                        _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID3, Convert.ToInt32(callExecutionDataObject.sample3), Convert.ToInt32(callExecutionDataObject.sampleQty3), 3).ToList();
        //                                    }
        //                                }

        //                            }


        //                            //if (callExecutionDataObject.sample4 != "-1" && callExecutionDataObject.sampleQty4 != "")
        //                            //{

        //                            //  //  var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample4 } });

        //                            // //   int SampleProdID4 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

        //                            //  //  _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID4, Convert.ToInt32(callExecutionDataObject.sample4), Convert.ToInt32(callExecutionDataObject.sampleQty4), 4).ToList();

        //                            //    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample4 } });

        //                            //    int SampleProdID4 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
        //                            //    //int SampleProdID4 = Convert.ToInt32(sample4);
        //                            //    _nvCollection.Clear();
        //                            //    _nvCollection.Add("@mioid-int", callExecutionDataObject.employeeId.ToString());
        //                            //    _nvCollection.Add("@sample_id-int", callExecutionDataObject.sample4.ToString());
        //                            //    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                            //    _nvCollection.Add("@month-int", smsmonth.ToString());
        //                            //    _nvCollection.Add("@year-int", smsyear.ToString());
        //                            //    var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
        //                            //    if (checkSample1Balance.Tables[0].Rows.Count > 0)
        //                            //    {
        //                            //        int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
        //                            //        int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
        //                            //        int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

        //                            //        if (balnc >= (qty + opening))
        //                            //        {

        //                            //        }
        //                            //        else if ((Convert.ToInt32(callExecutionDataObject.sampleQty4) + balnc) > (qty + opening))
        //                            //        {

        //                            //        }
        //                            //        else
        //                            //        {
        //                            //            var newbalance = Convert.ToInt32(callExecutionDataObject.sampleQty4) + balnc;
        //                            //            _nvCollection.Clear();
        //                            //            _nvCollection.Add("@mioid-int", callExecutionDataObject.employeeId.ToString());
        //                            //            _nvCollection.Add("@sample_id-int", callExecutionDataObject.sample1.ToString());
        //                            //            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                            //            _nvCollection.Add("@Qty-int", newbalance.ToString());
        //                            //            _nvCollection.Add("@month-int", smsmonth.ToString());
        //                            //            _nvCollection.Add("@year-int", smsyear.ToString());
        //                            //            var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

        //                            //            _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID4, Convert.ToInt32(callExecutionDataObject.sample4), Convert.ToInt32(callExecutionDataObject.sampleQty4), 4).ToList();
        //                            //        }
        //                            //    }

        //                            //}

        //                            //if (callExecutionDataObject.sample5 != "-1" && callExecutionDataObject.sampleQty5 != "")
        //                            //{

        //                            //    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample5 } });

        //                            //    int SampleProdID5 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

        //                            //    _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID5, Convert.ToInt32(callExecutionDataObject.sample5), Convert.ToInt32(callExecutionDataObject.sampleQty5), 5).ToList();

        //                            //}

        //                            #endregion

        //                            #region CallReminder

        //                            if (callExecutionDataObject.reminder1 != "-1")
        //                            {
        //                                _dl.InserData("sp_CallReminderInsert", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@DetailReminder-int", callExecutionDataObject.reminder1 }, { "@OrderBy-int", "1" } });
        //                            }

        //                            if (callExecutionDataObject.reminder2 != "-1")
        //                            {
        //                                _dl.InserData("sp_CallReminderInsert", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@DetailReminder-int", callExecutionDataObject.reminder2 }, { "@OrderBy-int", "2" } });
        //                            }

        //                            if (callExecutionDataObject.reminder3 != "-1")
        //                            {
        //                                _dl.InserData("sp_CallReminderInsert", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@DetailReminder-int", callExecutionDataObject.reminder3 }, { "@OrderBy-int", "3" } });
        //                            }


        //                            #endregion

        //                            #region CallGifts

        //                            // ReSharper disable once NotAccessedVariable
        //                            List<CallGift> insertCallGift;

        //                            if (callExecutionDataObject.gift != "-1")
        //                            {
        //                                // ReSharper disable once RedundantAssignment
        //                                insertCallGift = callExecutionDataObject.giftQty != "" ? _dataContext.sp_CallGiftsInsert(salesCallsId, Convert.ToInt32(callExecutionDataObject.gift), Convert.ToInt32(callExecutionDataObject.giftQty), 1).ToList() : _dataContext.sp_CallGiftsInsert(salesCallsId, Convert.ToInt32(callExecutionDataObject.gift), 0, 1).ToList();
        //                            }


        //                            #endregion

        //                            #region MacAddress
        //                            // macaddress = "123.213.163";
        //                            if (callExecutionDataObject.macaddress != null)
        //                            {
        //                                _nvCollection.Clear();
        //                                _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                _nvCollection.Add("@EmployesID-int", callExecutionDataObject.employeeId.ToString());
        //                                _nvCollection.Add("@macaddress-varchar(50)", callExecutionDataObject.macaddress.ToString());

        //                                var mac = _dl.GetData("sp_insert_macaddress", _nvCollection);
        //                            }
        //                            #endregion

        //                            #region Location
        //                            if (callExecutionDataObject.longitude != null && callExecutionDataObject.latitude != null)
        //                            {
        //                                _nvCollection.Clear();
        //                                _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                _nvCollection.Add("@long-varchar(100)", callExecutionDataObject.longitude.ToString());
        //                                _nvCollection.Add("@lat-varchar(100)", callExecutionDataObject.latitude.ToString());
        //                                var ch = _dl.GetData("sp_Insert_Location", _nvCollection);
        //                            }

        //                            #endregion

        //                            #region Range

        //                            string range = "";
        //                            _nvCollection.Clear();
        //                            _nvCollection.Add("@DoctorID-int", doctorId.ToString());


        //                            DataSet dslastlatlng = _dl.GetData("sp_Doctorlatlng", _nvCollection);
        //                            string getrange = ConfigurationManager.AppSettings["Range"].ToString();
        //                            if (dslastlatlng.Tables[0].Rows.Count > 0)
        //                            {
        //                                double distanceInMeters = new GeoCoordinate(Convert.ToDouble(dslastlatlng.Tables[0].Rows[0][0].ToString()), Convert.ToDouble(dslastlatlng.Tables[0].Rows[0][1].ToString()))
        //                                .GetDistanceTo(new GeoCoordinate(Convert.ToDouble(callExecutionDataObject.latitude.ToString()), Convert.ToDouble(callExecutionDataObject.longitude.ToString())));

        //                                if (distanceInMeters <= Convert.ToDouble(getrange))
        //                                {
        //                                    range = "InRange";
        //                                }
        //                                else
        //                                {
        //                                    range = "OutRange";
        //                                }

        //                                var rangestatus = _dl.GetData("sp_insertrangestatus", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@RangeStatus-varchar(50)", range.ToString() }, { "@Distance-varchar(100)", distanceInMeters.ToString() } });
        //                            }
        //                            else
        //                            {
        //                                var rangestatus = _dl.GetData("sp_insertrangestatus", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@RangeStatus-varchar(50)", "NewTag" }, { "@Distance-varchar(100)", "0.0" } });
        //                            }

        //                            #endregion

        //                            #region Doctortagging

        //                            string address = "";
        //                            long doctorid;
        //                            var dsDoctorTagPermision = _dl.GetData("sp_DoctorTagPermision", new NameValueCollection { { "@DoctorID-INT", doctorId } });
        //                            if (dsDoctorTagPermision != null)
        //                            {
        //                                if (dsDoctorTagPermision.Tables[0].Rows.Count > 0)
        //                                {
        //                                    doctorid = Convert.ToInt64(dsDoctorTagPermision.Tables[0].Rows[0]["DoctorID"].ToString());
        //                                    string url = "http://maps.googleapis.com/maps/api/geocode/xml?latlng=" + callExecutionDataObject.latitude.ToString() + "," + callExecutionDataObject.longitude.ToString() + "&sensor=false";
        //                                    WebRequest request = WebRequest.Create(url);
        //                                    using (WebResponse response = (HttpWebResponse)request.GetResponse())
        //                                    {
        //                                        using (StreamReader reader = new StreamReader(response.GetResponseStream(), Encoding.UTF8))
        //                                        {
        //                                            // empid = dt.Rows[i]["EmployeeId"].ToString();
        //                                            DataSet dsResult = new DataSet();
        //                                            dsResult.ReadXml(reader);//format in xml
        //                                            DataTable dtCoordinates = new DataTable();
        //                                            dtCoordinates.Columns.AddRange(new DataColumn[1] { new DataColumn("AreaAddress", typeof(string)) });

        //                                            if (dsResult.Tables.Count > 1)
        //                                            {
        //                                                var data = dsResult.Tables[1];
        //                                                var add1 = data.Rows[0]["formatted_address"].ToString();
        //                                                var add2 = data.Rows[2]["formatted_address"].ToString();
        //                                                string split = add1.Split(',')[0];
        //                                                address = split + " " + add2;
        //                                                // dt.Rows[i]["Address"] = address;
        //                                            }


        //                                        }
        //                                    }
        //                                }

        //                            }

        //                            #endregion

        //                            #region Doctor Location
        //                            if (callExecutionDataObject.longitude != null && callExecutionDataObject.latitude != null)
        //                            {
        //                                _nvCollection.Clear();
        //                                _nvCollection.Add("@DoctorID-int", doctorId.ToString());

        //                                DataSet dsloccount = _dl.GetData("sp_CountDoctorTagging", _nvCollection);

        //                                if (dsloccount.Tables[0].Rows.Count < 1)
        //                                {
        //                                    _nvCollection.Clear();
        //                                    _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                    _nvCollection.Add("@DoctorID-int", doctorId.ToString());
        //                                    _nvCollection.Add("@VisitShift-int", vt);
        //                                    _nvCollection.Add("@long-varchar(100)", callExecutionDataObject.longitude.ToString());
        //                                    _nvCollection.Add("@lat-varchar(100)", callExecutionDataObject.latitude.ToString());
        //                                    _nvCollection.Add("@Address-varchar(MAX)", address.ToString());
        //                                    var ch = _dl.GetData("sp_Insert_DoctorTagging", _nvCollection);
        //                                }

        //                            }
        //                            #endregion

        //                            #region CalculateDistanceForExpenseData



        //                            _nvCollection.Clear();

        //                            //_nvCollection.Add("@SalesCallID-int", salesCallsId.ToString());

        //                            //_nvCollection.Add("@AutoActivityStatus-int", callExecutionDataObject.AutoActivityStart.ToString());
        //                            _nvCollection.Add("@EmployeeID-int", callExecutionDataObject.employeeId.ToString());
        //                            _nvCollection.Add("@Salescallid-int", salesCallsId.ToString());
        //                            _nvCollection.Add("@Month-int", executedDateTime.Month.ToString());
        //                            _nvCollection.Add("@Year-int", executedDateTime.Year.ToString());
        //                            _nvCollection.Add("@Day-int", executedDateTime.Day.ToString());

        //                            DataSet distanceforExpense = _dl.GetData("sp_GetLatLongforCallDistance", _nvCollection);
        //                            if (distanceforExpense.Tables[0].Rows.Count > 0 && distanceforExpense.Tables[0].Rows[0]["LastCall"].ToString() != "LastCallLocation")
        //                            {
        //                                double distanceInMeters = new GeoCoordinate(Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][3].ToString()), Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][4].ToString()))
        //                                    .GetDistanceTo(new GeoCoordinate(Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][8].ToString()), Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][9].ToString())));
        //                                string url = "http://www.yournavigation.org/api/1.0/gosmore.php?flat=" + distanceforExpense.Tables[0].Rows[0][3].ToString() + "&flon=" + distanceforExpense.Tables[0].Rows[0][4].ToString() + "&tlat=" + distanceforExpense.Tables[0].Rows[0][8].ToString() + "&tlon=" + distanceforExpense.Tables[0].Rows[0][9].ToString() + "&sensor=false&instructions=1";
        //                                WebRequest request = WebRequest.Create(url);
        //                                using (WebResponse response = (HttpWebResponse)request.GetResponse())
        //                                {
        //                                    using (StreamReader reader = new StreamReader(response.GetResponseStream(), Encoding.UTF8))
        //                                    {
        //                                        DataSet dsResult = new DataSet();
        //                                        dsResult.ReadXml(reader);//format in xml
        //                                        GetCallDitanceForMobile = Convert.ToDouble(dsResult.Tables[0].Rows[0][2].ToString());

        //                                    }
        //                                }


        //                                Previous_Latitude = distanceforExpense.Tables[0].Rows[0][8].ToString();
        //                                Previous_Longitude = distanceforExpense.Tables[0].Rows[0][9].ToString();
        //                                startactid = Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][6].ToString());

        //                            }


        //                            else if (distanceforExpense.Tables[0].Rows[0]["LastCall"].ToString() == "LastCallLocation")
        //                            {
        //                                if (distanceforExpense.Tables[0].Rows.Count > 0 && distanceforExpense.Tables[0].Rows[0][0].ToString() != "FIRST CALL" && distanceforExpense.Tables[0].Rows[0][0].ToString() != "ACTIVITY NOT STARTED")
        //                                {
        //                                    double distanceInMeters = new GeoCoordinate(Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][1].ToString()), Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][2].ToString()))
        //                                        .GetDistanceTo(new GeoCoordinate(Convert.ToDouble(callExecutionDataObject.latitude.ToString()), Convert.ToDouble(callExecutionDataObject.longitude.ToString())));

        //                                    string url = "http://www.yournavigation.org/api/1.0/gosmore.php?flat=" + distanceforExpense.Tables[0].Rows[0][1].ToString() + "&flon=" + distanceforExpense.Tables[0].Rows[0][2].ToString() + "&tlat=" + callExecutionDataObject.latitude.ToString() + "&tlon=" + callExecutionDataObject.longitude.ToString() + "&format=geojson" + callExecutionDataObject.latitude.ToString() + "," + callExecutionDataObject.longitude.ToString() + "&sensor=false";
        //                                    WebRequest request = WebRequest.Create(url);
        //                                    using (WebResponse response = (HttpWebResponse)request.GetResponse())
        //                                    {
        //                                        using (StreamReader reader = new StreamReader(response.GetResponseStream(), Encoding.UTF8))
        //                                        {
        //                                            DataSet dsResult = new DataSet();
        //                                            dsResult.ReadXml(reader);//format in xml
        //                                            GetCallDitanceForMobile = Convert.ToDouble(dsResult.Tables[0].Rows[0][2].ToString());

        //                                        }
        //                                    }




        //                                    //  GetCallDitanceForMobile = distanceInMeters/1000;
        //                                    Previous_Latitude = distanceforExpense.Tables[0].Rows[0][1].ToString();
        //                                    Previous_Longitude = distanceforExpense.Tables[0].Rows[0][2].ToString();
        //                                    Previous_salescallid = Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][0].ToString());
        //                                    //  startactid = Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][3].ToString());

        //                                    if ((Previous_Latitude.ToString() == "0" || Previous_Latitude.ToString() == "0") &&
        //                                       (Previous_Longitude.ToString() == "0" || Previous_Longitude.ToString() == "0"))
        //                                    {
        //                                        distanceZero = "Previous Location does not exist";
        //                                    }
        //                                    else
        //                                    {
        //                                        distanceZero = "";
        //                                    }

        //                                    ////GeoCoordinate pin1 = new GeoCoordinate(Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][1].ToString()), Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][2].ToString()));
        //                                    ////GeoCoordinate pin2 = new GeoCoordinate(Convert.ToDouble(callExecutionDataObject.latitude.ToString()), Convert.ToDouble(callExecutionDataObject.longitude.ToString()));

        //                                    ////double distanceBetween = pin1.GetDistanceTo(pin2);

        //                                }
        //                                else if (distanceforExpense.Tables[0].Rows[0][0].ToString() == "FIRST CALL")
        //                                {
        //                                    distanceZero = "FIRST CALL";
        //                                }

        //                            }
        //                            else
        //                            {

        //                            }
        //                            #endregion


        //                        }
        //                    }
        //                    #region  Expense Data Deserialization

        //                    _nvCollection.Clear();



        //                    if (callExecutionDataObject.ExpenseDataJson != "[]")
        //                    {
        //                        var ExpenseData = JsonConvert.DeserializeObject<ExpenseDataJsonObject[]>(callExecutionDataObject.ExpenseDataJson);
        //                        try
        //                        {
        //                            for (int k = 0; k < ExpenseData.Length + 1; k++)
        //                            {
        //                                var ExpenseDetailData = JsonConvert.DeserializeObject<ExpenseDetailDataJsonObject[]>(ExpenseData[k].expenseData);
        //                                for (int l = 0; l < ExpenseDetailData.Length; l++)
        //                                {


        //                                    var getExpenid = _dl.GetData("sp_INSERTExpenseDetailWithCall", new NameValueCollection { 
        //                                    { "@salesCallId-int", salesCallsId.ToString() }, 
        //                                  //  { "@expenseId-int", ExpenseDetailData[l].ActivityTypeID.ToString() }, 
        //                                   // { "@ExpenseValue-int", ExpenseDetailData[l].Expense.ToString() }, 
        //                                    { "@CallDitanceForMobile-varchar(250)", callExecutionDataObject.CallDitanceForMobile.ToString() }, 
        //                                    { "@CallDitanceForportal-varchar(250)", GetCallDitanceForMobile.ToString() }, 
        //                                    { "@EmployeeId-Bigint", callExecutionDataObject.employeeId.ToString() }, 
        //                                    { "@doctorId-int", doctorId.ToString() },
        //                                    { "@PreviousSalescall-Bigint", Previous_salescallid.ToString() }, 
        //                                    { "@PreviousLongitude-Bigint", Previous_Longitude.ToString()}, 
        //                                    { "@PreviousLatitude-Bigint", Previous_Latitude.ToString()}, 
        //                                    { "@Systemvariable-Bigint", distanceZero.ToString()}, 
        //                                    { "@startactid-Bigint", startactid.ToString()}});
        //                                    Constants.ImagesSuccesLog("Date:-" + System.DateTime.Now.ToString() + "--" + "Insert In sp_INSERTExpenseDetailWithCall:- " + " SalesCallID : " + salesCallsId.ToString() + " expenseId: " + ExpenseDetailData[l].ActivityTypeID.ToString() + " CallDitanceForMobile: " + callExecutionDataObject.CallDitanceForMobile.ToString() + " CallDitanceForportal: " + GetCallDitanceForMobile.ToString() + " EmployeeId: " + callExecutionDataObject.employeeId.ToString() + " doctorId: " + doctorId.ToString());

        //                                }


        //                            }
        //                        }
        //                        catch (Exception)
        //                        {


        //                        }

        //                    }

        //                    else //if (callExecutionDataObject.CallDitanceForMobile != "0.0" || callExecutionDataObject.CallDitanceForMobile != "0")
        //                    {
        //                        var getExpenid = _dl.GetData("sp_INSERTExpenseDetailWithCall", new NameValueCollection { 
        //                                    { "@salesCallId-int", salesCallsId.ToString() }, 
        //                                  //  { "@expenseId-int", "NULL" }, 
        //                                  // { "@ExpenseValue-int", "NULL" }, 
        //                                    { "@CallDitanceForMobile-varchar(250)", callExecutionDataObject.CallDitanceForMobile.ToString() }, 
        //                                    { "@CallDitanceForportal-varchar(250)", GetCallDitanceForMobile.ToString() }, 
        //                                    { "@EmployeeId-Bigint", callExecutionDataObject.employeeId.ToString() }, 
        //                                    { "@doctorId-int", doctorId.ToString() },
        //                                    { "@PreviousSalescall-Bigint", Previous_salescallid.ToString() }, 
        //                                    { "@PreviousLongitude-Bigint", Previous_Longitude.ToString()}, 
        //                                    { "@PreviousLatitude-Bigint", Previous_Latitude.ToString()},
        //                                     { "@Systemvariable-Bigint", distanceZero.ToString()}, 
        //                                       { "@startactid-Bigint", startactid.ToString()}});
        //                        Constants.ImagesSuccesLog("Date:-" + System.DateTime.Now.ToString() + "--" + "IMsert In sp_INSERTExpenseDetailWithCall:- " + " SalesCallID : " + salesCallsId.ToString() + " CallDitanceForMobile: " + callExecutionDataObject.CallDitanceForMobile.ToString() + " CallDitanceForportal: " + GetCallDitanceForMobile.ToString() + " EmployeeId: " + callExecutionDataObject.employeeId.ToString() + " doctorId: " + doctorId.ToString());

        //                    }


        //                    #endregion

        //                    #region EdetailingJson Data Deserialization
        //                    try
        //                    {
        //                        var resultEdetailingJson = JsonConvert.DeserializeObject<EdetailingObject[]>(callExecutionDataObject.EdetailingJson);
        //                        for (int j = 0; j < resultEdetailingJson.Length; j++)
        //                        {
        //                            var resultEdetailingObject = resultEdetailingJson[j];
        //                            _nvCollection.Clear();
        //                            _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                            _nvCollection.Add("@PDFId-int", resultEdetailingObject.pdfid);
        //                            _nvCollection.Add("@PageNumId-int", resultEdetailingObject.pagenumber);
        //                            _nvCollection.Add("@TimeDuration-varchar(50)", resultEdetailingObject.timeduration);
        //                            _nvCollection.Add("@Type-int", "1"); //Type ID of PDF
        //                            var ch = _dl.GetData("sp_InsertPDFCallMonitor", _nvCollection);
        //                        }
        //                    }
        //                    catch (Exception ex)
        //                    {

        //                    }
        //                    #endregion

        //                    #region VideoEdetailingJson Data Deserialization

        //                    try
        //                    {
        //                        var resultVideoJson = JsonConvert.DeserializeObject<VideoObject[]>(callExecutionDataObject.videosDetailingJson);
        //                        if (resultVideoJson != null)
        //                        {
        //                            for (int j = 0; j < resultVideoJson.Length; j++)
        //                            {
        //                                var resultVideoObject = resultVideoJson[j];
        //                                _nvCollection.Clear();
        //                                _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                _nvCollection.Add("@PDFId-int", resultVideoObject.videoid);
        //                                _nvCollection.Add("@PageNumId-int", resultVideoObject.videoduration);
        //                                _nvCollection.Add("@TimeDuration-varchar(50)", resultVideoObject.timeduration);
        //                                _nvCollection.Add("@Type-int", "2"); //Type ID of Video 
        //                                var ch = _dl.GetData("sp_InsertPDFCallMonitor", _nvCollection);
        //                            }
        //                        }
        //                    }
        //                    catch (Exception ex)
        //                    {
        //                        //    Constants.CallErrorLog("Error on Video Detailing Insertion: " + ex.Message);

        //                    }
        //                    #endregion

        //                    #region SurveyJson Data Deserialization

        //                    var SurveyData = JsonConvert.DeserializeObject<SurveyMainUploadDataObject[]>(callExecutionDataObject.surveyFormJson);
        //                    for (int k = 0; k < SurveyData.Length; k++)
        //                    {
        //                        SurveyMainUploadDataObject var_surveymainupload = SurveyData[i];
        //                        string Sdate = "";
        //                        string SuerveyId = "";

        //                        Sdate = var_surveymainupload.SurveyDateTime;
        //                        if (!DateTime.TryParse(Sdate, out result))
        //                        {
        //                            returnString = "Survey DateTime Format Is invalid";
        //                        }

        //                        var getAllQuestions = JsonConvert.DeserializeObject<List<SurveyDataUploadDataObject>>(var_surveymainupload.QuestionObject);

        //                        var getsurveyid = _dl.GetData("sp_InserSurveyMain", new NameValueCollection { { "@FormId-int", var_surveymainupload.formid.ToString() }, { "@EmpId-INT", var_surveymainupload.EmpId.ToString() }, { "@CustId-int", var_surveymainupload.CustId.ToString() }, { "@SalescallId-bigint", salesCallsId.ToString() }, { "@SurveyName-varchar(100)", var_surveymainupload.SurveyName }, { "@Description-varchar(250)", var_surveymainupload.Description }, { "@SurveyDateTime-DateTime", Sdate.ToString() } });
        //                        if (getsurveyid.Tables[0].Rows.Count > 0)
        //                        {
        //                            SuerveyId = getsurveyid.Tables[0].Rows[0][0].ToString();
        //                        }

        //                        for (int j = 0; j < getAllQuestions.Count; j++)
        //                        {
        //                            var data = getAllQuestions[j];

        //                            var getsurveycount = _dl.GetData("sp_insertSurveyData", new NameValueCollection { { "@SurveyId-int", SuerveyId }, { "@QuestionId-INT", data.QuestionId }, { "@AnswerId-int", data.AnswerId }, { "@Other-varchar(250)", data.Other } });

        //                        }



        //                    }
        //                    #endregion

        //                    returnString = "CallSaved";
        //                    goto DoneExecution;
        //                }
        //            #endregion

        //            }



        //        }
        //        catch (Exception exception)
        //        {

        //            returnString = exception.Message;
        //            goto Error;
        //        }

        //    Error:
        //    DoneExecution:
        //        {
        //            CallExecutionResponseObject callExecutionResponseObject = new CallExecutionResponseObject();
        //            callExecutionResponseObject.CallNo = i;
        //            callExecutionResponseObject.isExecutedSuccessfully = (returnString == "CallSaved") ? true : false;
        //            callExecutionResponseObject.CallResponseMessage = returnString;
        //            CallExecutionResponse.Add(callExecutionResponseObject);
        //        }

        //    }
        //    return js.Serialize(CallExecutionResponse);
        //}

        //public string UploadCallsData_New(string fileName, Stream stream)
        //{
        //    List<CallExecutionResponseObject> CallExecutionResponse = new List<CallExecutionResponseObject>();
        //    string CreateFilePath = Path.Combine(HostingEnvironment.MapPath("~/Uploads/Files"));
        //    try
        //    {
        //        if (!Directory.Exists(CreateFilePath))
        //        {
        //            Directory.CreateDirectory(CreateFilePath);
        //        }
        //    }
        //    catch (Exception exception)
        //    {
        //        Console.Out.WriteLine(exception.Message);
        //    }

        //    string FilePath = Path.Combine(CreateFilePath, fileName);
        //    int length = 0;
        //    string returnString = null;
        //    using (FileStream writer = new FileStream(FilePath, FileMode.Create))
        //    {
        //        int readCount;
        //        var buffer = new byte[8192];
        //        while ((readCount = stream.Read(buffer, 0, buffer.Length)) != 0)
        //        {
        //            writer.Write(buffer, 0, readCount);
        //            length += readCount;
        //        }
        //    }
        //    JavaScriptSerializer js = new JavaScriptSerializer();
        //    string jsondata = System.IO.File.ReadAllText(FilePath);
        //    var CallsData = js.Deserialize<List<CallExecutionDataObjectnew>>(jsondata);
        //    for (int i = 0; i < CallsData.Count; i++)
        //    {
        //        CallExecutionDataObjectnew callExecutionDataObjectnew = CallsData[i];

        //        string date = "";

        //        string level1 = null, level2 = null, level3 = null, level4 = null, level5 = null, level6 = null;
        //        var doctorId = "";
        //        string classId = "", specialityId = "", qulificationId = "";
        //        int month = 0;
        //        int year = 0;
        //        long salesCallsId = 0;
        //        NameValueCollection _nvCollection = new NameValueCollection();
        //        try
        //        {
        //            #region CheckLeave
        //            DataSet set0 = _dl.GetData("sp_check_ZSM_MIO_leave", new NameValueCollection { { "@Startdate-date", callExecutionDataObjectnew.date }, { "@Enddate-date", callExecutionDataObjectnew.date }, { "@employeeid-INT", callExecutionDataObjectnew.employeeId } });
        //            if (set0.Tables[0].Rows.Count > 0)
        //            {
        //                returnString = set0.Tables[0].Rows[0][0].ToString() == "Available" ? "Meetingandleave" : "";
        //                if (returnString == "Meetingandleave")
        //                {
        //                    goto Error;
        //                }
        //                else
        //                {

        //                    date = callExecutionDataObjectnew.date + " " + callExecutionDataObjectnew.startTime;
        //                    DateTime result;
        //                    if (!DateTime.TryParse(date, out result))
        //                    {
        //                        returnString = "DateTime Format Is invalid";
        //                        goto Error;
        //                    }
        //                    DateTime executedDateTime = DateTime.ParseExact(callExecutionDataObjectnew.executionDateTime, "dd/MM/yyyy HH:mm:ss",
        //                                     CultureInfo.InvariantCulture);

        //                    string rectype = "S";
        //                    month = result.Month;
        //                    year = result.Year;
        //                    var smsmonth = Convert.ToInt32(result.Month);
        //                    var smsyear = Convert.ToInt32(result.Year);

        //                    var getatt = _dl.GetData("sp_CheckAttLeave_New", new NameValueCollection { { "@empid-int", callExecutionDataObjectnew.employeeId.ToString() }, { "@MDateTime-datetime", date.ToString() } });
        //                    if (getatt.Tables[0].Rows[0][0].ToString() == "alreadyLeave")
        //                    {
        //                        returnString = "leaveMarked";
        //                        goto Error;
        //                    }
        //                    else
        //                    {

        //                        #region preedays work

        //                        string dt_temp = "";
        //                        string pree_day = "0";
        //                        int aloowsDays = 24;

        //                        dt_temp = Convert.ToString(result).ToString();

        //                        _nvCollection.Clear();
        //                        _nvCollection.Add("@EmployeeId-bigint", callExecutionDataObjectnew.employeeId.ToString());

        //                        DataSet ds_p = _dl.GetData("sp_SelectEmployeePree_days_withEmpID", _nvCollection);
        //                        if (ds_p != null)
        //                        {
        //                            if (ds_p.Tables[0].Rows.Count > 0)
        //                            {
        //                                pree_day = ds_p.Tables[0].Rows[0]["pree_days"].ToString();

        //                                if (pree_day == "")
        //                                {
        //                                    pree_day = "0";
        //                                }
        //                                else if (ds_p.Tables[0].Rows[0]["pree_days"] == null)
        //                                {
        //                                    pree_day = "0";
        //                                }

        //                            }
        //                        }

        //                        if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) <= Convert.ToDateTime(System.DateTime.Now.ToString("MM/dd/yyyy")))
        //                        {
        //                            //if (DATEDIFFForHours("Hours", Convert.ToDateTime(dt_temp), Convert.ToDateTime(System.DateTime.Now)) > 24)
        //                            if (DATEDIFFForHours("Hours", Convert.ToDateTime(dt_temp), Convert.ToDateTime(executedDateTime)) > 24)
        //                            {
        //                                if (DATEDIFFForHours("Hours", Convert.ToDateTime(dt_temp), Convert.ToDateTime(executedDateTime)) > ((Convert.ToInt32(pree_day) * aloowsDays) + 0))
        //                                {
        //                                    returnString = "PreeDays";
        //                                    goto Error;
        //                                }
        //                            }
        //                        }
        //                        else
        //                        {
        //                            returnString = "Not Allowed";
        //                            goto Error;
        //                        }

        //                        #endregion

        //                        #region Employee Information
        //                        var dsEmployeeMemberShipInfo = _dl.GetData("sp_EmployeeMembershipSelectByEmployee",
        //                            new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
        //                        if (dsEmployeeMemberShipInfo != null)
        //                        {
        //                            var dsEmployeeHierarchy = _dl.GetData("sp_EmplyeeHierarchySelect",
        //                                new NameValueCollection { { "@SystemUserID-BIGINT", dsEmployeeMemberShipInfo.Tables[0].Rows[0]["SystemUserID"].ToString() } });
        //                            if (dsEmployeeHierarchy != null)
        //                            {
        //                                level1 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId1"].ToString();
        //                                level2 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId2"].ToString();
        //                                level3 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId3"].ToString();
        //                                level4 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId4"].ToString();
        //                                level5 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId5"].ToString();
        //                                level6 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId6"].ToString();
        //                            }
        //                        }
        //                        else
        //                        {
        //                            returnString = "Employee Not Found";
        //                            goto Error;
        //                        }
        //                        #endregion


        //                        var doctorCodeArray = callExecutionDataObjectnew.docDetail.Split(',');
        //                        for (int k = 0; k < doctorCodeArray.Length; k++)
        //                        {

        //                            #region Get Doctor Details
        //                            var doctorCode = doctorCodeArray[k];
        //                            //var dsGetMrDoctorDetails = _dl.GetData("sp_MRDoctorSelectByCode", new NameValueCollection { { "@EmployeeId-bigint", employeeId }, { "@Code-nvarchar-20", doctorCode } });+
        //                            var dsGetMrDoctorDetails = _dl.GetData("sp_MRDoctorSelectByCode_new", new NameValueCollection { { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@Code-nvarchar-20", doctorCode }, { "@month-int", month.ToString() }, { "@year-int", year.ToString() } });
        //                            if (dsGetMrDoctorDetails != null)
        //                            {
        //                                if (dsGetMrDoctorDetails.Tables[0].Rows.Count > 0)
        //                                {
        //                                    doctorId = dsGetMrDoctorDetails.Tables[0].Rows[0]["DoctorId"].ToString();

        //                                    #region Get Class Of Doctor

        //                                    //var doctorClassDetail = _dl.GetData("sp_ClassOfDoctorSelect",
        //                                    //    new NameValueCollection { { "@DoctorId-bigint", doctorId } });
        //                                    var doctorClassDetail = _dl.GetData("sp_ClassOfDoctorOfSPOSelect",
        //                             new NameValueCollection { { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@DoctorId-bigint", doctorId }, { "@month-int", month.ToString() }, { "@year-int", year.ToString() } });
        //                                    if (doctorClassDetail != null)
        //                                        if (doctorClassDetail.Tables[0].Rows.Count > 0)
        //                                        {
        //                                            classId = doctorClassDetail.Tables[0].Rows[0]["ClassId"].ToString();
        //                                        }
        //                                        else
        //                                        {
        //                                            returnString = "Class Of Doctor Not Found";
        //                                            if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                                        }

        //                                    #endregion

        //                                    #region Get Speciality Of Doctor

        //                                    var doctorspecialitydetail = _dl.GetData("sp_doctorspecialityselectbydoctor",
        //                                        new NameValueCollection { { "@doctorid-bigint", doctorId } });
        //                                    if (doctorspecialitydetail != null)
        //                                        if (doctorspecialitydetail.Tables[0].Rows.Count > 0)
        //                                        {
        //                                            specialityId = doctorspecialitydetail.Tables[0].Rows[0]["specialityid"].ToString();
        //                                        }
        //                                        else
        //                                        {
        //                                            returnString = "speciality of doctor not found";
        //                                            if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                                        }

        //                                    #endregion

        //                                    #region Get Qualification Of Doctor

        //                                    var doctorQualificationDetail = _dl.GetData("sp_QualificationsOfDoctorsSelectByDoctor",
        //                                        new NameValueCollection { { "@DoctorId-BIGINT", doctorId } });
        //                                    if (doctorQualificationDetail != null)
        //                                        if (doctorQualificationDetail.Tables[0].Rows.Count > 0)
        //                                        {
        //                                            qulificationId = doctorQualificationDetail.Tables[0].Rows[0]["QulificationId"].ToString();
        //                                        }
        //                                        else
        //                                        {
        //                                            returnString = "Qualification Of Doctor Not Found";
        //                                            if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                                        }

        //                                    #endregion
        //                                }
        //                            }
        //                            else
        //                            {
        //                                returnString = "Doctor Not Found in Doctor List Of MIO";
        //                                if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                            }

        //                            #endregion

        //                            #region Get Visit Shift

        //                            var hour = Convert.ToInt32(result.ToString("HH"));

        //                            string vt;
        //                            if (hour >= 0 && hour < 12)
        //                            {
        //                                vt = "1";
        //                            }
        //                            else if (hour < 17)
        //                            {
        //                                vt = "1";
        //                            }
        //                            else
        //                            {
        //                                vt = "2";
        //                            }



        //                            #endregion


        //                            #region PreSalesCallInsert

        //                            var getcountstand = _dl.GetData("getcountryStandardtime", new NameValueCollection { { "@employeeid-int", callExecutionDataObjectnew.employeeId } });
        //                            var inTimeZone = TimeZoneInfo.FindSystemTimeZoneById(getcountstand.Tables[0].Rows[0][0].ToString());
        //                            DateTime inTime = TimeZoneInfo.ConvertTime(DateTime.Now, TimeZoneInfo.Local, inTimeZone);
        //                            DataSet set = _dl.GetData("sp_check_call_execute", new NameValueCollection { { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QualificationId-int,", qulificationId }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@IsPlanned-VARCHAR-50", callExecutionDataObjectnew.isPlanned == "No" ? "NULL" : callExecutionDataObjectnew.isPlanned }, { "@visitdate-datetime", result.ToString() }, });
        //                            if (set.Tables[0].Rows.Count > 0)
        //                            {
        //                                returnString = "Already Executed";
        //                                if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                            }
        //                            else
        //                            {

        //                                if (callExecutionDataObjectnew.isPlanned == "No")
        //                                {

        //                                    DataSet set2 = _dl.GetData("sp_check_CallExecuteForUnplanned", new NameValueCollection { { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@visitdate-datetime", result.ToString() }, });
        //                                    if (set2.Tables[0].Rows.Count > 0)
        //                                    {
        //                                        returnString = "Planned";
        //                                        if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                                    }
        //                                    else
        //                                    {

        //                                        var dsPreSalesCalls = _dl.GetData("sp_PreSalesCallsInsert2", new NameValueCollection { { "@VisitDateTime-datetime", result.ToString() }, { "@Level1LevelId-int,", level1 }, { "@Level2LevelId-int,", level2 }, { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QulificationId-int,", qulificationId }, { "@CreationDateTime-datetime", inTime.ToString() }, { "@CallTypeId-int", "1" }, { "@VisitShift-int,", vt }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@InboundId-bigint", "NULL" }, { "@DocCode-INT", doctorCode }, { "@IsPlanned-VARCHAR-50", callExecutionDataObjectnew.isPlanned == "No" ? "NULL" : callExecutionDataObjectnew.isPlanned }, { "@ActivityID-INT", callExecutionDataObjectnew.activity }, { "@ReasonID-INT", callExecutionDataObjectnew.reason } });
        //                                        if (dsPreSalesCalls != null)
        //                                        {
        //                                            if (dsPreSalesCalls.Tables[0].Rows.Count > 0)
        //                                            {
        //                                                salesCallsId = Convert.ToInt64(dsPreSalesCalls.Tables[0].Rows[0]["SalesCallId"].ToString());
        //                                            }
        //                                            else
        //                                            {
        //                                                returnString = "Error In Saving In PreSalesCalls";
        //                                                if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                                            }
        //                                        }
        //                                        else
        //                                        {
        //                                            returnString = "Error In Saving In PreSalesCalls";
        //                                            if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                                        }
        //                                    }
        //                                }
        //                                else
        //                                {
        //                                    var dsPreSalesCalls = _dl.GetData("sp_PreSalesCallsInsert2", new NameValueCollection { { "@VisitDateTime-datetime", result.ToString() }, { "@Level1LevelId-int,", level1 }, { "@Level2LevelId-int,", level2 }, { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QulificationId-int,", qulificationId }, { "@CreationDateTime-datetime", inTime.ToString() }, { "@CallTypeId-int", "1" }, { "@VisitShift-int,", vt }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@InboundId-bigint", "NULL" }, { "@DocCode-INT", doctorCode }, { "@IsPlanned-VARCHAR-50", callExecutionDataObjectnew.isPlanned == "No" ? "NULL" : callExecutionDataObjectnew.isPlanned }, { "@ActivityID-INT", callExecutionDataObjectnew.activity }, { "@ReasonID-INT", callExecutionDataObjectnew.reason } });
        //                                    if (dsPreSalesCalls != null)
        //                                    {
        //                                        if (dsPreSalesCalls.Tables[0].Rows.Count > 0)
        //                                        {
        //                                            salesCallsId = Convert.ToInt64(dsPreSalesCalls.Tables[0].Rows[0]["SalesCallId"].ToString());
        //                                        }
        //                                        else
        //                                        {
        //                                            returnString = "Error In Saving In PreSalesCalls";
        //                                            if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                                        }
        //                                    }
        //                                    else
        //                                    {
        //                                        returnString = "Error In Saving In PreSalesCalls";
        //                                        if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                                    }
        //                                }
        //                            }
        //                            #endregion

        //                            if (salesCallsId != 0)
        //                            {

        //                                #region Mobile Exec Time
        //                                if (callExecutionDataObjectnew.executionDateTime != null)
        //                                {
        //                                    _nvCollection.Clear();
        //                                    _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                    _nvCollection.Add("@mobexectime-datetime", executedDateTime.ToString());

        //                                    var mac = _dl.GetData("sp_Insert_MobExecutionTime", _nvCollection);
        //                                }
        //                                #endregion

        //                                #region CallDoctors


        //                                // ReSharper disable once UnusedVariable
        //                                if (_dataContext != null)
        //                                {
        //                                    var insertCallDoctors = _dataContext.sp_CallDoctorsInsert(salesCallsId, Convert.ToInt64(doctorId)).ToList();
        //                                }

        //                                #endregion

        //                                #region CallVisitors


        //                                if (!Convert.ToBoolean(callExecutionDataObjectnew.coaching))
        //                                {
        //                                    // ReSharper disable once UnusedVariable
        //                                    var dsIsCoaching = _dl.InserData("sp_InsertCallCoaching",
        //                                        new NameValueCollection
        //                {
        //                    {"@SalesCallId-INT", salesCallsId.ToString()},
        //                    {"@IsCoaching-VARCHAR-50", "0"}
        //                });
        //                                }
        //                                else
        //                                {
        //                                    // ReSharper disable once UnusedVariable
        //                                    var dsIsCoaching = _dl.InserData("sp_InsertCallCoaching",
        //                                        new NameValueCollection
        //                {
        //                    {"@SalesCallId-INT", salesCallsId.ToString()},
        //                    {"@IsCoaching-VARCHAR-50", "1"}
        //                });
        //                                }

        //                                long jvflma = 0;
        //                                long jvslma = 0;
        //                                long jvftma = callExecutionDataObjectnew.jvftm == "true" ? 1 : 0;
        //                                //NSM
        //                                long jvbuha = 0;
        //                                //GM
        //                                long jvgma = 0;
        //                                long jvcooa = callExecutionDataObjectnew.jvcoo == "true" ? 1 : 0;
        //                                long jvcda = callExecutionDataObjectnew.jvcd == "true" ? 1 : 0;
        //                                long jvpma = callExecutionDataObjectnew.jvpm == "true" ? 1 : 0;
        //                                if (Convert.ToBoolean(callExecutionDataObjectnew.jvflm))
        //                                {
        //                                    var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
        //                                    if (dsFlm != null)
        //                                    {
        //                                        if (dsFlm.Tables[0].Rows.Count > 0)
        //                                        {
        //                                            jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                        }
        //                                    }
        //                                }
        //                                if (Convert.ToBoolean(callExecutionDataObjectnew.jvslm))
        //                                {
        //                                    var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
        //                                    if (dsFlm != null)
        //                                    {
        //                                        if (dsFlm.Tables[0].Rows.Count > 0)
        //                                        {
        //                                            jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                            var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(jvflma) } });
        //                                            if (dsSlm != null)
        //                                            {
        //                                                if (dsSlm.Tables[0].Rows.Count > 0)
        //                                                {
        //                                                    jvslma = Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                                }
        //                                            }
        //                                        }
        //                                    }
        //                                }
        //                                //Check if Joint Visit is with NSM
        //                                if (Convert.ToBoolean(callExecutionDataObjectnew.jvbuh))
        //                                {
        //                                    var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
        //                                    if (dsFlm != null)
        //                                    {
        //                                        if (dsFlm.Tables[0].Rows.Count > 0)
        //                                        {
        //                                            jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                            //var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(jvflma) } });
        //                                            var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });
        //                                            if (dsSlm != null)
        //                                            {
        //                                                if (dsSlm.Tables[0].Rows.Count > 0)
        //                                                {
        //                                                    jvslma = Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                                    var dsBuh = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });

        //                                                    if (dsBuh != null)
        //                                                    {
        //                                                        if (dsBuh.Tables[0].Rows.Count > 0)
        //                                                        {

        //                                                            jvbuha = Convert.ToInt64(dsBuh.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                                        }
        //                                                    }
        //                                                }
        //                                            }
        //                                        }
        //                                    }
        //                                }
        //                                //Check if Joint Visit is with GM
        //                                if (Convert.ToBoolean(callExecutionDataObjectnew.jvgm))
        //                                {
        //                                    var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
        //                                    if (dsFlm != null)
        //                                    {
        //                                        if (dsFlm.Tables[0].Rows.Count > 0)
        //                                        {
        //                                            jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                            //var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(jvflma) } });
        //                                            var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });
        //                                            if (dsSlm != null)
        //                                            {
        //                                                if (dsSlm.Tables[0].Rows.Count > 0)
        //                                                {
        //                                                    jvslma = Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                                    var dsBuh = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });

        //                                                    if (dsBuh != null)
        //                                                    {
        //                                                        if (dsBuh.Tables[0].Rows.Count > 0)
        //                                                        {
        //                                                            jvbuha = Convert.ToInt64(dsBuh.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                                            var dsGm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsBuh.Tables[0].Rows[0]["ManagerId"].ToString())) } });
        //                                                            if (dsGm != null)
        //                                                            {
        //                                                                if (dsGm.Tables[0].Rows.Count > 0)
        //                                                                {

        //                                                                    jvgma = Convert.ToInt64((dsGm.Tables[0].Rows[0]["ManagerId"].ToString() == "" ? "1" : dsGm.Tables[0].Rows[0]["ManagerId"].ToString()));
        //                                                                }
        //                                                            }
        //                                                        }
        //                                                    }
        //                                                }
        //                                            }
        //                                        }
        //                                    }
        //                                }
        //                                jvflma = callExecutionDataObjectnew.jvflm == "true" ? jvflma : 0;
        //                                jvslma = callExecutionDataObjectnew.jvslm == "true" ? jvslma : 0;
        //                                jvbuha = callExecutionDataObjectnew.jvbuh == "true" ? jvbuha : 0;
        //                                jvgma = callExecutionDataObjectnew.jvgm == "true" ? jvgma : 0;

        //                                //if (Convert.ToBoolean(callExecutionDataObject.jvho1))
        //                                //{
        //                                //    jvHO1 = 1;
        //                                //}
        //                                //if (Convert.ToBoolean(callExecutionDataObject.jvho2))
        //                                //{
        //                                //    jvHO2 = 1;
        //                                //}
        //                                //// ReSharper disable once UnusedVariable
        //                                long? nullable = null;
        //                                if (_dataContext != null)
        //                                {

        //                                    /* var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew(salesCallsId, Convert.ToInt64(callExecutionDataObject.employeeId),
        //                                         ((jvflma == 0) ? nullable : jvflma),
        //                                         ((jvslma == 0) ? nullable : jvslma),
        //                                         ((jvHO1 == 0) ? nullable : jvHO1),
        //                                         ((jvHO2 == 0) ? nullable : jvHO2)).ToList();*/
        //                                    var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew_withjv8(salesCallsId, Convert.ToInt64(callExecutionDataObjectnew.employeeId),
        //                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvflm)) ? nullable : jvflma),
        //                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvslm)) ? nullable : jvslma),
        //                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvftm)) ? nullable : jvftma),
        //                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvbuh)) ? nullable : jvbuha),
        //                                        //ye parameter sahih lgane hain filhal temporary lgaye hen 
        //                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvgm)) ? nullable : jvgma),
        //                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvcoo)) ? nullable : jvcooa),
        //                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvcd)) ? nullable : jvcda),
        //                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvpm)) ? nullable : jvpma)
        //                                ).ToList();

        //                                    /*if (jvflma == 0 && jvslma == 0)
        //                                    {
        //                                        var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew(salesCallsId, Convert.ToInt64(callExecutionDataObject.employeeId), null, null, null, null).ToList();
        //                                    }
        //                                    else
        //                                    {
        //                                        var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew(salesCallsId, Convert.ToInt64(callExecutionDataObject.employeeId), jvflma, jvslma, 0, 0).ToList();
        //                                    }*/

        //                                }

        //                                #endregion

        //                                #region VisitFeedBack

        //                                if (_dataContext != null)
        //                                {
        //                                    // ReSharper disable once UnusedVariable
        //                                    var insertFeedBack = _dataContext.sp_VisitFeedBackInsert(salesCallsId, callExecutionDataObjectnew.callNotes).ToList();
        //                                }

        //                                #endregion

        //                                #region CallProducts

        //                                // ReSharper disable once NotAccessedVariable
        //                                List<CallProduct> insertCallProduct;

        //                                if (callExecutionDataObjectnew.product1 != "-1")
        //                                {
        //                                    if (_dataContext != null)
        //                                    {
        //                                        // ReSharper disable once RedundantAssignment
        //                                        //insertCallProduct =
        //                                        //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product1), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product1), 1).ToList();
        //                                        insertCallProduct =
        //                                            _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnew.product1), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnew.product1), 1).ToList();

        //                                        if (callExecutionDataObjectnew.p1Notes != "" && insertCallProduct.Count > 0)
        //                                        {
        //                                            var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
        //                                                new NameValueCollection { 
        //                                        { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() }, 
        //                                        { "@Comment-varchar(max),", callExecutionDataObjectnew.p1Notes} 
        //                                        });
        //                                        }
        //                                    }


        //                                }


        //                                if (callExecutionDataObjectnew.product2 != "-1")
        //                                {
        //                                    if (_dataContext != null)
        //                                    {
        //                                        // ReSharper disable once RedundantAssignment
        //                                        //insertCallProduct =
        //                                        //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product2), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product1), 2).ToList();
        //                                        insertCallProduct =
        //                                            _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnew.product2), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnew.product2), 2).ToList();

        //                                        if (callExecutionDataObjectnew.p2Notes != "" && insertCallProduct.Count > 0)
        //                                        {
        //                                            var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
        //                                                new NameValueCollection { 
        //                                        { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() }, 
        //                                        { "@Comment-varchar(max),", callExecutionDataObjectnew.p2Notes} 
        //                                        });
        //                                        }

        //                                    }
        //                                }

        //                                if (callExecutionDataObjectnew.product3 != "-1")
        //                                {
        //                                    if (_dataContext != null)
        //                                    {
        //                                        // ReSharper disable once RedundantAssignment
        //                                        //insertCallProduct =
        //                                        //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product3), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product3), 3).ToList();
        //                                        insertCallProduct =
        //                                            _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnew.product3), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnew.product3), 3).ToList();

        //                                        if (callExecutionDataObjectnew.p3Notes != "" && insertCallProduct.Count > 0)
        //                                        {
        //                                            var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
        //                                                new NameValueCollection { 
        //                                        { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() }, 
        //                                        { "@Comment-varchar(max),", callExecutionDataObjectnew.p3Notes} 
        //                                        });
        //                                        }
        //                                    }
        //                                }

        //                                if (callExecutionDataObjectnew.product4 != "-1")
        //                                {
        //                                    if (_dataContext != null)
        //                                    {
        //                                        // ReSharper disable once RedundantAssignment
        //                                        //insertCallProduct =
        //                                        //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product4), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product4), 4).ToList();
        //                                        insertCallProduct =
        //                                            _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnew.product4), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnew.product4), 4).ToList();

        //                                        if (callExecutionDataObjectnew.p4Notes != "" && insertCallProduct.Count > 0)
        //                                        {
        //                                            var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
        //                                                new NameValueCollection { 
        //                                        { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() }, 
        //                                        { "@Comment-varchar(max),", callExecutionDataObjectnew.p4Notes} 
        //                                        });
        //                                        }
        //                                    }

        //                                }



        //                                #endregion

        //                                #region CallProductSamples

        //                                if (callExecutionDataObjectnew.sample1 != "-1" && callExecutionDataObjectnew.sampleQty1 != "")
        //                                {

        //                                    // var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample1 } });

        //                                    // int SampleProdID1 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());


        //                                    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObjectnew.sample1 } });

        //                                    int SampleProdID1 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
        //                                    _nvCollection.Clear();
        //                                    _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                    _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample1.ToString());
        //                                    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                    _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                    _nvCollection.Add("@year-int", smsyear.ToString());
        //                                    var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
        //                                    if (checkSample1Balance.Tables[0].Rows.Count > 0)
        //                                    {
        //                                        int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
        //                                        int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
        //                                        int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

        //                                        if (balnc >= (qty + opening))
        //                                        {

        //                                        }
        //                                        else if ((Convert.ToInt32(callExecutionDataObjectnew.sampleQty1) + balnc) > (qty + opening))
        //                                        {

        //                                        }
        //                                        else
        //                                        {
        //                                            var newbalance = Convert.ToInt32(callExecutionDataObjectnew.sampleQty1) + balnc;
        //                                            _nvCollection.Clear();
        //                                            _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                            _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample1.ToString());
        //                                            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                            _nvCollection.Add("@Qty-int", newbalance.ToString());
        //                                            _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                            _nvCollection.Add("@year-int", smsyear.ToString());
        //                                            var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

        //                                            _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID1, Convert.ToInt32(callExecutionDataObjectnew.sample1), Convert.ToInt32(callExecutionDataObjectnew.sampleQty1), 1).ToList();
        //                                        }
        //                                    }

        //                                }

        //                                if (callExecutionDataObjectnew.sample2 != "-1" && callExecutionDataObjectnew.sampleQty2 != "")
        //                                {
        //                                    // var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample2 } });

        //                                    // int SampleProdID2 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

        //                                    // _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID2, Convert.ToInt32(callExecutionDataObject.sample2), Convert.ToInt32(callExecutionDataObject.sampleQty2), 2).ToList();


        //                                    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObjectnew.sample2 } });

        //                                    int SampleProdID2 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
        //                                    // int SampleProdID2 = Convert.ToInt32(sample2);
        //                                    _nvCollection.Clear();
        //                                    _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                    _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample2.ToString());
        //                                    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                    _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                    _nvCollection.Add("@year-int", smsyear.ToString());
        //                                    var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
        //                                    if (checkSample1Balance.Tables[0].Rows.Count > 0)
        //                                    {
        //                                        int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
        //                                        int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
        //                                        int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

        //                                        if (balnc >= (qty + opening))
        //                                        {

        //                                        }
        //                                        else if ((Convert.ToInt32(callExecutionDataObjectnew.sampleQty2) + balnc) > (qty + opening))
        //                                        {

        //                                        }
        //                                        else
        //                                        {
        //                                            var newbalance = Convert.ToInt32(callExecutionDataObjectnew.sampleQty2) + balnc;
        //                                            _nvCollection.Clear();
        //                                            _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                            _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample2.ToString());
        //                                            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                            _nvCollection.Add("@Qty-int", newbalance.ToString());
        //                                            _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                            _nvCollection.Add("@year-int", smsyear.ToString());
        //                                            var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

        //                                            _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID2, Convert.ToInt32(callExecutionDataObjectnew.sample2), Convert.ToInt32(callExecutionDataObjectnew.sampleQty2), 2).ToList();
        //                                        }
        //                                    }

        //                                }

        //                                if (callExecutionDataObjectnew.sample3 != "-1" && callExecutionDataObjectnew.sampleQty3 != "")
        //                                {

        //                                    // var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample3 } });

        //                                    //   int SampleProdID3 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

        //                                    //   _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID3, Convert.ToInt32(callExecutionDataObject.sample3), Convert.ToInt32(callExecutionDataObject.sampleQty3), 3).ToList();

        //                                    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObjectnew.sample3 } });

        //                                    int SampleProdID3 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
        //                                    //  int SampleProdID3 = Convert.ToInt32(sample3);
        //                                    _nvCollection.Clear();
        //                                    _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                    _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample3.ToString());
        //                                    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                    _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                    _nvCollection.Add("@year-int", smsyear.ToString());
        //                                    var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
        //                                    if (checkSample1Balance.Tables[0].Rows.Count > 0)
        //                                    {
        //                                        int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
        //                                        int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
        //                                        int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

        //                                        if (balnc >= (qty + opening))
        //                                        {

        //                                        }
        //                                        else if ((Convert.ToInt32(callExecutionDataObjectnew.sampleQty3) + balnc) > (qty + opening))
        //                                        {

        //                                        }
        //                                        else
        //                                        {
        //                                            var newbalance = Convert.ToInt32(callExecutionDataObjectnew.sampleQty3) + balnc;
        //                                            _nvCollection.Clear();
        //                                            _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                            _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample3.ToString());
        //                                            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                            _nvCollection.Add("@Qty-int", newbalance.ToString());
        //                                            _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                            _nvCollection.Add("@year-int", smsyear.ToString());
        //                                            var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

        //                                            _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID3, Convert.ToInt32(callExecutionDataObjectnew.sample3), Convert.ToInt32(callExecutionDataObjectnew.sampleQty3), 3).ToList();
        //                                        }
        //                                    }

        //                                }


        //                                //if (callExecutionDataObject.sample4 != "-1" && callExecutionDataObject.sampleQty4 != "")
        //                                //{

        //                                //  //  var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample4 } });

        //                                // //   int SampleProdID4 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

        //                                //  //  _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID4, Convert.ToInt32(callExecutionDataObject.sample4), Convert.ToInt32(callExecutionDataObject.sampleQty4), 4).ToList();

        //                                //    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample4 } });

        //                                //    int SampleProdID4 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
        //                                //    //int SampleProdID4 = Convert.ToInt32(sample4);
        //                                //    _nvCollection.Clear();
        //                                //    _nvCollection.Add("@mioid-int", callExecutionDataObject.employeeId.ToString());
        //                                //    _nvCollection.Add("@sample_id-int", callExecutionDataObject.sample4.ToString());
        //                                //    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                //    _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                //    _nvCollection.Add("@year-int", smsyear.ToString());
        //                                //    var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
        //                                //    if (checkSample1Balance.Tables[0].Rows.Count > 0)
        //                                //    {
        //                                //        int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
        //                                //        int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
        //                                //        int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

        //                                //        if (balnc >= (qty + opening))
        //                                //        {

        //                                //        }
        //                                //        else if ((Convert.ToInt32(callExecutionDataObject.sampleQty4) + balnc) > (qty + opening))
        //                                //        {

        //                                //        }
        //                                //        else
        //                                //        {
        //                                //            var newbalance = Convert.ToInt32(callExecutionDataObject.sampleQty4) + balnc;
        //                                //            _nvCollection.Clear();
        //                                //            _nvCollection.Add("@mioid-int", callExecutionDataObject.employeeId.ToString());
        //                                //            _nvCollection.Add("@sample_id-int", callExecutionDataObject.sample1.ToString());
        //                                //            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                //            _nvCollection.Add("@Qty-int", newbalance.ToString());
        //                                //            _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                //            _nvCollection.Add("@year-int", smsyear.ToString());
        //                                //            var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

        //                                //            _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID4, Convert.ToInt32(callExecutionDataObject.sample4), Convert.ToInt32(callExecutionDataObject.sampleQty4), 4).ToList();
        //                                //        }
        //                                //    }

        //                                //}

        //                                //if (callExecutionDataObject.sample5 != "-1" && callExecutionDataObject.sampleQty5 != "")
        //                                //{

        //                                //    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample5 } });

        //                                //    int SampleProdID5 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

        //                                //    _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID5, Convert.ToInt32(callExecutionDataObject.sample5), Convert.ToInt32(callExecutionDataObject.sampleQty5), 5).ToList();

        //                                //}

        //                                #endregion

        //                                #region CallReminder

        //                                if (callExecutionDataObjectnew.reminder1 != "-1")
        //                                {
        //                                    _dl.InserData("sp_CallReminderInsert", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@DetailReminder-int", callExecutionDataObjectnew.reminder1 }, { "@OrderBy-int", "1" } });
        //                                }

        //                                if (callExecutionDataObjectnew.reminder2 != "-1")
        //                                {
        //                                    _dl.InserData("sp_CallReminderInsert", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@DetailReminder-int", callExecutionDataObjectnew.reminder2 }, { "@OrderBy-int", "2" } });
        //                                }

        //                                if (callExecutionDataObjectnew.reminder3 != "-1")
        //                                {
        //                                    _dl.InserData("sp_CallReminderInsert", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@DetailReminder-int", callExecutionDataObjectnew.reminder3 }, { "@OrderBy-int", "3" } });
        //                                }


        //                                #endregion

        //                                #region CallGifts

        //                                // ReSharper disable once NotAccessedVariable
        //                                List<CallGift> insertCallGift;

        //                                if (callExecutionDataObjectnew.gift != "-1")
        //                                {
        //                                    // ReSharper disable once RedundantAssignment
        //                                    insertCallGift = callExecutionDataObjectnew.giftQty != "" ? _dataContext.sp_CallGiftsInsert(salesCallsId, Convert.ToInt32(callExecutionDataObjectnew.gift), Convert.ToInt32(callExecutionDataObjectnew.giftQty), 1).ToList() : _dataContext.sp_CallGiftsInsert(salesCallsId, Convert.ToInt32(callExecutionDataObjectnew.gift), 0, 1).ToList();
        //                                }


        //                                #endregion

        //                                #region MacAddress
        //                                // macaddress = "123.213.163";
        //                                if (callExecutionDataObjectnew.macaddress != null)
        //                                {
        //                                    _nvCollection.Clear();
        //                                    _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                    _nvCollection.Add("@EmployesID-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                    _nvCollection.Add("@macaddress-varchar(50)", callExecutionDataObjectnew.macaddress.ToString());

        //                                    var mac = _dl.GetData("sp_insert_macaddress", _nvCollection);
        //                                }
        //                                #endregion

        //                                #region Location
        //                                if (callExecutionDataObjectnew.longitude != null && callExecutionDataObjectnew.latitude != null)
        //                                {
        //                                    _nvCollection.Clear();
        //                                    _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                    _nvCollection.Add("@long-varchar(100)", callExecutionDataObjectnew.longitude.ToString());
        //                                    _nvCollection.Add("@lat-varchar(100)", callExecutionDataObjectnew.latitude.ToString());
        //                                    var ch = _dl.GetData("sp_Insert_Location", _nvCollection);
        //                                }

        //                                #endregion

        //                                #region Fake Users Calls Data

        //                                try
        //                                {
        //                                    if (callExecutionDataObjectnew.flag != null)
        //                                    {
        //                                        _nvCollection.Clear();

        //                                        _nvCollection.Clear();
        //                                        _nvCollection.Add("@SalesCalID-int", salesCallsId.ToString());
        //                                        _nvCollection.Add("@Flag-int", ((Convert.ToBoolean(callExecutionDataObjectnew.flag.ToString())) ? "1" : "0"));
        //                                        _nvCollection.Add("@AppVersion-varchar(100)", callExecutionDataObjectnew.appversion);
        //                                        _nvCollection.Add("@MacAddress-varchar(100)", callExecutionDataObjectnew.macaddress);
        //                                        _nvCollection.Add("@ApplicationPackages-text", callExecutionDataObjectnew.applicationpackages);
        //                                        _nvCollection.Add("@ModelNumber-text", callExecutionDataObjectnew.modelnumber);
        //                                        var ch = _dl.GetData("sp_fakeUsersData", _nvCollection);


        //                                    }
        //                                }
        //                                catch (Exception)
        //                                {

        //                                    //throw;
        //                                }



        //                                #endregion

        //                                #region Range

        //                                string range = "";
        //                                _nvCollection.Clear();
        //                                _nvCollection.Add("@DoctorID-int", doctorId.ToString());


        //                                DataSet dslastlatlng = _dl.GetData("sp_Doctorlatlng", _nvCollection);
        //                                string getrange = ConfigurationManager.AppSettings["Range"].ToString();
        //                                if (dslastlatlng.Tables[0].Rows.Count > 0)
        //                                {
        //                                    double distanceInMeters = new GeoCoordinate(Convert.ToDouble(dslastlatlng.Tables[0].Rows[0][0].ToString()), Convert.ToDouble(dslastlatlng.Tables[0].Rows[0][1].ToString()))
        //                                    .GetDistanceTo(new GeoCoordinate(Convert.ToDouble(callExecutionDataObjectnew.latitude.ToString()), Convert.ToDouble(callExecutionDataObjectnew.longitude.ToString())));

        //                                    if (distanceInMeters <= Convert.ToDouble(getrange))
        //                                    {
        //                                        range = "InRange";
        //                                    }
        //                                    else
        //                                    {
        //                                        range = "OutRange";
        //                                    }

        //                                    var rangestatus = _dl.GetData("sp_insertrangestatus", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@RangeStatus-varchar(50)", range.ToString() }, { "@Distance-varchar(100)", distanceInMeters.ToString() } });
        //                                }
        //                                else
        //                                {
        //                                    var rangestatus = _dl.GetData("sp_insertrangestatus", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@RangeStatus-varchar(50)", "NewTag" }, { "@Distance-varchar(100)", "0.0" } });
        //                                }

        //                                #endregion

        //                                #region Doctortagging

        //                                string address = "";
        //                                long doctorid;
        //                                var dsDoctorTagPermision = _dl.GetData("sp_DoctorTagPermision", new NameValueCollection { { "@DoctorID-INT", doctorId } });
        //                                if (dsDoctorTagPermision != null)
        //                                {
        //                                    if (dsDoctorTagPermision.Tables[0].Rows.Count > 0)
        //                                    {
        //                                        doctorid = Convert.ToInt64(dsDoctorTagPermision.Tables[0].Rows[0]["DoctorID"].ToString());
        //                                        string url = "http://maps.googleapis.com/maps/api/geocode/xml?latlng=" + callExecutionDataObjectnew.latitude.ToString() + "," + callExecutionDataObjectnew.longitude.ToString() + "&sensor=false";
        //                                        WebRequest request = WebRequest.Create(url);
        //                                        using (WebResponse response = (HttpWebResponse)request.GetResponse())
        //                                        {
        //                                            using (StreamReader reader = new StreamReader(response.GetResponseStream(), Encoding.UTF8))
        //                                            {
        //                                                // empid = dt.Rows[i]["EmployeeId"].ToString();
        //                                                DataSet dsResult = new DataSet();
        //                                                dsResult.ReadXml(reader);//format in xml
        //                                                DataTable dtCoordinates = new DataTable();
        //                                                dtCoordinates.Columns.AddRange(new DataColumn[1] { new DataColumn("AreaAddress", typeof(string)) });

        //                                                if (dsResult.Tables.Count > 1)
        //                                                {
        //                                                    var data = dsResult.Tables[1];
        //                                                    var add1 = data.Rows[0]["formatted_address"].ToString();
        //                                                    var add2 = data.Rows[2]["formatted_address"].ToString();
        //                                                    string split = add1.Split(',')[0];
        //                                                    address = split + " " + add2;
        //                                                    // dt.Rows[i]["Address"] = address;
        //                                                }


        //                                            }
        //                                        }
        //                                    }

        //                                }

        //                                #endregion

        //                                #region Doctor Location
        //                                if (callExecutionDataObjectnew.longitude != null && callExecutionDataObjectnew.latitude != null)
        //                                {
        //                                    _nvCollection.Clear();
        //                                    _nvCollection.Add("@DoctorID-int", doctorId.ToString());

        //                                    DataSet dsloccount = _dl.GetData("sp_CountDoctorTagging", _nvCollection);

        //                                    if (dsloccount.Tables[0].Rows.Count < 1)
        //                                    {
        //                                        _nvCollection.Clear();
        //                                        _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                        _nvCollection.Add("@DoctorID-int", doctorId.ToString());
        //                                        _nvCollection.Add("@VisitShift-int", vt);
        //                                        _nvCollection.Add("@long-varchar(100)", callExecutionDataObjectnew.longitude.ToString());
        //                                        _nvCollection.Add("@lat-varchar(100)", callExecutionDataObjectnew.latitude.ToString());
        //                                        _nvCollection.Add("@Address-varchar(MAX)", address.ToString());
        //                                        var ch = _dl.GetData("sp_Insert_DoctorTagging", _nvCollection);
        //                                    }

        //                                }
        //                                #endregion

        //                            }
        //                        }

        //                        #region EdetailingJson Data Deserialization
        //                        try
        //                        {
        //                            var resultEdetailingJson = JsonConvert.DeserializeObject<EdetailingObject[]>(callExecutionDataObjectnew.EdetailingJson);
        //                            for (int j = 0; j < resultEdetailingJson.Length; j++)
        //                            {
        //                                var resultEdetailingObject = resultEdetailingJson[j];
        //                                _nvCollection.Clear();
        //                                _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                _nvCollection.Add("@PDFId-int", resultEdetailingObject.pdfid);
        //                                _nvCollection.Add("@PageNumId-int", resultEdetailingObject.pagenumber);
        //                                _nvCollection.Add("@TimeDuration-varchar(50)", resultEdetailingObject.timeduration);
        //                                _nvCollection.Add("@Type-int", "1"); //Type ID of PDF
        //                                var ch = _dl.GetData("sp_InsertPDFCallMonitor", _nvCollection);
        //                            }
        //                        }
        //                        catch (Exception ex)
        //                        {

        //                        }
        //                        #endregion

        //                        #region VideoEdetailingJson Data Deserialization

        //                        try
        //                        {
        //                            var resultVideoJson = JsonConvert.DeserializeObject<VideoObject[]>(callExecutionDataObjectnew.videosDetailingJson);
        //                            if (resultVideoJson != null)
        //                            {
        //                                for (int j = 0; j < resultVideoJson.Length; j++)
        //                                {
        //                                    var resultVideoObject = resultVideoJson[j];
        //                                    _nvCollection.Clear();
        //                                    _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                    _nvCollection.Add("@PDFId-int", resultVideoObject.videoid);
        //                                    _nvCollection.Add("@PageNumId-int", resultVideoObject.videoduration);
        //                                    _nvCollection.Add("@TimeDuration-varchar(50)", resultVideoObject.timeduration);
        //                                    _nvCollection.Add("@Type-int", "2"); //Type ID of Video 
        //                                    var ch = _dl.GetData("sp_InsertPDFCallMonitor", _nvCollection);
        //                                }
        //                            }
        //                        }
        //                        catch (Exception ex)
        //                        {
        //                            //    Constants.CallErrorLog("Error on Video Detailing Insertion: " + ex.Message);

        //                        }
        //                        #endregion

        //                        #region SurveyJson Data Deserialization

        //                        var SurveyData = JsonConvert.DeserializeObject<SurveyMainUploadDataObject[]>(callExecutionDataObjectnew.surveyFormJson);
        //                        for (int k = 0; k < SurveyData.Length; k++)
        //                        {
        //                            SurveyMainUploadDataObject var_surveymainupload = SurveyData[i];
        //                            string Sdate = "";
        //                            string SuerveyId = "";

        //                            Sdate = var_surveymainupload.SurveyDateTime;
        //                            if (!DateTime.TryParse(Sdate, out result))
        //                            {
        //                                returnString = "Survey DateTime Format Is invalid";
        //                            }

        //                            var getAllQuestions = JsonConvert.DeserializeObject<List<SurveyDataUploadDataObject>>(var_surveymainupload.QuestionObject);

        //                            var getsurveyid = _dl.GetData("sp_InserSurveyMain", new NameValueCollection { { "@FormId-int", var_surveymainupload.formid.ToString() }, { "@EmpId-INT", var_surveymainupload.EmpId.ToString() }, { "@CustId-int", var_surveymainupload.CustId.ToString() }, { "@SalescallId-bigint", salesCallsId.ToString() }, { "@SurveyName-varchar(100)", var_surveymainupload.SurveyName }, { "@Description-varchar(250)", var_surveymainupload.Description }, { "@SurveyDateTime-DateTime", Sdate.ToString() } });
        //                            if (getsurveyid.Tables[0].Rows.Count > 0)
        //                            {
        //                                SuerveyId = getsurveyid.Tables[0].Rows[0][0].ToString();
        //                            }

        //                            for (int j = 0; j < getAllQuestions.Count; j++)
        //                            {
        //                                var data = getAllQuestions[j];

        //                                var getsurveycount = _dl.GetData("sp_insertSurveyData", new NameValueCollection { { "@SurveyId-int", SuerveyId }, { "@QuestionId-INT", data.QuestionId }, { "@AnswerId-int", data.AnswerId }, { "@Other-varchar(250)", data.Other } });

        //                            }



        //                        }
        //                        #endregion

        //                        returnString = "CallSaved";
        //                        goto DoneExecution;
        //                    }
        //            #endregion

        //                }


        //            }
        //        }
        //        catch (Exception exception)
        //        {

        //            returnString = exception.Message;
        //            Constants.ErrorLog("Exception Raising From MobileService.svc.cs UploadCallsData_New | " + exception.Message + " | Stack Trace | " + exception.StackTrace + ";");
        //            goto Error;
        //        }

        //    Error:
        //    DoneExecution:
        //        {
        //            CallExecutionResponseObject callExecutionResponseObject = new CallExecutionResponseObject();
        //            callExecutionResponseObject.CallNo = i;
        //            callExecutionResponseObject.isExecutedSuccessfully = (returnString == "CallSaved") ? true : false;
        //            callExecutionResponseObject.CallResponseMessage = returnString;
        //            CallExecutionResponse.Add(callExecutionResponseObject);
        //        }

        //    }
        //    return js.Serialize(CallExecutionResponse);
        //}
        #endregion

        public string UploadExpenseCall(string fileName, Stream stream)
        {
            List<CallExecutionResponseObject> CallExecutionResponse = new List<CallExecutionResponseObject>();
            string CreateFilePath = Path.Combine(HostingEnvironment.MapPath("~/Uploads/ExpenseFiles"));
            // DateTime date = DateTime.Now;

            try
            {
                if (!Directory.Exists(CreateFilePath))
                {
                    Directory.CreateDirectory(CreateFilePath);
                }
            }
            catch (Exception exception)
            {
                Console.Out.WriteLine(exception.Message);
            }

            string FilePath = Path.Combine(CreateFilePath, fileName);
            int length = 0;
            string returnString = null;
            string pree_day = "";
            string selecteddate = "";
            using (FileStream writer = new FileStream(FilePath, FileMode.Create))
            {
                int readCount;
                var buffer = new byte[8192];
                while ((readCount = stream.Read(buffer, 0, buffer.Length)) != 0)
                {
                    writer.Write(buffer, 0, readCount);
                    length += readCount;
                }
            }

            JavaScriptSerializer js = new JavaScriptSerializer();
            string jsondata = System.IO.File.ReadAllText(FilePath);

            // IndiviualExpenseDataDetailObject savestartActivityDetailObject = js.Deserialize<IndiviualExpenseDataDetailObject>(jsondata);
            var CallsData = js.Deserialize<List<IndiviualExpenseDataDetailObject>>(jsondata);

            NameValueCollection _nvCollection = new NameValueCollection();

            bool allowexecution = false;

            for (int i = 0; i < CallsData.Count; i++)
            {
                #region Application Version Check
                try
                {
                    string allowedApplicationVersions = Constants.GetAllowedApplicationVersions();
                    if (allowedApplicationVersions.ToLower() == "all")
                    {
                        allowexecution = true;
                    }
                    else
                    {
                        string[] allowedapps = allowedApplicationVersions.Split(',');
                        for (int j = 0; j < allowedapps.Length; j++)
                        {
                            if (allowedapps[j] == CallsData[i].AppVersion)
                            {
                                allowexecution = true;
                                break;
                            }
                        }
                    }
                }
                catch (Exception ex)
                {
                    throw ex;
                }

                if (!allowexecution)
                {
                    returnString = "Application version not allowed to excute the calls";
                    goto Error;
                }

                #endregion



                #region  PreeDays
                selecteddate = CallsData[i].date;
                DateTime result;
                if (!DateTime.TryParse(selecteddate, out result))
                {
                    returnString = "DateTime Format Is invalid";
                    goto Error;
                }
                DateTime executedDateTime = DateTime.ParseExact(CallsData[i].executionDateTime, "dd/MM/yyyy HH:mm:ss",
                                 CultureInfo.InvariantCulture);

                string dt_temp = "";
                dt_temp = Convert.ToString(result).ToString();
                _nvCollection.Clear();
                _nvCollection.Add("@EmployeeId-bigint", CallsData[i].EmployeeId.ToString());

                DataSet ds_p = _dl.GetData("sp_SelectEmployeePree_days_withEmpID", _nvCollection);
                if (ds_p != null)
                {
                    if (ds_p.Tables[0].Rows.Count > 0)
                    {
                        pree_day = ds_p.Tables[0].Rows[0]["pree_days"].ToString();

                        if (pree_day == "")
                        {
                            pree_day = "0";
                        }
                        else if (ds_p.Tables[0].Rows[0]["pree_days"] == null)
                        {
                            pree_day = "0";
                        }

                    }
                }
                if (DateTime.Now.ToString("MM") != Convert.ToDateTime(dt_temp).ToString("MM"))
                {
                    if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) <= Convert.ToDateTime(System.DateTime.Now.ToString("MM/dd/yyyy")))
                    {
                        if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) != Convert.ToDateTime(executedDateTime.ToString("MM/dd/yyyy")))
                        {
                            if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) <= Convert.ToDateTime(executedDateTime.ToString("MM/dd/yyyy")))
                            {

                                if (DATEDIFF("Days", Convert.ToDateTime(dt_temp), Convert.ToDateTime(executedDateTime)) > Convert.ToInt32(pree_day))
                                {
                                    returnString = "PreeDays";
                                    goto Error;
                                }
                            }
                            else
                            {
                                returnString = "Not Allowed";
                                goto Error;
                            }
                        }
                    }
                    else
                    {
                        returnString = "Not Allowed";
                        goto Error;
                    }
                }
                #endregion


                expensedata[] expense = js.Deserialize<expensedata[]>(CallsData[i].expenseData);


                foreach (expensedata expenseData in expense)
                {
                    _nvCollection.Clear();

                    _nvCollection.Add("@EmployeeID-int", CallsData[i].EmployeeId.ToString());
                    _nvCollection.Add("@ActivityId-int", expenseData.ActivityTypeID.ToString());
                    _nvCollection.Add("@Month-int", result.Month.ToString());
                    _nvCollection.Add("@Year-int", result.Year.ToString());
                    _nvCollection.Add("@Day-int", result.Day.ToString());
                    DataSet ChkOutBackAndNightStay = _dl.GetData("sp_chkOutBackAndNightStayExecuted", _nvCollection);

                    if (ChkOutBackAndNightStay.Tables[0].Rows[0][0].ToString() == "Already Executed")
                    {
                        returnString = "Already Activity Executed";
                        goto DoneExecution;
                    }

                    _nvCollection.Clear();

                    _nvCollection.Add("@EmployeeID-int", CallsData[i].EmployeeId.ToString());
                    _nvCollection.Add("@DoctorId-int", expenseData.DoctorID.ToString());
                    _nvCollection.Add("@CreateDate-datetime", CallsData[i].date.ToString());
                    DataSet ExecutionDate = _dl.GetData("sp_GetCurrentDoctorExecutionTime", _nvCollection);
                    string date = ExecutionDate.Tables[0].Rows[0][0].ToString();

                    fileNameObject[] imgfile = js.Deserialize<fileNameObject[]>(expenseData.File);
                    foreach (fileNameObject Fileimg in imgfile)
                    {
                        try
                        {
                            #region Add new Activity here

                            DataSet getExpenid = _dl.GetData("sp_INSERTExpenseDetailWithCall_old", new NameValueCollection { 
                                  { "@salesCallId-int", "NULL" }, 
                                  { "@expenseId-int", expenseData.ActivityTypeID.ToString() }, 
                                  { "@ExpenseValue-varchar(250)", expenseData.Expense.ToString() }, 
                                  { "@CallDitanceForMobile-varchar(250)", "NULL" }, 
                                  { "@CallDitanceForportal-varchar(250)", "NULL" }, 
                                  { "@ImagePath-varchar(500)", Fileimg.filePath.ToString() }, 
                                  { "@IsActive-bit", "0" }, 
                                  { "@ImageDetail-varchar(250)", "Indiviual Expense Call Image Path" }, 
                                  { "@latitude-varchar(250)", CallsData[i].Latitude.ToString() }, 
                                  { "@longitude-varchar(250)", CallsData[i].Longitude.ToString() }, 
                                  { "@EmployeeId-Bigint", CallsData[i].EmployeeId.ToString() }, 
                                  { "@ExecutionDateTime-Bigint", date.ToString() }, 
                                  { "@DoctorId-int", expenseData.DoctorID.ToString() } 
                            });
                            returnString = getExpenid.Tables[0].Rows[0][0].ToString();

                            #endregion
                        }
                        catch (Exception exception)
                        {
                            returnString = exception.Message;
                            goto Error;
                        }
                    }
                }

                //IndiviualExpenseDataDetailObject savestartActivityDetailObject = CallsData[i];
                //returnString = "IndiviualExpenseSaved";
                goto DoneExecution;

            Error:
            DoneExecution:
                {
                    CallExecutionResponseObject callExecutionResponseObject = new CallExecutionResponseObject();
                    callExecutionResponseObject.CallNo = i;
                    callExecutionResponseObject.isExecutedSuccessfully = (returnString == "IndiviualExpenseSaved") ? true : false;
                    callExecutionResponseObject.CallResponseMessage = returnString;
                    CallExecutionResponse.Add(callExecutionResponseObject);
                }
            }

            return js.Serialize(CallExecutionResponse);
        }



        public string UploadExpenseCall_New(string fileName, Stream stream)
        {
            List<CallExecutionResponseObject> CallExecutionResponse = new List<CallExecutionResponseObject>();
            string CreateFilePath = Path.Combine(HostingEnvironment.MapPath("~/Uploads/ExpenseFiles"));
            // DateTime date = DateTime.Now;

            try
            {
                if (!Directory.Exists(CreateFilePath))
                {
                    Directory.CreateDirectory(CreateFilePath);
                }
            }
            catch (Exception exception)
            {
                Console.Out.WriteLine(exception.Message);
            }

            string FilePath = Path.Combine(CreateFilePath, fileName);
            int length = 0;
            string returnString = null;
            string pree_day = "";
            string selecteddate = "";
            using (FileStream writer = new FileStream(FilePath, FileMode.Create))
            {
                int readCount;
                var buffer = new byte[8192];
                while ((readCount = stream.Read(buffer, 0, buffer.Length)) != 0)
                {
                    writer.Write(buffer, 0, readCount);
                    length += readCount;
                }
            }

            JavaScriptSerializer js = new JavaScriptSerializer();
            string jsondata = System.IO.File.ReadAllText(FilePath);

            // IndiviualExpenseDataDetailObject savestartActivityDetailObject = js.Deserialize<IndiviualExpenseDataDetailObject>(jsondata);
            var CallsData = js.Deserialize<List<IndiviualExpenseDataDetailObject>>(jsondata);

            NameValueCollection _nvCollection = new NameValueCollection();

            bool allowexecution = false;

            for (int i = 0; i < CallsData.Count; i++)
            {
                #region Application Version Check
                try
                {
                    string allowedApplicationVersions = Constants.GetAllowedApplicationVersions();
                    if (allowedApplicationVersions.ToLower() == "all")
                    {
                        allowexecution = true;
                    }
                    else
                    {
                        string[] allowedapps = allowedApplicationVersions.Split(',');
                        for (int j = 0; j < allowedapps.Length; j++)
                        {
                            if (allowedapps[j] == CallsData[i].AppVersion)
                            {
                                allowexecution = true;
                                break;
                            }
                        }
                    }
                }
                catch (Exception ex)
                {
                    throw ex;
                }

                if (!allowexecution)
                {
                    returnString = "Application version not allowed to excute the calls";
                    goto Error;
                }

                #endregion

                #region Unique Device ID and Session Restriction
                allowexecution = false;
                try
                {
                    string executionrestrictionflag = Constants.GetExecutionRestrictionFlag();
                    if (executionrestrictionflag.ToLower() == "false")
                    {
                        allowexecution = true;
                    }
                    else
                    {
                        var dsData = _dl.GetData("sp_CheckEmployeeDeviceAndSessionStatus_IMEI", new NameValueCollection {
                            { "@EmployeeId-BIGINT", CallsData[i].EmployeeId } ,
                               { "@IMEIAddress-VARCHAR", CallsData[i].IMEIAddress } ,
                            { "@MacAddress-VARCHAR", "-" } ,
                            { "@Type-VARCHAR", "ExpenseExecutionApp" }
                        });
                        if (dsData != null)
                        {
                            if (dsData.Tables[0].Rows.Count > 0)
                            {
                                if (dsData.Tables[0].Rows[0][0].ToString() == "OK")
                                {
                                    allowexecution = true;
                                }
                                else
                                {
                                    returnString = dsData.Tables[0].Rows[0][0].ToString();
                                }
                            }
                        }
                    }
                }
                catch (Exception ex)
                {
                    throw ex;
                }

                if (!allowexecution)
                {

                    returnString = (returnString == "") ? "ServerError" : returnString;
                    goto Error;

                }



                #endregion


                #region  PreeDays
                selecteddate = CallsData[i].date;
                DateTime result;
                if (!DateTime.TryParse(selecteddate, out result))
                {
                    returnString = "DateTime Format Is invalid";
                    goto Error;
                }
                DateTime executedDateTime = DateTime.ParseExact(CallsData[i].executionDateTime, "dd/MM/yyyy HH:mm:ss",
                                 CultureInfo.InvariantCulture);

                string dt_temp = "";
                dt_temp = Convert.ToString(result).ToString();
                _nvCollection.Clear();
                _nvCollection.Add("@EmployeeId-bigint", CallsData[i].EmployeeId.ToString());

                DataSet ds_p = _dl.GetData("sp_SelectEmployeePree_days_withEmpID", _nvCollection);
                if (ds_p != null)
                {
                    if (ds_p.Tables[0].Rows.Count > 0)
                    {
                        pree_day = ds_p.Tables[0].Rows[0]["pree_days"].ToString();

                        if (pree_day == "")
                        {
                            pree_day = "0";
                        }
                        else if (ds_p.Tables[0].Rows[0]["pree_days"] == null)
                        {
                            pree_day = "0";
                        }

                    }
                }
                if (DateTime.Now.ToString("MM") != Convert.ToDateTime(dt_temp).ToString("MM"))
                {
                    if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) <= Convert.ToDateTime(System.DateTime.Now.ToString("MM/dd/yyyy")))
                    {
                        if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) != Convert.ToDateTime(executedDateTime.ToString("MM/dd/yyyy")))
                        {
                            if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) <= Convert.ToDateTime(executedDateTime.ToString("MM/dd/yyyy")))
                            {

                                if (DATEDIFF("Days", Convert.ToDateTime(dt_temp), Convert.ToDateTime(executedDateTime)) > Convert.ToInt32(pree_day))
                                {
                                    returnString = "PreeDays";
                                    goto Error;
                                }
                            }
                            else
                            {
                                returnString = "Not Allowed";
                                goto Error;
                            }
                        }
                    }
                    else
                    {
                        returnString = "Not Allowed";
                        goto Error;
                    }
                }
                #endregion


                expensedata[] expense = js.Deserialize<expensedata[]>(CallsData[i].expenseData);


                foreach (expensedata expenseData in expense)
                {
                    _nvCollection.Clear();

                    _nvCollection.Add("@EmployeeID-int", CallsData[i].EmployeeId.ToString());
                    _nvCollection.Add("@ActivityId-int", expenseData.ActivityTypeID.ToString());
                    _nvCollection.Add("@Month-int", result.Month.ToString());
                    _nvCollection.Add("@Year-int", result.Year.ToString());
                    _nvCollection.Add("@Day-int", result.Day.ToString());
                    DataSet ChkOutBackAndNightStay = _dl.GetData("sp_chkOutBackAndNightStayExecuted", _nvCollection);

                    if (ChkOutBackAndNightStay.Tables[0].Rows[0][0].ToString() == "Already Executed")
                    {
                        returnString = "Already Activity Executed";
                        goto DoneExecution;
                    }

                    _nvCollection.Clear();

                    _nvCollection.Add("@EmployeeID-int", CallsData[i].EmployeeId.ToString());
                    _nvCollection.Add("@DoctorId-int", expenseData.DoctorID.ToString());
                    _nvCollection.Add("@CreateDate-datetime", CallsData[i].date.ToString());
                    DataSet ExecutionDate = _dl.GetData("sp_GetCurrentDoctorExecutionTime", _nvCollection);
                    string date = ExecutionDate.Tables[0].Rows[0][0].ToString();

                    //fileNameObject[] imgfile = js.Deserialize<fileNameObject[]>(expenseData.File);
                    //foreach (fileNameObject Fileimg in imgfile)
                    //{
                    try
                    {
                        #region Add new Activity here

                        DataSet getExpenid = _dl.GetData("sp_INSERTExpenseDetailWithCall_old", new NameValueCollection {
                                  { "@salesCallId-int", "NULL" },
                                  { "@expenseId-int", expenseData.ActivityTypeID.ToString() },
                                  { "@ExpenseValue-varchar(250)", expenseData.Expense.ToString() },
                                  { "@CallDitanceForMobile-varchar(250)", "NULL" },
                                  { "@CallDitanceForportal-varchar(250)", "NULL" },
                                  { "@ImagePath-varchar(500)","" },//Fileimg.filePath.ToString() },
                                  { "@IsActive-bit", "0" },
                                  { "@ImageDetail-varchar(250)", "Indiviual Expense Call Image Path" },
                                  { "@latitude-varchar(250)", CallsData[i].Latitude.ToString() },
                                  { "@longitude-varchar(250)", CallsData[i].Longitude.ToString() },
                                  { "@EmployeeId-Bigint", CallsData[i].EmployeeId.ToString() },
                                  { "@ExecutionDateTime-Bigint", date.ToString() },
                                  { "@DoctorId-int", expenseData.DoctorID.ToString() }
                            });
                        returnString = getExpenid.Tables[0].Rows[0][0].ToString();

                        #endregion
                    }
                    catch (Exception exception)
                    {
                        returnString = exception.Message;
                        goto Error;
                    }
                    //}
                }

                //IndiviualExpenseDataDetailObject savestartActivityDetailObject = CallsData[i];
                //returnString = "IndiviualExpenseSaved";
                goto DoneExecution;

            Error:
            DoneExecution:
                {
                    CallExecutionResponseObject callExecutionResponseObject = new CallExecutionResponseObject();
                    callExecutionResponseObject.CallNo = i;
                    callExecutionResponseObject.isExecutedSuccessfully = (returnString == "IndiviualExpenseSaved") ? true : false;
                    callExecutionResponseObject.CallResponseMessage = returnString;
                    CallExecutionResponse.Add(callExecutionResponseObject);
                }
            }

            return js.Serialize(CallExecutionResponse);
        }

        #region Comment By Rahim on Behalf of Ahmer
        //public string UploadSurveyData(string fileName, Stream stream)
        //{
        //    List<SurrveyExecutionResponseObject> SaveDataResponse = new List<SurrveyExecutionResponseObject>();
        //    string FilePath = Path.Combine(HostingEnvironment.MapPath("~/Uploads/Files"), fileName);
        //    int length = 0;
        //    using (FileStream writer = new FileStream(FilePath, FileMode.Create))
        //    {
        //        int readCount;
        //        var buffer = new byte[8192];
        //        while ((readCount = stream.Read(buffer, 0, buffer.Length)) != 0)
        //        {
        //            writer.Write(buffer, 0, readCount);
        //            length += readCount;
        //        }
        //    }
        //    JavaScriptSerializer js = new JavaScriptSerializer();

        //    string jsondata = System.IO.File.ReadAllText(FilePath);
        //    var SurveyData = js.Deserialize<List<SurveyMainUploadDataObject>>(jsondata);
        //    string returnString;
        //    for (int i = 0; i < SurveyData.Count; i++)
        //    {
        //        SurveyMainUploadDataObject var_surveymainupload = SurveyData[i];
        //        string date = "";
        //        string SuerveyId = "";
        //        try
        //        {
        //            date = var_surveymainupload.SurveyDateTime;
        //            DateTime result;
        //            if (!DateTime.TryParse(date, out result))
        //            {
        //                returnString = "DateTime Format Is invalid";
        //                goto Error;
        //            }

        //            var getAllQuestions = JsonConvert.DeserializeObject<List<SurveyDataUploadDataObject>>(var_surveymainupload.QuestionObject);

        //            var getsurveyid = _dl.GetData("sp_InserSurveyMain", new NameValueCollection { { "@FormId-int", var_surveymainupload.formid.ToString() }, { "@EmpId-INT", var_surveymainupload.EmpId.ToString() }, { "@CustId-int", var_surveymainupload.CustId.ToString() }, { "@SalescallId-bigint", "0" }, { "@SurveyName-varchar(100)", var_surveymainupload.SurveyName }, { "@Description-varchar(250)", var_surveymainupload.Description }, { "@SurveyDateTime-DateTime", date.ToString() } });
        //            if (getsurveyid.Tables[0].Rows.Count > 0)
        //            {
        //                SuerveyId = getsurveyid.Tables[0].Rows[0][0].ToString();
        //            }

        //            for (int j = 0; j < getAllQuestions.Count; j++)
        //            {
        //                var data = getAllQuestions[j];

        //                var getsurveycount = _dl.GetData("sp_insertSurveyData", new NameValueCollection { { "@SurveyId-int", SuerveyId }, { "@QuestionId-INT", data.QuestionId }, { "@AnswerId-int", data.AnswerId }, { "@Other-varchar(250)", data.Other } });

        //            }


        //            returnString = "DataSaved";
        //            goto DoneInsertion;
        //        }
        //        catch (Exception exception)
        //        {
        //            //returnString = "Message: " + exception.Message + " - StackTrace: " + exception.StackTrace;		
        //            returnString = exception.Message;
        //            Constants.ErrorLog("Exception Raising From MobileService.svc.cs UploadQuizData | " + exception.Message + " | Stack Trace | " + exception.StackTrace + ";");
        //            goto Error;
        //        }

        //    Error:
        //    DoneInsertion:
        //        {
        //            SurrveyExecutionResponseObject saveResponseObject = new SurrveyExecutionResponseObject();
        //            saveResponseObject.RecordNo = Convert.ToInt32(SuerveyId);
        //            saveResponseObject.isInsertedSuccessfully = (returnString == "DataSaved") ? true : false;
        //            saveResponseObject.ResponseMessage = returnString;
        //            SaveDataResponse.Add(saveResponseObject);
        //        }

        //    }
        //    return js.Serialize(SaveDataResponse);

        //}

        //public string UploadCallsData_Expense(string fileName, Stream stream)
        //{
        //    List<CallExecutionResponseObject> CallExecutionResponse = new List<CallExecutionResponseObject>();
        //    string CreateFilePath = Path.Combine(HostingEnvironment.MapPath("~/Uploads/Files"));
        //    try
        //    {
        //        if (!Directory.Exists(CreateFilePath))
        //        {
        //            Directory.CreateDirectory(CreateFilePath);
        //        }
        //    }
        //    catch (Exception exception)
        //    {
        //        Console.Out.WriteLine(exception.Message);
        //    }

        //    string FilePath = Path.Combine(CreateFilePath, fileName);
        //    int length = 0;
        //    string returnString = null;
        //    using (FileStream writer = new FileStream(FilePath, FileMode.Create))
        //    {
        //        int readCount;
        //        var buffer = new byte[8192];
        //        while ((readCount = stream.Read(buffer, 0, buffer.Length)) != 0)
        //        {
        //            writer.Write(buffer, 0, readCount);
        //            length += readCount;
        //        }
        //    }
        //    JavaScriptSerializer js = new JavaScriptSerializer();
        //    string jsondata = System.IO.File.ReadAllText(FilePath);
        //    var CallsData = js.Deserialize<List<CallExecutionDataObjectnew>>(jsondata);
        //    for (int i = 0; i < CallsData.Count; i++)
        //    {
        //        CallExecutionDataObjectnew callExecutionDataObjectnew = CallsData[i];

        //        string date = "";

        //        string level1 = null, level2 = null, level3 = null, level4 = null, level5 = null, level6 = null;
        //        var doctorId = "";
        //        string classId = "", specialityId = "", qulificationId = "";
        //        int month = 0;
        //        int year = 0;
        //        long salesCallsId = 0;

        //        double GetCallDitanceForMobile = 0.0;
        //        double Previous_salescallid = 0;
        //        double Flag = 0;
        //        string Previous_Longitude = "";
        //        string Previous_Latitude = "";
        //        string distanceZero = "";
        //        double LastDocCity = 0;
        //        NameValueCollection _nvCollection = new NameValueCollection();
        //        try
        //        {
        //            #region CheckLeave
        //            DataSet set0 = _dl.GetData("sp_check_ZSM_MIO_leave", new NameValueCollection { { "@Startdate-date", callExecutionDataObjectnew.date }, { "@Enddate-date", callExecutionDataObjectnew.date }, { "@employeeid-INT", callExecutionDataObjectnew.employeeId } });
        //            if (set0.Tables[0].Rows.Count > 0)
        //            {
        //                returnString = set0.Tables[0].Rows[0][0].ToString() == "Available" ? "Meetingandleave" : "";
        //                if (returnString == "Meetingandleave")
        //                {
        //                    goto Error;
        //                }
        //                else
        //                {

        //                    date = callExecutionDataObjectnew.date + " " + callExecutionDataObjectnew.startTime;
        //                    DateTime result;
        //                    if (!DateTime.TryParse(date, out result))
        //                    {
        //                        returnString = "DateTime Format Is invalid";
        //                        goto Error;
        //                    }
        //                    DateTime executedDateTime = DateTime.ParseExact(callExecutionDataObjectnew.executionDateTime, "dd/MM/yyyy HH:mm:ss",
        //                                     CultureInfo.InvariantCulture);

        //                    string rectype = "S";
        //                    month = result.Month;
        //                    year = result.Year;
        //                    var smsmonth = Convert.ToInt32(result.Month);
        //                    var smsyear = Convert.ToInt32(result.Year);

        //                    var getatt = _dl.GetData("sp_CheckAttLeave_New", new NameValueCollection { { "@empid-int", callExecutionDataObjectnew.employeeId.ToString() }, { "@MDateTime-datetime", date.ToString() } });
        //                    if (getatt.Tables[0].Rows[0][0].ToString() == "alreadyLeave")
        //                    {
        //                        returnString = "leaveMarked";
        //                        goto Error;
        //                    }
        //                    else
        //                    {

        //                        #region preedays work

        //                        string dt_temp = "";
        //                        string pree_day = "0";
        //                        int aloowsDays = 24;

        //                        dt_temp = Convert.ToString(result).ToString();

        //                        _nvCollection.Clear();
        //                        _nvCollection.Add("@EmployeeId-bigint", callExecutionDataObjectnew.employeeId.ToString());

        //                        DataSet ds_p = _dl.GetData("sp_SelectEmployeePree_days_withEmpID", _nvCollection);
        //                        if (ds_p != null)
        //                        {
        //                            if (ds_p.Tables[0].Rows.Count > 0)
        //                            {
        //                                pree_day = ds_p.Tables[0].Rows[0]["pree_days"].ToString();

        //                                if (pree_day == "")
        //                                {
        //                                    pree_day = "0";
        //                                }
        //                                else if (ds_p.Tables[0].Rows[0]["pree_days"] == null)
        //                                {
        //                                    pree_day = "0";
        //                                }

        //                            }
        //                        }

        //                        //if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) <= Convert.ToDateTime(System.DateTime.Now.ToString("MM/dd/yyyy")))
        //                        //{
        //                        //    if (DATEDIFFForHours("Hours", Convert.ToDateTime(dt_temp), Convert.ToDateTime(System.DateTime.Now)) > 24)
        //                        //    {
        //                        //        if (DATEDIFFForHours("Hours", Convert.ToDateTime(dt_temp), Convert.ToDateTime(System.DateTime.Now)) > ((Convert.ToInt32(pree_day) * aloowsDays) + 0))
        //                        //        {
        //                        //            returnString = "PreeDays";
        //                        //            goto Error;
        //                        //        }
        //                        //    }
        //                        //}

        //                        if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) <= Convert.ToDateTime(System.DateTime.Now.ToString("MM/dd/yyyy")))
        //                        {
        //                            if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) != Convert.ToDateTime(executedDateTime.ToString("MM/dd/yyyy")))
        //                            {
        //                                if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) <= Convert.ToDateTime(executedDateTime.ToString("MM/dd/yyyy")))
        //                                {
        //                                    if (DATEDIFF("Days", Convert.ToDateTime(dt_temp), Convert.ToDateTime(executedDateTime)) > Convert.ToInt32(pree_day))
        //                                    {
        //                                        returnString = "PreeDays";
        //                                        goto Error;
        //                                    }
        //                                }
        //                                else
        //                                {
        //                                    returnString = "Not Allowed";
        //                                    goto Error;
        //                                }
        //                            }
        //                        }
        //                        else
        //                        {
        //                            returnString = "Not Allowed";
        //                            goto Error;
        //                        }

        //                        #endregion

        //                        #region Employee Information
        //                        var dsEmployeeMemberShipInfo = _dl.GetData("sp_EmployeeMembershipSelectByEmployee",
        //                            new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
        //                        if (dsEmployeeMemberShipInfo != null)
        //                        {
        //                            var dsEmployeeHierarchy = _dl.GetData("sp_EmplyeeHierarchySelect",
        //                                new NameValueCollection { { "@SystemUserID-BIGINT", dsEmployeeMemberShipInfo.Tables[0].Rows[0]["SystemUserID"].ToString() } });
        //                            if (dsEmployeeHierarchy != null)
        //                            {
        //                                level1 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId1"].ToString();
        //                                level2 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId2"].ToString();
        //                                level3 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId3"].ToString();
        //                                level4 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId4"].ToString();
        //                                level5 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId5"].ToString();
        //                                level6 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId6"].ToString();
        //                            }
        //                        }
        //                        else
        //                        {
        //                            returnString = "Employee Not Found";
        //                            goto Error;
        //                        }
        //                        #endregion


        //                        var doctorCodeArray = callExecutionDataObjectnew.docDetail.Split(',');
        //                        for (int k = 0; k < doctorCodeArray.Length; k++)
        //                        {

        //                            #region Get Doctor Details
        //                            var doctorCode = doctorCodeArray[k];
        //                            //var dsGetMrDoctorDetails = _dl.GetData("sp_MRDoctorSelectByCode", new NameValueCollection { { "@EmployeeId-bigint", employeeId }, { "@Code-nvarchar-20", doctorCode } });+
        //                            var dsGetMrDoctorDetails = _dl.GetData("sp_MRDoctorSelectByCode_new", new NameValueCollection { { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@Code-nvarchar-20", doctorCode }, { "@month-int", month.ToString() }, { "@year-int", year.ToString() } });
        //                            if (dsGetMrDoctorDetails != null)
        //                            {
        //                                if (dsGetMrDoctorDetails.Tables[0].Rows.Count > 0)
        //                                {
        //                                    doctorId = dsGetMrDoctorDetails.Tables[0].Rows[0]["DoctorId"].ToString();

        //                                    #region Get Class Of Doctor

        //                                    //var doctorClassDetail = _dl.GetData("sp_ClassOfDoctorSelect",
        //                                    //    new NameValueCollection { { "@DoctorId-bigint", doctorId } });
        //                                    var doctorClassDetail = _dl.GetData("sp_ClassOfDoctorOfSPOSelect",
        //                             new NameValueCollection { { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@DoctorId-bigint", doctorId }, { "@month-int", month.ToString() }, { "@year-int", year.ToString() } });
        //                                    if (doctorClassDetail != null)
        //                                        if (doctorClassDetail.Tables[0].Rows.Count > 0)
        //                                        {
        //                                            classId = doctorClassDetail.Tables[0].Rows[0]["ClassId"].ToString();
        //                                        }
        //                                        else
        //                                        {
        //                                            returnString = "Class Of Doctor Not Found";
        //                                            if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                                        }

        //                                    #endregion

        //                                    #region Get Speciality Of Doctor

        //                                    var doctorspecialitydetail = _dl.GetData("sp_doctorspecialityselectbydoctor",
        //                                        new NameValueCollection { { "@doctorid-bigint", doctorId } });
        //                                    if (doctorspecialitydetail != null)
        //                                        if (doctorspecialitydetail.Tables[0].Rows.Count > 0)
        //                                        {
        //                                            specialityId = doctorspecialitydetail.Tables[0].Rows[0]["specialityid"].ToString();
        //                                        }
        //                                        else
        //                                        {
        //                                            returnString = "speciality of doctor not found";
        //                                            if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                                        }

        //                                    #endregion

        //                                    #region Get Qualification Of Doctor

        //                                    var doctorQualificationDetail = _dl.GetData("sp_QualificationsOfDoctorsSelectByDoctor",
        //                                        new NameValueCollection { { "@DoctorId-BIGINT", doctorId } });
        //                                    if (doctorQualificationDetail != null)
        //                                        if (doctorQualificationDetail.Tables[0].Rows.Count > 0)
        //                                        {
        //                                            qulificationId = doctorQualificationDetail.Tables[0].Rows[0]["QulificationId"].ToString();
        //                                        }
        //                                        else
        //                                        {
        //                                            returnString = "Qualification Of Doctor Not Found";
        //                                            if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                                        }

        //                                    #endregion
        //                                }
        //                            }
        //                            else
        //                            {
        //                                returnString = "Doctor Not Found in Doctor List Of MIO";
        //                                if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                            }

        //                            #endregion

        //                            #region Get Visit Shift

        //                            var hour = Convert.ToInt32(result.ToString("HH"));

        //                            string vt;
        //                            if (hour >= 0 && hour < 12)
        //                            {
        //                                vt = "1";
        //                            }
        //                            else if (hour < 17)
        //                            {
        //                                vt = "1";
        //                            }
        //                            else
        //                            {
        //                                vt = "2";
        //                            }



        //                            #endregion


        //                            #region PreSalesCallInsert

        //                            var getcountstand = _dl.GetData("getcountryStandardtime", new NameValueCollection { { "@employeeid-int", callExecutionDataObjectnew.employeeId } });
        //                            var inTimeZone = TimeZoneInfo.FindSystemTimeZoneById(getcountstand.Tables[0].Rows[0][0].ToString());
        //                            DateTime inTime = TimeZoneInfo.ConvertTime(DateTime.Now, TimeZoneInfo.Local, inTimeZone);
        //                            DataSet set = _dl.GetData("sp_check_call_execute", new NameValueCollection { { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QualificationId-int,", qulificationId }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@IsPlanned-VARCHAR-50", callExecutionDataObjectnew.isPlanned == "No" ? "NULL" : callExecutionDataObjectnew.isPlanned }, { "@visitdate-datetime", result.ToString() }, });
        //                            if (set.Tables[0].Rows.Count > 0)
        //                            {
        //                                returnString = "Already Executed";
        //                                if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                            }
        //                            else
        //                            {

        //                                if (callExecutionDataObjectnew.isPlanned == "No")
        //                                {

        //                                    DataSet set2 = _dl.GetData("sp_check_CallExecuteForUnplanned", new NameValueCollection { { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@visitdate-datetime", result.ToString() }, });
        //                                    if (set2.Tables[0].Rows.Count > 0)
        //                                    {
        //                                        returnString = "Planned";
        //                                        if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                                    }
        //                                    else
        //                                    {

        //                                        var dsPreSalesCalls = _dl.GetData("sp_PreSalesCallsInsert2", new NameValueCollection { { "@VisitDateTime-datetime", result.ToString() }, { "@Level1LevelId-int,", level1 }, { "@Level2LevelId-int,", level2 }, { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QulificationId-int,", qulificationId }, { "@CreationDateTime-datetime", inTime.ToString() }, { "@CallTypeId-int", "1" }, { "@VisitShift-int,", vt }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@InboundId-bigint", "NULL" }, { "@DocCode-INT", doctorCode }, { "@IsPlanned-VARCHAR-50", callExecutionDataObjectnew.isPlanned == "No" ? "NULL" : callExecutionDataObjectnew.isPlanned }, { "@ActivityID-INT", callExecutionDataObjectnew.activity }, { "@ReasonID-INT", callExecutionDataObjectnew.reason } });
        //                                        if (dsPreSalesCalls != null)
        //                                        {
        //                                            if (dsPreSalesCalls.Tables[0].Rows.Count > 0)
        //                                            {
        //                                                salesCallsId = Convert.ToInt64(dsPreSalesCalls.Tables[0].Rows[0]["SalesCallId"].ToString());
        //                                            }
        //                                            else
        //                                            {
        //                                                returnString = "Error In Saving In PreSalesCalls";
        //                                                if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                                            }
        //                                        }
        //                                        else
        //                                        {
        //                                            returnString = "Error In Saving In PreSalesCalls";
        //                                            if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                                        }
        //                                    }
        //                                }
        //                                else
        //                                {
        //                                    var dsPreSalesCalls = _dl.GetData("sp_PreSalesCallsInsert2", new NameValueCollection { { "@VisitDateTime-datetime", result.ToString() }, { "@Level1LevelId-int,", level1 }, { "@Level2LevelId-int,", level2 }, { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QulificationId-int,", qulificationId }, { "@CreationDateTime-datetime", inTime.ToString() }, { "@CallTypeId-int", "1" }, { "@VisitShift-int,", vt }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@InboundId-bigint", "NULL" }, { "@DocCode-INT", doctorCode }, { "@IsPlanned-VARCHAR-50", callExecutionDataObjectnew.isPlanned == "No" ? "NULL" : callExecutionDataObjectnew.isPlanned }, { "@ActivityID-INT", callExecutionDataObjectnew.activity }, { "@ReasonID-INT", callExecutionDataObjectnew.reason } });
        //                                    if (dsPreSalesCalls != null)
        //                                    {
        //                                        if (dsPreSalesCalls.Tables[0].Rows.Count > 0)
        //                                        {
        //                                            salesCallsId = Convert.ToInt64(dsPreSalesCalls.Tables[0].Rows[0]["SalesCallId"].ToString());
        //                                        }
        //                                        else
        //                                        {
        //                                            returnString = "Error In Saving In PreSalesCalls";
        //                                            if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                                        }
        //                                    }
        //                                    else
        //                                    {
        //                                        returnString = "Error In Saving In PreSalesCalls";
        //                                        if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                                    }
        //                                }
        //                            }
        //                            #endregion

        //                            if (salesCallsId != 0)
        //                            {

        //                                #region Mobile Exec Time
        //                                if (callExecutionDataObjectnew.executionDateTime != null)
        //                                {
        //                                    _nvCollection.Clear();
        //                                    _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                    _nvCollection.Add("@mobexectime-datetime", executedDateTime.ToString());

        //                                    var mac = _dl.GetData("sp_Insert_MobExecutionTime", _nvCollection);
        //                                }
        //                                #endregion

        //                                #region CallDoctors


        //                                // ReSharper disable once UnusedVariable
        //                                if (_dataContext != null)
        //                                {
        //                                    var insertCallDoctors = _dataContext.sp_CallDoctorsInsert(salesCallsId, Convert.ToInt64(doctorId)).ToList();
        //                                }

        //                                #endregion

        //                                #region CallVisitors


        //                                if (!Convert.ToBoolean(callExecutionDataObjectnew.coaching))
        //                                {
        //                                    // ReSharper disable once UnusedVariable
        //                                    var dsIsCoaching = _dl.InserData("sp_InsertCallCoaching",
        //                                        new NameValueCollection
        //                {
        //                    {"@SalesCallId-INT", salesCallsId.ToString()},
        //                    {"@IsCoaching-VARCHAR-50", "0"}
        //                });
        //                                }
        //                                else
        //                                {
        //                                    // ReSharper disable once UnusedVariable
        //                                    var dsIsCoaching = _dl.InserData("sp_InsertCallCoaching",
        //                                        new NameValueCollection
        //                {
        //                    {"@SalesCallId-INT", salesCallsId.ToString()},
        //                    {"@IsCoaching-VARCHAR-50", "1"}
        //                });
        //                                }

        //                                long jvflma = 0;
        //                                long jvslma = 0;
        //                                long jvftma = callExecutionDataObjectnew.jvftm == "true" ? 1 : 0;
        //                                //NSM
        //                                long jvbuha = 0;
        //                                //GM
        //                                long jvgma = 0;
        //                                long jvcooa = callExecutionDataObjectnew.jvcoo == "true" ? 1 : 0;
        //                                long jvcda = callExecutionDataObjectnew.jvcd == "true" ? 1 : 0;
        //                                long jvpma = callExecutionDataObjectnew.jvpm == "true" ? 1 : 0;
        //                                if (Convert.ToBoolean(callExecutionDataObjectnew.jvflm))
        //                                {
        //                                    var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
        //                                    if (dsFlm != null)
        //                                    {
        //                                        if (dsFlm.Tables[0].Rows.Count > 0)
        //                                        {
        //                                            jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                        }
        //                                    }
        //                                }
        //                                if (Convert.ToBoolean(callExecutionDataObjectnew.jvslm))
        //                                {
        //                                    var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
        //                                    if (dsFlm != null)
        //                                    {
        //                                        if (dsFlm.Tables[0].Rows.Count > 0)
        //                                        {
        //                                            jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                            var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(jvflma) } });
        //                                            if (dsSlm != null)
        //                                            {
        //                                                if (dsSlm.Tables[0].Rows.Count > 0)
        //                                                {
        //                                                    jvslma = Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                                }
        //                                            }
        //                                        }
        //                                    }
        //                                }
        //                                //Check if Joint Visit is with NSM
        //                                if (Convert.ToBoolean(callExecutionDataObjectnew.jvbuh))
        //                                {
        //                                    var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
        //                                    if (dsFlm != null)
        //                                    {
        //                                        if (dsFlm.Tables[0].Rows.Count > 0)
        //                                        {
        //                                            jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                            //var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(jvflma) } });
        //                                            var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });
        //                                            if (dsSlm != null)
        //                                            {
        //                                                if (dsSlm.Tables[0].Rows.Count > 0)
        //                                                {
        //                                                    jvslma = Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                                    var dsBuh = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });

        //                                                    if (dsBuh != null)
        //                                                    {
        //                                                        if (dsBuh.Tables[0].Rows.Count > 0)
        //                                                        {

        //                                                            jvbuha = Convert.ToInt64(dsBuh.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                                        }
        //                                                    }
        //                                                }
        //                                            }
        //                                        }
        //                                    }
        //                                }
        //                                //Check if Joint Visit is with GM
        //                                if (Convert.ToBoolean(callExecutionDataObjectnew.jvgm))
        //                                {
        //                                    var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
        //                                    if (dsFlm != null)
        //                                    {
        //                                        if (dsFlm.Tables[0].Rows.Count > 0)
        //                                        {
        //                                            jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                            //var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(jvflma) } });
        //                                            var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });
        //                                            if (dsSlm != null)
        //                                            {
        //                                                if (dsSlm.Tables[0].Rows.Count > 0)
        //                                                {
        //                                                    jvslma = Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                                    var dsBuh = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });

        //                                                    if (dsBuh != null)
        //                                                    {
        //                                                        if (dsBuh.Tables[0].Rows.Count > 0)
        //                                                        {
        //                                                            jvbuha = Convert.ToInt64(dsBuh.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                                            var dsGm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsBuh.Tables[0].Rows[0]["ManagerId"].ToString())) } });
        //                                                            if (dsGm != null)
        //                                                            {
        //                                                                if (dsGm.Tables[0].Rows.Count > 0)
        //                                                                {

        //                                                                    jvgma = Convert.ToInt64((dsGm.Tables[0].Rows[0]["ManagerId"].ToString() == "" ? "1" : dsGm.Tables[0].Rows[0]["ManagerId"].ToString()));
        //                                                                }
        //                                                            }
        //                                                        }
        //                                                    }
        //                                                }
        //                                            }
        //                                        }
        //                                    }
        //                                }
        //                                jvflma = callExecutionDataObjectnew.jvflm == "true" ? jvflma : 0;
        //                                jvslma = callExecutionDataObjectnew.jvslm == "true" ? jvslma : 0;
        //                                jvbuha = callExecutionDataObjectnew.jvbuh == "true" ? jvbuha : 0;
        //                                jvgma = callExecutionDataObjectnew.jvgm == "true" ? jvgma : 0;

        //                                //if (Convert.ToBoolean(callExecutionDataObject.jvho1))
        //                                //{
        //                                //    jvHO1 = 1;
        //                                //}
        //                                //if (Convert.ToBoolean(callExecutionDataObject.jvho2))
        //                                //{
        //                                //    jvHO2 = 1;
        //                                //}
        //                                //// ReSharper disable once UnusedVariable
        //                                long? nullable = null;
        //                                if (_dataContext != null)
        //                                {

        //                                    /* var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew(salesCallsId, Convert.ToInt64(callExecutionDataObject.employeeId),
        //                                         ((jvflma == 0) ? nullable : jvflma),
        //                                         ((jvslma == 0) ? nullable : jvslma),
        //                                         ((jvHO1 == 0) ? nullable : jvHO1),
        //                                         ((jvHO2 == 0) ? nullable : jvHO2)).ToList();*/
        //                                    var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew_withjv8(salesCallsId, Convert.ToInt64(callExecutionDataObjectnew.employeeId),
        //                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvflm)) ? nullable : jvflma),
        //                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvslm)) ? nullable : jvslma),
        //                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvftm)) ? nullable : jvftma),
        //                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvbuh)) ? nullable : jvbuha),
        //                                        //ye parameter sahih lgane hain filhal temporary lgaye hen 
        //                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvgm)) ? nullable : jvgma),
        //                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvcoo)) ? nullable : jvcooa),
        //                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvcd)) ? nullable : jvcda),
        //                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvpm)) ? nullable : jvpma)
        //                                ).ToList();

        //                                    /*if (jvflma == 0 && jvslma == 0)
        //                                    {
        //                                        var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew(salesCallsId, Convert.ToInt64(callExecutionDataObject.employeeId), null, null, null, null).ToList();
        //                                    }
        //                                    else
        //                                    {
        //                                        var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew(salesCallsId, Convert.ToInt64(callExecutionDataObject.employeeId), jvflma, jvslma, 0, 0).ToList();
        //                                    }*/

        //                                }

        //                                #endregion

        //                                #region VisitFeedBack

        //                                if (_dataContext != null)
        //                                {
        //                                    // ReSharper disable once UnusedVariable
        //                                    var insertFeedBack = _dataContext.sp_VisitFeedBackInsert(salesCallsId, callExecutionDataObjectnew.callNotes).ToList();
        //                                }

        //                                #endregion

        //                                #region CallProducts

        //                                // ReSharper disable once NotAccessedVariable
        //                                List<CallProduct> insertCallProduct;

        //                                if (callExecutionDataObjectnew.product1 != "-1")
        //                                {
        //                                    if (_dataContext != null)
        //                                    {
        //                                        // ReSharper disable once RedundantAssignment
        //                                        //insertCallProduct =
        //                                        //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product1), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product1), 1).ToList();
        //                                        insertCallProduct =
        //                                            _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnew.product1), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnew.product1), 1).ToList();

        //                                        if (callExecutionDataObjectnew.p1Notes != "" && insertCallProduct.Count > 0)
        //                                        {
        //                                            var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
        //                                                new NameValueCollection { 
        //                                        { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() }, 
        //                                        { "@Comment-varchar(max),", callExecutionDataObjectnew.p1Notes} 
        //                                        });
        //                                        }
        //                                    }


        //                                }


        //                                if (callExecutionDataObjectnew.product2 != "-1")
        //                                {
        //                                    if (_dataContext != null)
        //                                    {
        //                                        // ReSharper disable once RedundantAssignment
        //                                        //insertCallProduct =
        //                                        //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product2), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product1), 2).ToList();
        //                                        insertCallProduct =
        //                                            _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnew.product2), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnew.product2), 2).ToList();

        //                                        if (callExecutionDataObjectnew.p2Notes != "" && insertCallProduct.Count > 0)
        //                                        {
        //                                            var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
        //                                                new NameValueCollection { 
        //                                        { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() }, 
        //                                        { "@Comment-varchar(max),", callExecutionDataObjectnew.p2Notes} 
        //                                        });
        //                                        }

        //                                    }
        //                                }

        //                                if (callExecutionDataObjectnew.product3 != "-1")
        //                                {
        //                                    if (_dataContext != null)
        //                                    {
        //                                        // ReSharper disable once RedundantAssignment
        //                                        //insertCallProduct =
        //                                        //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product3), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product3), 3).ToList();
        //                                        insertCallProduct =
        //                                            _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnew.product3), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnew.product3), 3).ToList();

        //                                        if (callExecutionDataObjectnew.p3Notes != "" && insertCallProduct.Count > 0)
        //                                        {
        //                                            var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
        //                                                new NameValueCollection { 
        //                                        { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() }, 
        //                                        { "@Comment-varchar(max),", callExecutionDataObjectnew.p3Notes} 
        //                                        });
        //                                        }
        //                                    }
        //                                }

        //                                if (callExecutionDataObjectnew.product4 != "-1")
        //                                {
        //                                    if (_dataContext != null)
        //                                    {
        //                                        // ReSharper disable once RedundantAssignment
        //                                        //insertCallProduct =
        //                                        //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product4), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product4), 4).ToList();
        //                                        insertCallProduct =
        //                                            _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnew.product4), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnew.product4), 4).ToList();

        //                                        if (callExecutionDataObjectnew.p4Notes != "" && insertCallProduct.Count > 0)
        //                                        {
        //                                            var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
        //                                                new NameValueCollection { 
        //                                        { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() }, 
        //                                        { "@Comment-varchar(max),", callExecutionDataObjectnew.p4Notes} 
        //                                        });
        //                                        }
        //                                    }

        //                                }



        //                                #endregion

        //                                #region CallProductSamples

        //                                if (callExecutionDataObjectnew.sample1 != "-1" && callExecutionDataObjectnew.sampleQty1 != "")
        //                                {

        //                                    // var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample1 } });

        //                                    // int SampleProdID1 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());


        //                                    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObjectnew.sample1 } });

        //                                    int SampleProdID1 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
        //                                    _nvCollection.Clear();
        //                                    _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                    _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample1.ToString());
        //                                    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                    _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                    _nvCollection.Add("@year-int", smsyear.ToString());
        //                                    var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
        //                                    if (checkSample1Balance.Tables[0].Rows.Count > 0)
        //                                    {
        //                                        int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
        //                                        int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
        //                                        int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

        //                                        if (balnc >= (qty + opening))
        //                                        {

        //                                        }
        //                                        else if ((Convert.ToInt32(callExecutionDataObjectnew.sampleQty1) + balnc) > (qty + opening))
        //                                        {

        //                                        }
        //                                        else
        //                                        {
        //                                            var newbalance = Convert.ToInt32(callExecutionDataObjectnew.sampleQty1) + balnc;
        //                                            _nvCollection.Clear();
        //                                            _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                            _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample1.ToString());
        //                                            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                            _nvCollection.Add("@Qty-int", newbalance.ToString());
        //                                            _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                            _nvCollection.Add("@year-int", smsyear.ToString());
        //                                            var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

        //                                            _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID1, Convert.ToInt32(callExecutionDataObjectnew.sample1), Convert.ToInt32(callExecutionDataObjectnew.sampleQty1), 1).ToList();
        //                                        }
        //                                    }

        //                                }

        //                                if (callExecutionDataObjectnew.sample2 != "-1" && callExecutionDataObjectnew.sampleQty2 != "")
        //                                {
        //                                    // var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample2 } });

        //                                    // int SampleProdID2 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

        //                                    // _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID2, Convert.ToInt32(callExecutionDataObject.sample2), Convert.ToInt32(callExecutionDataObject.sampleQty2), 2).ToList();


        //                                    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObjectnew.sample2 } });

        //                                    int SampleProdID2 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
        //                                    // int SampleProdID2 = Convert.ToInt32(sample2);
        //                                    _nvCollection.Clear();
        //                                    _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                    _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample2.ToString());
        //                                    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                    _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                    _nvCollection.Add("@year-int", smsyear.ToString());
        //                                    var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
        //                                    if (checkSample1Balance.Tables[0].Rows.Count > 0)
        //                                    {
        //                                        int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
        //                                        int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
        //                                        int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

        //                                        if (balnc >= (qty + opening))
        //                                        {

        //                                        }
        //                                        else if ((Convert.ToInt32(callExecutionDataObjectnew.sampleQty2) + balnc) > (qty + opening))
        //                                        {

        //                                        }
        //                                        else
        //                                        {
        //                                            var newbalance = Convert.ToInt32(callExecutionDataObjectnew.sampleQty2) + balnc;
        //                                            _nvCollection.Clear();
        //                                            _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                            _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample2.ToString());
        //                                            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                            _nvCollection.Add("@Qty-int", newbalance.ToString());
        //                                            _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                            _nvCollection.Add("@year-int", smsyear.ToString());
        //                                            var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

        //                                            _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID2, Convert.ToInt32(callExecutionDataObjectnew.sample2), Convert.ToInt32(callExecutionDataObjectnew.sampleQty2), 2).ToList();
        //                                        }
        //                                    }

        //                                }

        //                                if (callExecutionDataObjectnew.sample3 != "-1" && callExecutionDataObjectnew.sampleQty3 != "")
        //                                {

        //                                    // var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample3 } });

        //                                    //   int SampleProdID3 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

        //                                    //   _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID3, Convert.ToInt32(callExecutionDataObject.sample3), Convert.ToInt32(callExecutionDataObject.sampleQty3), 3).ToList();

        //                                    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObjectnew.sample3 } });

        //                                    int SampleProdID3 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
        //                                    //  int SampleProdID3 = Convert.ToInt32(sample3);
        //                                    _nvCollection.Clear();
        //                                    _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                    _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample3.ToString());
        //                                    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                    _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                    _nvCollection.Add("@year-int", smsyear.ToString());
        //                                    var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
        //                                    if (checkSample1Balance.Tables[0].Rows.Count > 0)
        //                                    {
        //                                        int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
        //                                        int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
        //                                        int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

        //                                        if (balnc >= (qty + opening))
        //                                        {

        //                                        }
        //                                        else if ((Convert.ToInt32(callExecutionDataObjectnew.sampleQty3) + balnc) > (qty + opening))
        //                                        {

        //                                        }
        //                                        else
        //                                        {
        //                                            var newbalance = Convert.ToInt32(callExecutionDataObjectnew.sampleQty3) + balnc;
        //                                            _nvCollection.Clear();
        //                                            _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                            _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample3.ToString());
        //                                            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                            _nvCollection.Add("@Qty-int", newbalance.ToString());
        //                                            _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                            _nvCollection.Add("@year-int", smsyear.ToString());
        //                                            var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

        //                                            _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID3, Convert.ToInt32(callExecutionDataObjectnew.sample3), Convert.ToInt32(callExecutionDataObjectnew.sampleQty3), 3).ToList();
        //                                        }
        //                                    }

        //                                }


        //                                //if (callExecutionDataObject.sample4 != "-1" && callExecutionDataObject.sampleQty4 != "")
        //                                //{

        //                                //  //  var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample4 } });

        //                                // //   int SampleProdID4 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

        //                                //  //  _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID4, Convert.ToInt32(callExecutionDataObject.sample4), Convert.ToInt32(callExecutionDataObject.sampleQty4), 4).ToList();

        //                                //    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample4 } });

        //                                //    int SampleProdID4 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
        //                                //    //int SampleProdID4 = Convert.ToInt32(sample4);
        //                                //    _nvCollection.Clear();
        //                                //    _nvCollection.Add("@mioid-int", callExecutionDataObject.employeeId.ToString());
        //                                //    _nvCollection.Add("@sample_id-int", callExecutionDataObject.sample4.ToString());
        //                                //    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                //    _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                //    _nvCollection.Add("@year-int", smsyear.ToString());
        //                                //    var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
        //                                //    if (checkSample1Balance.Tables[0].Rows.Count > 0)
        //                                //    {
        //                                //        int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
        //                                //        int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
        //                                //        int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

        //                                //        if (balnc >= (qty + opening))
        //                                //        {

        //                                //        }
        //                                //        else if ((Convert.ToInt32(callExecutionDataObject.sampleQty4) + balnc) > (qty + opening))
        //                                //        {

        //                                //        }
        //                                //        else
        //                                //        {
        //                                //            var newbalance = Convert.ToInt32(callExecutionDataObject.sampleQty4) + balnc;
        //                                //            _nvCollection.Clear();
        //                                //            _nvCollection.Add("@mioid-int", callExecutionDataObject.employeeId.ToString());
        //                                //            _nvCollection.Add("@sample_id-int", callExecutionDataObject.sample1.ToString());
        //                                //            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                //            _nvCollection.Add("@Qty-int", newbalance.ToString());
        //                                //            _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                //            _nvCollection.Add("@year-int", smsyear.ToString());
        //                                //            var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

        //                                //            _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID4, Convert.ToInt32(callExecutionDataObject.sample4), Convert.ToInt32(callExecutionDataObject.sampleQty4), 4).ToList();
        //                                //        }
        //                                //    }

        //                                //}

        //                                //if (callExecutionDataObject.sample5 != "-1" && callExecutionDataObject.sampleQty5 != "")
        //                                //{

        //                                //    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample5 } });

        //                                //    int SampleProdID5 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

        //                                //    _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID5, Convert.ToInt32(callExecutionDataObject.sample5), Convert.ToInt32(callExecutionDataObject.sampleQty5), 5).ToList();

        //                                //}

        //                                #endregion

        //                                #region CallReminder

        //                                if (callExecutionDataObjectnew.reminder1 != "-1")
        //                                {
        //                                    _dl.InserData("sp_CallReminderInsert", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@DetailReminder-int", callExecutionDataObjectnew.reminder1 }, { "@OrderBy-int", "1" } });
        //                                }

        //                                if (callExecutionDataObjectnew.reminder2 != "-1")
        //                                {
        //                                    _dl.InserData("sp_CallReminderInsert", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@DetailReminder-int", callExecutionDataObjectnew.reminder2 }, { "@OrderBy-int", "2" } });
        //                                }

        //                                if (callExecutionDataObjectnew.reminder3 != "-1")
        //                                {
        //                                    _dl.InserData("sp_CallReminderInsert", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@DetailReminder-int", callExecutionDataObjectnew.reminder3 }, { "@OrderBy-int", "3" } });
        //                                }


        //                                #endregion

        //                                #region CallGifts

        //                                // ReSharper disable once NotAccessedVariable
        //                                List<CallGift> insertCallGift;

        //                                if (callExecutionDataObjectnew.gift != "-1")
        //                                {
        //                                    // ReSharper disable once RedundantAssignment
        //                                    insertCallGift = callExecutionDataObjectnew.giftQty != "" ? _dataContext.sp_CallGiftsInsert(salesCallsId, Convert.ToInt32(callExecutionDataObjectnew.gift), Convert.ToInt32(callExecutionDataObjectnew.giftQty), 1).ToList() : _dataContext.sp_CallGiftsInsert(salesCallsId, Convert.ToInt32(callExecutionDataObjectnew.gift), 0, 1).ToList();
        //                                }


        //                                #endregion

        //                                #region MacAddress
        //                                // macaddress = "123.213.163";
        //                                if (callExecutionDataObjectnew.macaddress != null)
        //                                {
        //                                    _nvCollection.Clear();
        //                                    _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                    _nvCollection.Add("@EmployesID-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                    _nvCollection.Add("@macaddress-varchar(50)", callExecutionDataObjectnew.macaddress.ToString());

        //                                    var mac = _dl.GetData("sp_insert_macaddress", _nvCollection);
        //                                }
        //                                #endregion

        //                                #region Location
        //                                if (callExecutionDataObjectnew.longitude != null && callExecutionDataObjectnew.latitude != null)
        //                                {
        //                                    _nvCollection.Clear();
        //                                    _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                    _nvCollection.Add("@long-varchar(100)", callExecutionDataObjectnew.longitude.ToString());
        //                                    _nvCollection.Add("@lat-varchar(100)", callExecutionDataObjectnew.latitude.ToString());
        //                                    var ch = _dl.GetData("sp_Insert_Location", _nvCollection);
        //                                }

        //                                #endregion

        //                                #region Fake Users Calls Data

        //                                try
        //                                {
        //                                    if (callExecutionDataObjectnew.flag != null)
        //                                    {
        //                                        _nvCollection.Clear();

        //                                        _nvCollection.Clear();
        //                                        _nvCollection.Add("@SalesCalID-int", salesCallsId.ToString());
        //                                        _nvCollection.Add("@Flag-int", ((Convert.ToBoolean(callExecutionDataObjectnew.flag.ToString())) ? "1" : "0"));
        //                                        _nvCollection.Add("@AppVersion-varchar(100)", callExecutionDataObjectnew.appversion);
        //                                        _nvCollection.Add("@MacAddress-varchar(100)", callExecutionDataObjectnew.macaddress);
        //                                        _nvCollection.Add("@ApplicationPackages-text", callExecutionDataObjectnew.applicationpackages);
        //                                        _nvCollection.Add("@ModelNumber-text", callExecutionDataObjectnew.modelnumber);
        //                                        var ch = _dl.GetData("sp_fakeUsersData", _nvCollection);


        //                                    }
        //                                }
        //                                catch (Exception)
        //                                {

        //                                    //throw;
        //                                }



        //                                #endregion

        //                                #region Range

        //                                string range = "";
        //                                _nvCollection.Clear();
        //                                _nvCollection.Add("@DoctorID-int", doctorId.ToString());


        //                                DataSet dslastlatlng = _dl.GetData("sp_Doctorlatlng", _nvCollection);
        //                                string getrange = ConfigurationManager.AppSettings["Range"].ToString();
        //                                if (dslastlatlng.Tables[0].Rows.Count > 0)
        //                                {
        //                                    double distanceInMeters = new GeoCoordinate(Convert.ToDouble(dslastlatlng.Tables[0].Rows[0][0].ToString()), Convert.ToDouble(dslastlatlng.Tables[0].Rows[0][1].ToString()))
        //                                    .GetDistanceTo(new GeoCoordinate(Convert.ToDouble(callExecutionDataObjectnew.latitude.ToString()), Convert.ToDouble(callExecutionDataObjectnew.longitude.ToString())));

        //                                    if (distanceInMeters <= Convert.ToDouble(getrange))
        //                                    {
        //                                        range = "InRange";
        //                                    }
        //                                    else
        //                                    {
        //                                        range = "OutRange";
        //                                    }

        //                                    var rangestatus = _dl.GetData("sp_insertrangestatus", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@RangeStatus-varchar(50)", range.ToString() }, { "@Distance-varchar(100)", distanceInMeters.ToString() } });
        //                                }
        //                                else
        //                                {
        //                                    var rangestatus = _dl.GetData("sp_insertrangestatus", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@RangeStatus-varchar(50)", "NewTag" }, { "@Distance-varchar(100)", "0.0" } });
        //                                }

        //                                #endregion

        //                                #region Doctortagging

        //                                string address = "";
        //                                long doctorid;
        //                                var dsDoctorTagPermision = _dl.GetData("sp_DoctorTagPermision", new NameValueCollection { { "@DoctorID-INT", doctorId } });
        //                                if (dsDoctorTagPermision != null)
        //                                {
        //                                    if (dsDoctorTagPermision.Tables[0].Rows.Count > 0)
        //                                    {
        //                                        doctorid = Convert.ToInt64(dsDoctorTagPermision.Tables[0].Rows[0]["DoctorID"].ToString());
        //                                        string url = "http://maps.googleapis.com/maps/api/geocode/xml?latlng=" + callExecutionDataObjectnew.latitude.ToString() + "," + callExecutionDataObjectnew.longitude.ToString() + "&sensor=false";
        //                                        WebRequest request = WebRequest.Create(url);
        //                                        using (WebResponse response = (HttpWebResponse)request.GetResponse())
        //                                        {
        //                                            using (StreamReader reader = new StreamReader(response.GetResponseStream(), Encoding.UTF8))
        //                                            {
        //                                                // empid = dt.Rows[i]["EmployeeId"].ToString();
        //                                                DataSet dsResult = new DataSet();
        //                                                dsResult.ReadXml(reader);//format in xml
        //                                                DataTable dtCoordinates = new DataTable();
        //                                                dtCoordinates.Columns.AddRange(new DataColumn[1] { new DataColumn("AreaAddress", typeof(string)) });

        //                                                if (dsResult.Tables.Count > 1)
        //                                                {
        //                                                    var data = dsResult.Tables[1];
        //                                                    var add1 = data.Rows[0]["formatted_address"].ToString();
        //                                                    var add2 = data.Rows[2]["formatted_address"].ToString();
        //                                                    string split = add1.Split(',')[0];
        //                                                    address = split + " " + add2;
        //                                                    // dt.Rows[i]["Address"] = address;
        //                                                }


        //                                            }
        //                                        }
        //                                    }

        //                                }

        //                                #endregion

        //                                #region Doctor Location
        //                                if (callExecutionDataObjectnew.longitude != null && callExecutionDataObjectnew.latitude != null)
        //                                {
        //                                    _nvCollection.Clear();
        //                                    _nvCollection.Add("@DoctorID-int", doctorId.ToString());

        //                                    DataSet dsloccount = _dl.GetData("sp_CountDoctorTagging", _nvCollection);

        //                                    if (dsloccount.Tables[0].Rows.Count < 1)
        //                                    {
        //                                        _nvCollection.Clear();
        //                                        _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                        _nvCollection.Add("@DoctorID-int", doctorId.ToString());
        //                                        _nvCollection.Add("@VisitShift-int", vt);
        //                                        _nvCollection.Add("@long-varchar(100)", callExecutionDataObjectnew.longitude.ToString());
        //                                        _nvCollection.Add("@lat-varchar(100)", callExecutionDataObjectnew.latitude.ToString());
        //                                        _nvCollection.Add("@Address-varchar(MAX)", address.ToString());
        //                                        var ch = _dl.GetData("sp_Insert_DoctorTagging", _nvCollection);
        //                                    }

        //                                }
        //                                #endregion

        //                                #region CalculateDistanceForExpenseData



        //                                _nvCollection.Clear();

        //                                //_nvCollection.Add("@SalesCallID-int", salesCallsId.ToString());

        //                                //_nvCollection.Add("@AutoActivityStatus-int", callExecutionDataObject.AutoActivityStart.ToString());
        //                                _nvCollection.Add("@EmployeeID-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                _nvCollection.Add("@Salescallid-int", salesCallsId.ToString());
        //                                _nvCollection.Add("@Month-int", result.Month.ToString());
        //                                _nvCollection.Add("@Year-int", result.Year.ToString());
        //                                _nvCollection.Add("@Day-int", result.Day.ToString());

        //                                DataSet distanceforExpense = _dl.GetData("sp_GetLatLongforCallDistance", _nvCollection);

        //                                if (distanceforExpense.Tables[0].Rows.Count > 0 && distanceforExpense.Tables[0].Rows[0][0].ToString() != "FIRST CALL" && distanceforExpense.Tables[0].Rows[0][0].ToString() != "ACTIVITY NOT STARTED" && distanceforExpense.Tables[0].Rows[0][1].ToString() != "0.0")
        //                                {
        //                                    //double distanceInMeters = new GeoCoordinate(Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][1].ToString()), Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][2].ToString()))
        //                                    //    .GetDistanceTo(new GeoCoordinate(Convert.ToDouble(callExecutionDataObjectnew.latitude.ToString()), Convert.ToDouble(callExecutionDataObjectnew.longitude.ToString())));
        //                                    if (distanceforExpense.Tables[0].Rows[0][1].ToString() != "0.0")
        //                                    {
        //                                        string url = "http://www.yournavigation.org/api/1.0/gosmore.php?flat=" + distanceforExpense.Tables[0].Rows[0][1].ToString() + "&flon=" + distanceforExpense.Tables[0].Rows[0][2].ToString() + "&tlat=" + callExecutionDataObjectnew.latitude.ToString() + "&tlon=" + callExecutionDataObjectnew.longitude.ToString() + "&format=geojson" + callExecutionDataObjectnew.latitude.ToString() + "," + callExecutionDataObjectnew.longitude.ToString() + "&sensor=false";
        //                                        WebRequest request = WebRequest.Create(url);
        //                                        using (WebResponse response = (HttpWebResponse)request.GetResponse())
        //                                        {
        //                                            using (StreamReader reader = new StreamReader(response.GetResponseStream(), Encoding.UTF8))
        //                                            {
        //                                                DataSet dsResult = new DataSet();
        //                                                dsResult.ReadXml(reader);//format in xml
        //                                                GetCallDitanceForMobile = Convert.ToDouble(dsResult.Tables[0].Rows[0][2].ToString());
        //                                                //  Flag = "DATABASE";
        //                                                if (GetCallDitanceForMobile == 0)
        //                                                {
        //                                                    GetCallDitanceForMobile = new GeoCoordinate(Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][3].ToString()), Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][4].ToString()))
        //                                         .GetDistanceTo(new GeoCoordinate(Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][8].ToString()), Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][9].ToString())));
        //                                                    GetCallDitanceForMobile = GetCallDitanceForMobile / 1000;
        //                                                    //   Flag = "API";
        //                                                }
        //                                            }
        //                                        }

        //                                    }


        //                                    //  GetCallDitanceForMobile = distanceInMeters/1000;
        //                                    Previous_Latitude = distanceforExpense.Tables[0].Rows[0][1].ToString();
        //                                    Previous_Longitude = distanceforExpense.Tables[0].Rows[0][2].ToString();
        //                                    Previous_salescallid = Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][0].ToString());
        //                                    LastDocCity = Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][4].ToString());
        //                                    //  startactid = Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][3].ToString());

        //                                    if ((Previous_Latitude.ToString() == "0" || Previous_Latitude.ToString() == "0") &&
        //                                       (Previous_Longitude.ToString() == "0" || Previous_Longitude.ToString() == "0"))
        //                                    {
        //                                        distanceZero = "Previous Location does not exist";
        //                                    }
        //                                    else
        //                                    {
        //                                        distanceZero = "";
        //                                    }

        //                                    ////GeoCoordinate pin1 = new GeoCoordinate(Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][1].ToString()), Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][2].ToString()));
        //                                    ////GeoCoordinate pin2 = new GeoCoordinate(Convert.ToDouble(callExecutionDataObject.latitude.ToString()), Convert.ToDouble(callExecutionDataObject.longitude.ToString()));

        //                                    ////double distanceBetween = pin1.GetDistanceTo(pin2);

        //                                }
        //                                else if (distanceforExpense.Tables[0].Rows[0][0].ToString() == "FIRST CALL")
        //                                {
        //                                    distanceZero = "FIRST CALL";
        //                                }


        //                                else
        //                                {

        //                                }
        //                                #endregion

        //                            }
        //                        }

        //                        #region  Expense Data Deserialization


        //                        if (callExecutionDataObjectnew.ExpenseDataJson != "[]")
        //                        {
        //                            var ExpenseData = JsonConvert.DeserializeObject<ExpenseDataJsonObject[]>(callExecutionDataObjectnew.ExpenseDataJson);
        //                            try
        //                            {
        //                                for (int k = 0; k < ExpenseData.Length; k++)
        //                                {
        //                                    var ExpenseDetailData = JsonConvert.DeserializeObject<ExpenseDetailDataJsonObject[]>(ExpenseData[k].expenseData);
        //                                    for (int l = 0; l < ExpenseDetailData.Length; l++)
        //                                    {

        //                                        _nvCollection.Clear();

        //                                        _nvCollection.Add("@EmployeeID-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                        _nvCollection.Add("@ActivityId-int", ExpenseDetailData[l].ActivityTypeID.ToString());
        //                                        _nvCollection.Add("@Month-int", result.Month.ToString());
        //                                        _nvCollection.Add("@Year-int", result.Year.ToString());
        //                                        _nvCollection.Add("@Day-int", result.Day.ToString());
        //                                        DataSet ChkOutBackAndNightStay = _dl.GetData("sp_chkOutBackAndNightStayExecuted", _nvCollection);

        //                                        if (ChkOutBackAndNightStay.Tables[0].Rows[0][0].ToString() == "Already Executed")
        //                                        {
        //                                            //returnString = "Already Activity Executed";
        //                                            //goto Error;
        //                                            var getExpenid = _dl.GetData("sp_INSERTExpenseDetailWithCall", new NameValueCollection { 
        //                                    { "@salesCallId-int", salesCallsId.ToString() }, 
        //                                    { "@expenseId-int", "NULL" }, 
        //                                    { "@ExpenseValue-int", "NULL" }, 
        //                                    { "@CallDitanceForMobile-varchar(250)",(callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString() }, 
        //                                    { "@CallDitanceForportal-varchar(250)", GetCallDitanceForMobile.ToString() }, 
        //                                    { "@EmployeeId-Bigint", callExecutionDataObjectnew.employeeId.ToString() }, 
        //                                    { "@doctorId-int", doctorId.ToString() },
        //                                    { "@PreviousSalescall-Bigint", Previous_salescallid.ToString() }, 
        //                                    { "@PreviousLongitude-Bigint", Previous_Longitude.ToString()}, 
        //                                    { "@PreviousLatitude-Bigint", Previous_Latitude.ToString()},
        //                                     { "@Systemvariable-Bigint", distanceZero.ToString()}, 
        //                                          { "@LastDocCity-Bigint", LastDocCity.ToString()},
        //                                       { "@startactid-Bigint", Flag.ToString()},
        //                                        { "@Date-Bigint", result.ToString()}
        //                                            });

        //                                            Constants.ImagesSuccesLog("Date:-" + System.DateTime.Now.ToString() + "--" + "IMsert In sp_INSERTExpenseDetailWithCall:- " + " SalesCallID : " + salesCallsId.ToString() + " CallDitanceForMobile: " + ((callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString()) + " CallDitanceForportal: " + GetCallDitanceForMobile.ToString() + " EmployeeId: " + callExecutionDataObjectnew.employeeId.ToString() + " doctorId: " + doctorId.ToString());

        //                                        }

        //                                        else
        //                                        {
        //                                            var getExpenid = _dl.GetData("sp_INSERTExpenseDetailWithCall", new NameValueCollection { 
        //                                    { "@salesCallId-int", salesCallsId.ToString() }, 
        //                                    { "@expenseId-int", ExpenseDetailData[l].ActivityTypeID.ToString() }, 
        //                                    { "@ExpenseValue-int", ExpenseDetailData[l].Expense.ToString() }, 
        //                                    { "@CallDitanceForMobile-varchar(250)", (callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString()  }, 
        //                                    { "@CallDitanceForportal-varchar(250)", GetCallDitanceForMobile.ToString() }, 
        //                                    { "@EmployeeId-Bigint", callExecutionDataObjectnew.employeeId.ToString() }, 
        //                                    { "@doctorId-int", doctorId.ToString() },
        //                                    { "@PreviousSalescall-Bigint", Previous_salescallid.ToString() }, 
        //                                    { "@PreviousLongitude-Bigint", Previous_Longitude.ToString()}, 
        //                                    { "@PreviousLatitude-Bigint", Previous_Latitude.ToString()}, 
        //                                    { "@Systemvariable-Bigint", distanceZero.ToString()}, 
        //                                      { "@LastDocCity-Bigint", LastDocCity.ToString()},
        //                                    { "@startactid-Bigint", Flag.ToString()},
        //                                     { "@Date-Bigint", result.ToString()}
        //                                            });

        //                                            Constants.ImagesSuccesLog("Date:-" + System.DateTime.Now.ToString() + "--" + "Insert In sp_INSERTExpenseDetailWithCall:- " + " SalesCallID : " + salesCallsId.ToString() + " expenseId: " + ExpenseDetailData[l].ActivityTypeID.ToString() + " CallDitanceForMobile: " + ((callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString()) + " CallDitanceForportal: " + GetCallDitanceForMobile.ToString() + " EmployeeId: " + callExecutionDataObjectnew.employeeId.ToString() + " doctorId: " + doctorId.ToString());
        //                                        }
        //                                    }


        //                                }
        //                            }
        //                            catch (Exception)
        //                            {


        //                            }

        //                        }
        //                        else if (((callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile) != "0.0" || ((callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile) != "0")
        //                        {
        //                            var getExpenid = _dl.GetData("sp_INSERTExpenseDetailWithCall", new NameValueCollection { 
        //                                    { "@salesCallId-int", salesCallsId.ToString() }, 
        //                                    { "@expenseId-int", "NULL" }, 
        //                                    { "@ExpenseValue-int", "NULL" }, 
        //                                    { "@CallDitanceForMobile-varchar(250)", (callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString() }, 
        //                                    { "@CallDitanceForportal-varchar(250)", GetCallDitanceForMobile.ToString() }, 
        //                                    { "@EmployeeId-Bigint", callExecutionDataObjectnew.employeeId.ToString() }, 
        //                                    { "@doctorId-int", doctorId.ToString() },
        //                                    { "@PreviousSalescall-Bigint", Previous_salescallid.ToString() }, 
        //                                    { "@PreviousLongitude-Bigint", Previous_Longitude.ToString()}, 
        //                                    { "@PreviousLatitude-Bigint", Previous_Latitude.ToString()},
        //                                     { "@Systemvariable-Bigint", distanceZero.ToString()}, 
        //                                          { "@LastDocCity-Bigint", LastDocCity.ToString()},
        //                                       { "@startactid-Bigint", Flag.ToString()},
        //                                        { "@Date-Bigint", result.ToString()}
        //                                            });

        //                            Constants.ImagesSuccesLog("Date:-" + System.DateTime.Now.ToString() + "--" + "IMsert In sp_INSERTExpenseDetailWithCall:- " + " SalesCallID : " + salesCallsId.ToString() + " CallDitanceForMobile: " + ((callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString()) + " CallDitanceForportal: " + GetCallDitanceForMobile.ToString() + " EmployeeId: " + callExecutionDataObjectnew.employeeId.ToString() + " doctorId: " + doctorId.ToString());

        //                        }


        //                        #endregion



        //                        #region Image Files Data Deserialization


        //                        try
        //                        {
        //                            if (callExecutionDataObjectnew.ExpenseDataJson != "[]")
        //                            {
        //                                var ExpenseData = JsonConvert.DeserializeObject<ExpenseDataJsonObject[]>(callExecutionDataObjectnew.ExpenseDataJson);
        //                                try
        //                                {
        //                                    for (int k = 0; k < ExpenseData.Length; k++)
        //                                    {
        //                                        expensedata[] ExpenseDetailData = JsonConvert.DeserializeObject<expensedata[]>(ExpenseData[k].expenseData);
        //                                        foreach (expensedata expenseData in ExpenseDetailData)
        //                                        {

        //                                            fileNameObject[] resultfileNameJson = js.Deserialize<fileNameObject[]>(expenseData.File);

        //                                            for (int j = 0; j < resultfileNameJson.Length; j++)
        //                                            {
        //                                                var resultresultfileNameObject = resultfileNameJson[j];
        //                                                if (resultresultfileNameObject.fileName.ToString() != "+")
        //                                                {

        //                                                    _nvCollection.Clear();
        //                                                    _nvCollection.Add("@ImagePath-varchar(500)", ExpenseExecutionImagesPath + "/" + resultresultfileNameObject.fileName);
        //                                                    _nvCollection.Add("@isProfile-varchar(200)", "EXPENSE");
        //                                                    var getsync = _dl.GetData("sp_getsyncimage", _nvCollection);
        //                                                    string imagePath = ExpenseExecutionImagesPath + "/" + resultresultfileNameObject.fileName;
        //                                                    Constants.ImagesSuccesLog("Image initial table live count: " + getsync.Tables[0].Rows.Count + " Image Path : " + imagePath);
        //                                                    if (getsync != null)
        //                                                    {
        //                                                        if (getsync.Tables[0].Rows.Count > 0)
        //                                                        {

        //                                                            _nvCollection.Clear();
        //                                                            _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                                            _nvCollection.Add("@ImagePath-varchar(500)", imagePath);
        //                                                            _nvCollection.Add("@Activityid-varchar(500)", expenseData.ActivityTypeID.ToString());
        //                                                            _nvCollection.Add("@system-varchar(500)", "");
        //                                                            _nvCollection.Add("@isAvailable-bit", "1");
        //                                                            var ch = _dl.GetData("sp_InsertCallExecutionImages", _nvCollection);

        //                                                            Constants.ImagesSuccesLog("Image success table live count: " + getsync.Tables[0].Rows.Count + " isAvailable:1 & Image Path : " + imagePath);
        //                                                        }
        //                                                        else
        //                                                        {
        //                                                            _nvCollection.Clear();
        //                                                            _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                                            _nvCollection.Add("@ImagePath-varchar(500)", imagePath);
        //                                                            _nvCollection.Add("@Activityid-varchar(500)", expenseData.ActivityTypeID.ToString());
        //                                                            _nvCollection.Add("@system-varchar(500)", "");
        //                                                            _nvCollection.Add("@isAvailable-bit", "0");
        //                                                            var callimage = _dl.GetData("sp_InsertCallExecutionImages", _nvCollection);

        //                                                            Constants.ImagesSuccesLog("Image  table live count : " + getsync.Tables[0].Rows.Count + " isAvailable:0 & Image Path : " + imagePath);
        //                                                        }

        //                                                    }

        //                                                    else
        //                                                    {
        //                                                        _nvCollection.Clear();
        //                                                        _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                                        _nvCollection.Add("@ImagePath-varchar(500)", imagePath);
        //                                                        _nvCollection.Add("@Activityid-varchar(500)", expenseData.ActivityTypeID.ToString());
        //                                                        _nvCollection.Add("@system-varchar(500)", "");
        //                                                        _nvCollection.Add("@isAvailable-bit", "0");
        //                                                        var callimage = _dl.GetData("sp_InsertCallExecutionImages", _nvCollection);

        //                                                        Constants.ImagesSuccesLog("Condition Else Image  table live count : " + getsync.Tables[0].Rows.Count + " isAvailable:0 & Image Path : " + imagePath);
        //                                                    }

        //                                                    _nvCollection.Clear();
        //                                                    _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                                    _nvCollection.Add("@ImagePath-varchar(500)", imagePath);
        //                                                    _nvCollection.Add("@Activityid-varchar(500)", expenseData.ActivityTypeID.ToString());
        //                                                    _nvCollection.Add("@system-varchar(500)", "");
        //                                                    _nvCollection.Add("@isAvailable-bit", "0");
        //                                                    var finalcouse = _dl.GetData("sp_InsertCallExecutionImagesFinal", _nvCollection);


        //                                                }
        //                                            }

        //                                        }
        //                                    }
        //                                }
        //                                catch (Exception)
        //                                {


        //                                }

        //                            }

        //                        }
        //                        catch (Exception ex)
        //                        {

        //                        }
        //                        #endregion

        //                        #region EdetailingJson Data Deserialization
        //                        try
        //                        {
        //                            var resultEdetailingJson = JsonConvert.DeserializeObject<EdetailingObject[]>(callExecutionDataObjectnew.EdetailingJson);
        //                            for (int j = 0; j < resultEdetailingJson.Length; j++)
        //                            {
        //                                var resultEdetailingObject = resultEdetailingJson[j];
        //                                _nvCollection.Clear();
        //                                _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                _nvCollection.Add("@PDFId-int", resultEdetailingObject.pdfid);
        //                                _nvCollection.Add("@PageNumId-int", resultEdetailingObject.pagenumber);
        //                                _nvCollection.Add("@TimeDuration-varchar(50)", resultEdetailingObject.timeduration);
        //                                _nvCollection.Add("@Type-int", "1"); //Type ID of PDF
        //                                var ch = _dl.GetData("sp_InsertPDFCallMonitor", _nvCollection);
        //                            }
        //                        }
        //                        catch (Exception ex)
        //                        {

        //                        }
        //                        #endregion

        //                        #region VideoEdetailingJson Data Deserialization

        //                        try
        //                        {
        //                            var resultVideoJson = JsonConvert.DeserializeObject<VideoObject[]>(callExecutionDataObjectnew.videosDetailingJson);
        //                            if (resultVideoJson != null)
        //                            {
        //                                for (int j = 0; j < resultVideoJson.Length; j++)
        //                                {
        //                                    var resultVideoObject = resultVideoJson[j];
        //                                    _nvCollection.Clear();
        //                                    _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                    _nvCollection.Add("@PDFId-int", resultVideoObject.videoid);
        //                                    _nvCollection.Add("@PageNumId-int", resultVideoObject.videoduration);
        //                                    _nvCollection.Add("@TimeDuration-varchar(50)", resultVideoObject.timeduration);
        //                                    _nvCollection.Add("@Type-int", "2"); //Type ID of Video 
        //                                    var ch = _dl.GetData("sp_InsertPDFCallMonitor", _nvCollection);
        //                                }
        //                            }
        //                        }
        //                        catch (Exception ex)
        //                        {
        //                            //    Constants.CallErrorLog("Error on Video Detailing Insertion: " + ex.Message);

        //                        }
        //                        #endregion

        //                        #region SurveyJson Data Deserialization

        //                        var SurveyData = JsonConvert.DeserializeObject<SurveyMainUploadDataObject[]>(callExecutionDataObjectnew.surveyFormJson);
        //                        for (int k = 0; k < SurveyData.Length; k++)
        //                        {
        //                            SurveyMainUploadDataObject var_surveymainupload = SurveyData[i];
        //                            string Sdate = "";
        //                            string SuerveyId = "";

        //                            Sdate = var_surveymainupload.SurveyDateTime;
        //                            if (!DateTime.TryParse(Sdate, out result))
        //                            {
        //                                returnString = "Survey DateTime Format Is invalid";
        //                            }

        //                            var getAllQuestions = JsonConvert.DeserializeObject<List<SurveyDataUploadDataObject>>(var_surveymainupload.QuestionObject);

        //                            var getsurveyid = _dl.GetData("sp_InserSurveyMain", new NameValueCollection { { "@FormId-int", var_surveymainupload.formid.ToString() }, { "@EmpId-INT", var_surveymainupload.EmpId.ToString() }, { "@CustId-int", var_surveymainupload.CustId.ToString() }, { "@SalescallId-bigint", salesCallsId.ToString() }, { "@SurveyName-varchar(100)", var_surveymainupload.SurveyName }, { "@Description-varchar(250)", var_surveymainupload.Description }, { "@SurveyDateTime-DateTime", Sdate.ToString() } });
        //                            if (getsurveyid.Tables[0].Rows.Count > 0)
        //                            {
        //                                SuerveyId = getsurveyid.Tables[0].Rows[0][0].ToString();
        //                            }

        //                            for (int j = 0; j < getAllQuestions.Count; j++)
        //                            {
        //                                var data = getAllQuestions[j];

        //                                var getsurveycount = _dl.GetData("sp_insertSurveyData", new NameValueCollection { { "@SurveyId-int", SuerveyId }, { "@QuestionId-INT", data.QuestionId }, { "@AnswerId-int", data.AnswerId }, { "@Other-varchar(250)", data.Other } });

        //                            }



        //                        }
        //                        #endregion

        //                        returnString = "CallSaved";
        //                        goto DoneExecution;
        //                    }
        //            #endregion

        //                }


        //            }
        //        }
        //        catch (Exception exception)
        //        {

        //            returnString = exception.Message;
        //            Constants.ErrorLog("Exception Raising From MobileService.svc.cs UploadCallsData_New | " + exception.Message + " | Stack Trace | " + exception.StackTrace + ";");
        //            goto Error;
        //        }

        //    Error:
        //    DoneExecution:
        //        {
        //            CallExecutionResponseObject callExecutionResponseObject = new CallExecutionResponseObject();
        //            callExecutionResponseObject.CallNo = i;
        //            callExecutionResponseObject.isExecutedSuccessfully = (returnString == "CallSaved") ? true : false;
        //            callExecutionResponseObject.CallResponseMessage = returnString;
        //            CallExecutionResponse.Add(callExecutionResponseObject);
        //        }

        //    }
        //    return js.Serialize(CallExecutionResponse);
        //}

        //public string UploadCallsData_ExpenseAndMultipleAddress(string fileName, Stream stream)
        //{
        //    List<CallExecutionResponseObject> CallExecutionResponse = new List<CallExecutionResponseObject>();
        //    string CreateFilePath = Path.Combine(HostingEnvironment.MapPath("~/Uploads/Files"));
        //    try
        //    {
        //        if (!Directory.Exists(CreateFilePath))
        //        {
        //            Directory.CreateDirectory(CreateFilePath);
        //        }
        //    }
        //    catch (Exception exception)
        //    {
        //        Console.Out.WriteLine(exception.Message);
        //    }

        //    string FilePath = Path.Combine(CreateFilePath, fileName);
        //    int length = 0;
        //    string returnString = null;
        //    using (FileStream writer = new FileStream(FilePath, FileMode.Create))
        //    {
        //        int readCount;
        //        var buffer = new byte[8192];
        //        while ((readCount = stream.Read(buffer, 0, buffer.Length)) != 0)
        //        {
        //            writer.Write(buffer, 0, readCount);
        //            length += readCount;
        //        }
        //    }
        //    JavaScriptSerializer js = new JavaScriptSerializer();
        //    string jsondata = System.IO.File.ReadAllText(FilePath);
        //    var CallsData = js.Deserialize<List<CallExecutionDataObjectnew>>(jsondata);
        //    for (int i = 0; i < CallsData.Count; i++)
        //    {
        //        CallExecutionDataObjectnew callExecutionDataObjectnew = CallsData[i];

        //        string date = "";

        //        string level1 = null, level2 = null, level3 = null, level4 = null, level5 = null, level6 = null;
        //        var doctorId = "";
        //        string classId = "", specialityId = "", qulificationId = "";
        //        int month = 0;
        //        int year = 0;
        //        long salesCallsId = 0;

        //        double GetCallDitanceForMobile = 0.0;
        //        double Previous_salescallid = 0;
        //        double Flag = 0;
        //        string Previous_Longitude = "";
        //        string Previous_Latitude = "";
        //        string distanceZero = "";
        //        double LastDocCity = 0;
        //        NameValueCollection _nvCollection = new NameValueCollection();
        //        string address = "";
        //        bool allowexecution = false;

        //        #region Application Version Check


        //        try
        //        {
        //            string allowedApplicationVersions = Constants.GetAllowedApplicationVersions();
        //            if (allowedApplicationVersions.ToLower() == "all")
        //            {
        //                allowexecution = true;
        //            }
        //            else
        //            {
        //                string[] allowedapps = allowedApplicationVersions.Split(',');
        //                for (int j = 0; j < allowedapps.Length; j++)
        //                {
        //                    if (allowedapps[j] == callExecutionDataObjectnew.appversion)
        //                    {
        //                        allowexecution = true;
        //                        break;
        //                    }
        //                }
        //            }
        //        }
        //        catch (Exception ex)
        //        {
        //            throw ex;
        //        }

        //        if (!allowexecution)
        //        {
        //            returnString = "Application version not allowed to excute the calls";
        //            goto Error;
        //        }

        //        #endregion

        //        try
        //        {
        //            #region CheckLeave
        //            DataSet set0 = _dl.GetData("sp_check_ZSM_MIO_leave", new NameValueCollection { { "@Startdate-date", callExecutionDataObjectnew.date }, { "@Enddate-date", callExecutionDataObjectnew.date }, { "@employeeid-INT", callExecutionDataObjectnew.employeeId } });
        //            if (set0.Tables[0].Rows.Count > 0)
        //            {
        //                returnString = set0.Tables[0].Rows[0][0].ToString() == "Available" ? "Meetingandleave" : "";
        //                if (returnString == "Meetingandleave")
        //                {
        //                    goto Error;
        //                }
        //                else
        //                {

        //                    date = callExecutionDataObjectnew.date + " " + callExecutionDataObjectnew.startTime;
        //                    DateTime result;
        //                    if (!DateTime.TryParse(date, out result))
        //                    {
        //                        returnString = "DateTime Format Is invalid";
        //                        goto Error;
        //                    }
        //                    DateTime executedDateTime = DateTime.ParseExact(callExecutionDataObjectnew.executionDateTime, "dd/MM/yyyy HH:mm:ss",
        //                                     CultureInfo.InvariantCulture);

        //                    string rectype = "S";
        //                    month = result.Month;
        //                    year = result.Year;
        //                    var smsmonth = Convert.ToInt32(result.Month);
        //                    var smsyear = Convert.ToInt32(result.Year);

        //                    var getatt = _dl.GetData("sp_CheckAttLeave_New", new NameValueCollection { { "@empid-int", callExecutionDataObjectnew.employeeId.ToString() }, { "@MDateTime-datetime", date.ToString() } });
        //                    if (getatt.Tables[0].Rows[0][0].ToString() == "alreadyLeave")
        //                    {
        //                        returnString = "leaveMarked";
        //                        goto Error;
        //                    }
        //                    else
        //                    {

        //                        #region preedays work

        //                        string dt_temp = "";
        //                        string pree_day = "0";
        //                        int aloowsDays = 24;

        //                        dt_temp = Convert.ToString(result).ToString();

        //                        _nvCollection.Clear();
        //                        _nvCollection.Add("@EmployeeId-bigint", callExecutionDataObjectnew.employeeId.ToString());

        //                        DataSet ds_p = _dl.GetData("sp_SelectEmployeePree_days_withEmpID", _nvCollection);
        //                        if (ds_p != null)
        //                        {
        //                            if (ds_p.Tables[0].Rows.Count > 0)
        //                            {
        //                                pree_day = ds_p.Tables[0].Rows[0]["pree_days"].ToString();

        //                                if (pree_day == "")
        //                                {
        //                                    pree_day = "0";
        //                                }
        //                                else if (ds_p.Tables[0].Rows[0]["pree_days"] == null)
        //                                {
        //                                    pree_day = "0";
        //                                }

        //                            }
        //                        }

        //                        //if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) <= Convert.ToDateTime(System.DateTime.Now.ToString("MM/dd/yyyy")))
        //                        //{
        //                        //    if (DATEDIFFForHours("Hours", Convert.ToDateTime(dt_temp), Convert.ToDateTime(System.DateTime.Now)) > 24)
        //                        //    {
        //                        //        if (DATEDIFFForHours("Hours", Convert.ToDateTime(dt_temp), Convert.ToDateTime(System.DateTime.Now)) > ((Convert.ToInt32(pree_day) * aloowsDays) + 0))
        //                        //        {
        //                        //            returnString = "PreeDays";
        //                        //            goto Error;
        //                        //        }
        //                        //    }
        //                        //}
        //                        if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) <= Convert.ToDateTime(System.DateTime.Now.ToString("MM/dd/yyyy")))
        //                        {
        //                            if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) != Convert.ToDateTime(executedDateTime.ToString("MM/dd/yyyy")))
        //                            {
        //                                if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) <= Convert.ToDateTime(executedDateTime.ToString("MM/dd/yyyy")))
        //                                {
        //                                    if (DATEDIFF("Days", Convert.ToDateTime(dt_temp), Convert.ToDateTime(executedDateTime)) > Convert.ToInt32(pree_day))
        //                                    {
        //                                        returnString = "PreeDays";
        //                                        goto Error;
        //                                    }
        //                                }
        //                                else
        //                                {
        //                                    returnString = "Not Allowed";
        //                                    goto Error;
        //                                }
        //                            }
        //                        }
        //                        else
        //                        {
        //                            returnString = "Not Allowed";
        //                            goto Error;
        //                        }

        //                        #endregion

        //                        #region Employee Information
        //                        var dsEmployeeMemberShipInfo = _dl.GetData("sp_EmployeeMembershipSelectByEmployee",
        //                            new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
        //                        if (dsEmployeeMemberShipInfo != null)
        //                        {
        //                            var dsEmployeeHierarchy = _dl.GetData("sp_EmplyeeHierarchySelect",
        //                                new NameValueCollection { { "@SystemUserID-BIGINT", dsEmployeeMemberShipInfo.Tables[0].Rows[0]["SystemUserID"].ToString() } });
        //                            if (dsEmployeeHierarchy != null)
        //                            {
        //                                level1 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId1"].ToString();
        //                                level2 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId2"].ToString();
        //                                level3 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId3"].ToString();
        //                                level4 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId4"].ToString();
        //                                level5 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId5"].ToString();
        //                                level6 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId6"].ToString();
        //                            }
        //                        }
        //                        else
        //                        {
        //                            returnString = "Employee Not Found";
        //                            goto Error;
        //                        }
        //                        #endregion


        //                        var doctorCodeArray = callExecutionDataObjectnew.docDetail.Split(',');
        //                        for (int k = 0; k < doctorCodeArray.Length; k++)
        //                        {

        //                            #region Get Doctor Details
        //                            var doctorCode = doctorCodeArray[k];
        //                            //var dsGetMrDoctorDetails = _dl.GetData("sp_MRDoctorSelectByCode", new NameValueCollection { { "@EmployeeId-bigint", employeeId }, { "@Code-nvarchar-20", doctorCode } });+
        //                            var dsGetMrDoctorDetails = _dl.GetData("sp_MRDoctorSelectByCode_new", new NameValueCollection { { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@Code-nvarchar-20", doctorCode }, { "@month-int", month.ToString() }, { "@year-int", year.ToString() } });
        //                            if (dsGetMrDoctorDetails != null)
        //                            {
        //                                if (dsGetMrDoctorDetails.Tables[0].Rows.Count > 0)
        //                                {
        //                                    doctorId = dsGetMrDoctorDetails.Tables[0].Rows[0]["DoctorId"].ToString();

        //                                    #region Get Class Of Doctor

        //                                    //var doctorClassDetail = _dl.GetData("sp_ClassOfDoctorSelect",
        //                                    //    new NameValueCollection { { "@DoctorId-bigint", doctorId } });
        //                                    var doctorClassDetail = _dl.GetData("sp_ClassOfDoctorOfSPOSelect",
        //                             new NameValueCollection { { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@DoctorId-bigint", doctorId }, { "@month-int", month.ToString() }, { "@year-int", year.ToString() } });
        //                                    if (doctorClassDetail != null)
        //                                        if (doctorClassDetail.Tables[0].Rows.Count > 0)
        //                                        {
        //                                            classId = doctorClassDetail.Tables[0].Rows[0]["ClassId"].ToString();
        //                                        }
        //                                        else
        //                                        {
        //                                            returnString = "Class Of Doctor Not Found";
        //                                            if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                                        }

        //                                    #endregion

        //                                    #region Get Speciality Of Doctor

        //                                    var doctorspecialitydetail = _dl.GetData("sp_doctorspecialityselectbydoctor",
        //                                        new NameValueCollection { { "@doctorid-bigint", doctorId } });
        //                                    if (doctorspecialitydetail != null)
        //                                        if (doctorspecialitydetail.Tables[0].Rows.Count > 0)
        //                                        {
        //                                            specialityId = doctorspecialitydetail.Tables[0].Rows[0]["specialityid"].ToString();
        //                                        }
        //                                        else
        //                                        {
        //                                            returnString = "speciality of doctor not found";
        //                                            if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                                        }

        //                                    #endregion

        //                                    #region Get Qualification Of Doctor

        //                                    var doctorQualificationDetail = _dl.GetData("sp_QualificationsOfDoctorsSelectByDoctor",
        //                                        new NameValueCollection { { "@DoctorId-BIGINT", doctorId } });
        //                                    if (doctorQualificationDetail != null)
        //                                        if (doctorQualificationDetail.Tables[0].Rows.Count > 0)
        //                                        {
        //                                            qulificationId = doctorQualificationDetail.Tables[0].Rows[0]["QulificationId"].ToString();
        //                                        }
        //                                        else
        //                                        {
        //                                            returnString = "Qualification Of Doctor Not Found";
        //                                            if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                                        }

        //                                    #endregion
        //                                }
        //                            }
        //                            else
        //                            {
        //                                returnString = "Doctor Not Found in Doctor List Of MIO";
        //                                if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                            }

        //                            #endregion

        //                            #region Get Visit Shift

        //                            var hour = Convert.ToInt32(result.ToString("HH"));

        //                            string vt;
        //                            if (hour >= 0 && hour < 12)
        //                            {
        //                                vt = "1";
        //                            }
        //                            else if (hour < 17)
        //                            {
        //                                vt = "1";
        //                            }
        //                            else
        //                            {
        //                                vt = "2";
        //                            }



        //                            #endregion


        //                            #region PreSalesCallInsert

        //                            var getcountstand = _dl.GetData("getcountryStandardtime", new NameValueCollection { { "@employeeid-int", callExecutionDataObjectnew.employeeId } });
        //                            var inTimeZone = TimeZoneInfo.FindSystemTimeZoneById(getcountstand.Tables[0].Rows[0][0].ToString());
        //                            DateTime inTime = TimeZoneInfo.ConvertTime(DateTime.Now, TimeZoneInfo.Local, inTimeZone);
        //                            DataSet set = _dl.GetData("sp_check_call_execute", new NameValueCollection { { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QualificationId-int,", qulificationId }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@IsPlanned-VARCHAR-50", callExecutionDataObjectnew.isPlanned == "No" ? "NULL" : callExecutionDataObjectnew.isPlanned }, { "@visitdate-datetime", result.ToString() }, });
        //                            if (set.Tables[0].Rows.Count > 0)
        //                            {
        //                                returnString = "Already Executed";
        //                                if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                            }
        //                            else
        //                            {

        //                                if (callExecutionDataObjectnew.isPlanned == "No")
        //                                {

        //                                    DataSet set2 = _dl.GetData("sp_check_CallExecuteForUnplanned", new NameValueCollection { { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@visitdate-datetime", result.ToString() }, });
        //                                    if (set2.Tables[0].Rows.Count > 0)
        //                                    {
        //                                        returnString = "Planned";
        //                                        if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                                    }
        //                                    else
        //                                    {

        //                                        var dsPreSalesCalls = _dl.GetData("sp_PreSalesCallsInsert2", new NameValueCollection { { "@VisitDateTime-datetime", result.ToString() }, { "@Level1LevelId-int,", level1 }, { "@Level2LevelId-int,", level2 }, { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QulificationId-int,", qulificationId }, { "@CreationDateTime-datetime", inTime.ToString() }, { "@CallTypeId-int", "1" }, { "@VisitShift-int,", vt }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@InboundId-bigint", "NULL" }, { "@DocCode-INT", doctorCode }, { "@IsPlanned-VARCHAR-50", callExecutionDataObjectnew.isPlanned == "No" ? "NULL" : callExecutionDataObjectnew.isPlanned }, { "@ActivityID-INT", callExecutionDataObjectnew.activity }, { "@ReasonID-INT", callExecutionDataObjectnew.reason } });
        //                                        if (dsPreSalesCalls != null)
        //                                        {
        //                                            if (dsPreSalesCalls.Tables[0].Rows.Count > 0)
        //                                            {
        //                                                salesCallsId = Convert.ToInt64(dsPreSalesCalls.Tables[0].Rows[0]["SalesCallId"].ToString());
        //                                            }
        //                                            else
        //                                            {
        //                                                returnString = "Error In Saving In PreSalesCalls";
        //                                                if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                                            }
        //                                        }
        //                                        else
        //                                        {
        //                                            returnString = "Error In Saving In PreSalesCalls";
        //                                            if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                                        }
        //                                    }
        //                                }
        //                                else
        //                                {
        //                                    var dsPreSalesCalls = _dl.GetData("sp_PreSalesCallsInsert2", new NameValueCollection { { "@VisitDateTime-datetime", result.ToString() }, { "@Level1LevelId-int,", level1 }, { "@Level2LevelId-int,", level2 }, { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QulificationId-int,", qulificationId }, { "@CreationDateTime-datetime", inTime.ToString() }, { "@CallTypeId-int", "1" }, { "@VisitShift-int,", vt }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@InboundId-bigint", "NULL" }, { "@DocCode-INT", doctorCode }, { "@IsPlanned-VARCHAR-50", callExecutionDataObjectnew.isPlanned == "No" ? "NULL" : callExecutionDataObjectnew.isPlanned }, { "@ActivityID-INT", callExecutionDataObjectnew.activity }, { "@ReasonID-INT", callExecutionDataObjectnew.reason } });
        //                                    if (dsPreSalesCalls != null)
        //                                    {
        //                                        if (dsPreSalesCalls.Tables[0].Rows.Count > 0)
        //                                        {
        //                                            salesCallsId = Convert.ToInt64(dsPreSalesCalls.Tables[0].Rows[0]["SalesCallId"].ToString());
        //                                        }
        //                                        else
        //                                        {
        //                                            returnString = "Error In Saving In PreSalesCalls";
        //                                            if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                                        }
        //                                    }
        //                                    else
        //                                    {
        //                                        returnString = "Error In Saving In PreSalesCalls";
        //                                        if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                                    }
        //                                }
        //                            }
        //                            #endregion

        //                            if (salesCallsId != 0)
        //                            {

        //                                #region Mobile Exec Time
        //                                if (callExecutionDataObjectnew.executionDateTime != null)
        //                                {
        //                                    _nvCollection.Clear();
        //                                    _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                    _nvCollection.Add("@mobexectime-datetime", executedDateTime.ToString());

        //                                    var mac = _dl.GetData("sp_Insert_MobExecutionTime", _nvCollection);
        //                                }
        //                                #endregion

        //                                #region CallDoctors


        //                                // ReSharper disable once UnusedVariable
        //                                if (_dataContext != null)
        //                                {
        //                                    var insertCallDoctors = _dataContext.sp_CallDoctorsInsert(salesCallsId, Convert.ToInt64(doctorId)).ToList();
        //                                }

        //                                #endregion

        //                                #region CallVisitors


        //                                if (!Convert.ToBoolean(callExecutionDataObjectnew.coaching))
        //                                {
        //                                    // ReSharper disable once UnusedVariable
        //                                    var dsIsCoaching = _dl.InserData("sp_InsertCallCoaching",
        //                                        new NameValueCollection
        //                {
        //                    {"@SalesCallId-INT", salesCallsId.ToString()},
        //                    {"@IsCoaching-VARCHAR-50", "0"}
        //                });
        //                                }
        //                                else
        //                                {
        //                                    // ReSharper disable once UnusedVariable
        //                                    var dsIsCoaching = _dl.InserData("sp_InsertCallCoaching",
        //                                        new NameValueCollection
        //                {
        //                    {"@SalesCallId-INT", salesCallsId.ToString()},
        //                    {"@IsCoaching-VARCHAR-50", "1"}
        //                });
        //                                }

        //                                long jvflma = 0;
        //                                long jvslma = 0;
        //                                long jvftma = callExecutionDataObjectnew.jvftm == "true" ? 1 : 0;
        //                                //NSM
        //                                long jvbuha = 0;
        //                                //GM
        //                                long jvgma = 0;
        //                                long jvcooa = callExecutionDataObjectnew.jvcoo == "true" ? 1 : 0;
        //                                long jvcda = callExecutionDataObjectnew.jvcd == "true" ? 1 : 0;
        //                                long jvpma = callExecutionDataObjectnew.jvpm == "true" ? 1 : 0;
        //                                if (Convert.ToBoolean(callExecutionDataObjectnew.jvflm))
        //                                {
        //                                    var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
        //                                    if (dsFlm != null)
        //                                    {
        //                                        if (dsFlm.Tables[0].Rows.Count > 0)
        //                                        {
        //                                            jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                        }
        //                                    }
        //                                }
        //                                if (Convert.ToBoolean(callExecutionDataObjectnew.jvslm))
        //                                {
        //                                    var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
        //                                    if (dsFlm != null)
        //                                    {
        //                                        if (dsFlm.Tables[0].Rows.Count > 0)
        //                                        {
        //                                            jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                            var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(jvflma) } });
        //                                            if (dsSlm != null)
        //                                            {
        //                                                if (dsSlm.Tables[0].Rows.Count > 0)
        //                                                {
        //                                                    jvslma = Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                                }
        //                                            }
        //                                        }
        //                                    }
        //                                }
        //                                //Check if Joint Visit is with NSM
        //                                if (Convert.ToBoolean(callExecutionDataObjectnew.jvbuh))
        //                                {
        //                                    var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
        //                                    if (dsFlm != null)
        //                                    {
        //                                        if (dsFlm.Tables[0].Rows.Count > 0)
        //                                        {
        //                                            jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                            //var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(jvflma) } });
        //                                            var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });
        //                                            if (dsSlm != null)
        //                                            {
        //                                                if (dsSlm.Tables[0].Rows.Count > 0)
        //                                                {
        //                                                    jvslma = Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                                    var dsBuh = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });

        //                                                    if (dsBuh != null)
        //                                                    {
        //                                                        if (dsBuh.Tables[0].Rows.Count > 0)
        //                                                        {

        //                                                            jvbuha = Convert.ToInt64(dsBuh.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                                        }
        //                                                    }
        //                                                }
        //                                            }
        //                                        }
        //                                    }
        //                                }
        //                                //Check if Joint Visit is with GM
        //                                if (Convert.ToBoolean(callExecutionDataObjectnew.jvgm))
        //                                {
        //                                    var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
        //                                    if (dsFlm != null)
        //                                    {
        //                                        if (dsFlm.Tables[0].Rows.Count > 0)
        //                                        {
        //                                            jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                            //var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(jvflma) } });
        //                                            var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });
        //                                            if (dsSlm != null)
        //                                            {
        //                                                if (dsSlm.Tables[0].Rows.Count > 0)
        //                                                {
        //                                                    jvslma = Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                                    var dsBuh = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });

        //                                                    if (dsBuh != null)
        //                                                    {
        //                                                        if (dsBuh.Tables[0].Rows.Count > 0)
        //                                                        {
        //                                                            jvbuha = Convert.ToInt64(dsBuh.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                                            var dsGm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsBuh.Tables[0].Rows[0]["ManagerId"].ToString())) } });
        //                                                            if (dsGm != null)
        //                                                            {
        //                                                                if (dsGm.Tables[0].Rows.Count > 0)
        //                                                                {

        //                                                                    jvgma = Convert.ToInt64((dsGm.Tables[0].Rows[0]["ManagerId"].ToString() == "" ? "1" : dsGm.Tables[0].Rows[0]["ManagerId"].ToString()));
        //                                                                }
        //                                                            }
        //                                                        }
        //                                                    }
        //                                                }
        //                                            }
        //                                        }
        //                                    }
        //                                }
        //                                jvflma = callExecutionDataObjectnew.jvflm == "true" ? jvflma : 0;
        //                                jvslma = callExecutionDataObjectnew.jvslm == "true" ? jvslma : 0;
        //                                jvbuha = callExecutionDataObjectnew.jvbuh == "true" ? jvbuha : 0;
        //                                jvgma = callExecutionDataObjectnew.jvgm == "true" ? jvgma : 0;

        //                                //if (Convert.ToBoolean(callExecutionDataObject.jvho1))
        //                                //{
        //                                //    jvHO1 = 1;
        //                                //}
        //                                //if (Convert.ToBoolean(callExecutionDataObject.jvho2))
        //                                //{
        //                                //    jvHO2 = 1;
        //                                //}
        //                                //// ReSharper disable once UnusedVariable
        //                                long? nullable = null;
        //                                if (_dataContext != null)
        //                                {

        //                                    /* var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew(salesCallsId, Convert.ToInt64(callExecutionDataObject.employeeId),
        //                                         ((jvflma == 0) ? nullable : jvflma),
        //                                         ((jvslma == 0) ? nullable : jvslma),
        //                                         ((jvHO1 == 0) ? nullable : jvHO1),
        //                                         ((jvHO2 == 0) ? nullable : jvHO2)).ToList();*/
        //                                    var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew_withjv8(salesCallsId, Convert.ToInt64(callExecutionDataObjectnew.employeeId),
        //                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvflm)) ? nullable : jvflma),
        //                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvslm)) ? nullable : jvslma),
        //                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvftm)) ? nullable : jvftma),
        //                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvbuh)) ? nullable : jvbuha),
        //                                        //ye parameter sahih lgane hain filhal temporary lgaye hen 
        //                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvgm)) ? nullable : jvgma),
        //                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvcoo)) ? nullable : jvcooa),
        //                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvcd)) ? nullable : jvcda),
        //                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvpm)) ? nullable : jvpma)
        //                                ).ToList();

        //                                    /*if (jvflma == 0 && jvslma == 0)
        //                                    {
        //                                        var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew(salesCallsId, Convert.ToInt64(callExecutionDataObject.employeeId), null, null, null, null).ToList();
        //                                    }
        //                                    else
        //                                    {
        //                                        var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew(salesCallsId, Convert.ToInt64(callExecutionDataObject.employeeId), jvflma, jvslma, 0, 0).ToList();
        //                                    }*/

        //                                }

        //                                #endregion

        //                                #region VisitFeedBack

        //                                if (_dataContext != null)
        //                                {
        //                                    // ReSharper disable once UnusedVariable
        //                                    var insertFeedBack = _dataContext.sp_VisitFeedBackInsert(salesCallsId, callExecutionDataObjectnew.callNotes).ToList();
        //                                }

        //                                #endregion

        //                                #region CallProducts

        //                                // ReSharper disable once NotAccessedVariable
        //                                List<CallProduct> insertCallProduct;

        //                                if (callExecutionDataObjectnew.product1 != "-1")
        //                                {
        //                                    if (_dataContext != null)
        //                                    {
        //                                        // ReSharper disable once RedundantAssignment
        //                                        //insertCallProduct =
        //                                        //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product1), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product1), 1).ToList();
        //                                        insertCallProduct =
        //                                            _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnew.product1), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnew.product1), 1).ToList();

        //                                        if (callExecutionDataObjectnew.p1Notes != "" && insertCallProduct.Count > 0)
        //                                        {
        //                                            var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
        //                                                new NameValueCollection { 
        //                                        { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() }, 
        //                                        { "@Comment-varchar(max),", callExecutionDataObjectnew.p1Notes} 
        //                                        });
        //                                        }
        //                                    }


        //                                }


        //                                if (callExecutionDataObjectnew.product2 != "-1")
        //                                {
        //                                    if (_dataContext != null)
        //                                    {
        //                                        // ReSharper disable once RedundantAssignment
        //                                        //insertCallProduct =
        //                                        //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product2), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product1), 2).ToList();
        //                                        insertCallProduct =
        //                                            _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnew.product2), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnew.product2), 2).ToList();

        //                                        if (callExecutionDataObjectnew.p2Notes != "" && insertCallProduct.Count > 0)
        //                                        {
        //                                            var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
        //                                                new NameValueCollection { 
        //                                        { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() }, 
        //                                        { "@Comment-varchar(max),", callExecutionDataObjectnew.p2Notes} 
        //                                        });
        //                                        }

        //                                    }
        //                                }

        //                                if (callExecutionDataObjectnew.product3 != "-1")
        //                                {
        //                                    if (_dataContext != null)
        //                                    {
        //                                        // ReSharper disable once RedundantAssignment
        //                                        //insertCallProduct =
        //                                        //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product3), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product3), 3).ToList();
        //                                        insertCallProduct =
        //                                            _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnew.product3), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnew.product3), 3).ToList();

        //                                        if (callExecutionDataObjectnew.p3Notes != "" && insertCallProduct.Count > 0)
        //                                        {
        //                                            var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
        //                                                new NameValueCollection { 
        //                                        { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() }, 
        //                                        { "@Comment-varchar(max),", callExecutionDataObjectnew.p3Notes} 
        //                                        });
        //                                        }
        //                                    }
        //                                }

        //                                if (callExecutionDataObjectnew.product4 != "-1")
        //                                {
        //                                    if (_dataContext != null)
        //                                    {
        //                                        // ReSharper disable once RedundantAssignment
        //                                        //insertCallProduct =
        //                                        //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product4), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product4), 4).ToList();
        //                                        insertCallProduct =
        //                                            _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnew.product4), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnew.product4), 4).ToList();

        //                                        if (callExecutionDataObjectnew.p4Notes != "" && insertCallProduct.Count > 0)
        //                                        {
        //                                            var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
        //                                                new NameValueCollection { 
        //                                        { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() }, 
        //                                        { "@Comment-varchar(max),", callExecutionDataObjectnew.p4Notes} 
        //                                        });
        //                                        }
        //                                    }

        //                                }



        //                                #endregion

        //                                #region CallProductSamples

        //                                if (callExecutionDataObjectnew.sample1 != "-1" && callExecutionDataObjectnew.sampleQty1 != "")
        //                                {

        //                                    // var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample1 } });

        //                                    // int SampleProdID1 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());


        //                                    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObjectnew.sample1 } });

        //                                    int SampleProdID1 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
        //                                    _nvCollection.Clear();
        //                                    _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                    _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample1.ToString());
        //                                    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                    _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                    _nvCollection.Add("@year-int", smsyear.ToString());
        //                                    var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
        //                                    if (checkSample1Balance.Tables[0].Rows.Count > 0)
        //                                    {
        //                                        int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
        //                                        int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
        //                                        int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

        //                                        if (balnc >= (qty + opening))
        //                                        {

        //                                        }
        //                                        else if ((Convert.ToInt32(callExecutionDataObjectnew.sampleQty1) + balnc) > (qty + opening))
        //                                        {

        //                                        }
        //                                        else
        //                                        {
        //                                            var newbalance = Convert.ToInt32(callExecutionDataObjectnew.sampleQty1) + balnc;
        //                                            _nvCollection.Clear();
        //                                            _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                            _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample1.ToString());
        //                                            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                            _nvCollection.Add("@Qty-int", newbalance.ToString());
        //                                            _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                            _nvCollection.Add("@year-int", smsyear.ToString());
        //                                            var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

        //                                            _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID1, Convert.ToInt32(callExecutionDataObjectnew.sample1), Convert.ToInt32(callExecutionDataObjectnew.sampleQty1), 1).ToList();
        //                                        }
        //                                    }

        //                                }

        //                                if (callExecutionDataObjectnew.sample2 != "-1" && callExecutionDataObjectnew.sampleQty2 != "")
        //                                {
        //                                    // var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample2 } });

        //                                    // int SampleProdID2 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

        //                                    // _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID2, Convert.ToInt32(callExecutionDataObject.sample2), Convert.ToInt32(callExecutionDataObject.sampleQty2), 2).ToList();


        //                                    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObjectnew.sample2 } });

        //                                    int SampleProdID2 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
        //                                    // int SampleProdID2 = Convert.ToInt32(sample2);
        //                                    _nvCollection.Clear();
        //                                    _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                    _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample2.ToString());
        //                                    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                    _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                    _nvCollection.Add("@year-int", smsyear.ToString());
        //                                    var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
        //                                    if (checkSample1Balance.Tables[0].Rows.Count > 0)
        //                                    {
        //                                        int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
        //                                        int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
        //                                        int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

        //                                        if (balnc >= (qty + opening))
        //                                        {

        //                                        }
        //                                        else if ((Convert.ToInt32(callExecutionDataObjectnew.sampleQty2) + balnc) > (qty + opening))
        //                                        {

        //                                        }
        //                                        else
        //                                        {
        //                                            var newbalance = Convert.ToInt32(callExecutionDataObjectnew.sampleQty2) + balnc;
        //                                            _nvCollection.Clear();
        //                                            _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                            _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample2.ToString());
        //                                            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                            _nvCollection.Add("@Qty-int", newbalance.ToString());
        //                                            _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                            _nvCollection.Add("@year-int", smsyear.ToString());
        //                                            var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

        //                                            _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID2, Convert.ToInt32(callExecutionDataObjectnew.sample2), Convert.ToInt32(callExecutionDataObjectnew.sampleQty2), 2).ToList();
        //                                        }
        //                                    }

        //                                }

        //                                if (callExecutionDataObjectnew.sample3 != "-1" && callExecutionDataObjectnew.sampleQty3 != "")
        //                                {

        //                                    // var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample3 } });

        //                                    //   int SampleProdID3 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

        //                                    //   _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID3, Convert.ToInt32(callExecutionDataObject.sample3), Convert.ToInt32(callExecutionDataObject.sampleQty3), 3).ToList();

        //                                    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObjectnew.sample3 } });

        //                                    int SampleProdID3 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
        //                                    //  int SampleProdID3 = Convert.ToInt32(sample3);
        //                                    _nvCollection.Clear();
        //                                    _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                    _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample3.ToString());
        //                                    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                    _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                    _nvCollection.Add("@year-int", smsyear.ToString());
        //                                    var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
        //                                    if (checkSample1Balance.Tables[0].Rows.Count > 0)
        //                                    {
        //                                        int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
        //                                        int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
        //                                        int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

        //                                        if (balnc >= (qty + opening))
        //                                        {

        //                                        }
        //                                        else if ((Convert.ToInt32(callExecutionDataObjectnew.sampleQty3) + balnc) > (qty + opening))
        //                                        {

        //                                        }
        //                                        else
        //                                        {
        //                                            var newbalance = Convert.ToInt32(callExecutionDataObjectnew.sampleQty3) + balnc;
        //                                            _nvCollection.Clear();
        //                                            _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                            _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample3.ToString());
        //                                            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                            _nvCollection.Add("@Qty-int", newbalance.ToString());
        //                                            _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                            _nvCollection.Add("@year-int", smsyear.ToString());
        //                                            var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

        //                                            _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID3, Convert.ToInt32(callExecutionDataObjectnew.sample3), Convert.ToInt32(callExecutionDataObjectnew.sampleQty3), 3).ToList();
        //                                        }
        //                                    }

        //                                }


        //                                //if (callExecutionDataObject.sample4 != "-1" && callExecutionDataObject.sampleQty4 != "")
        //                                //{

        //                                //  //  var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample4 } });

        //                                // //   int SampleProdID4 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

        //                                //  //  _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID4, Convert.ToInt32(callExecutionDataObject.sample4), Convert.ToInt32(callExecutionDataObject.sampleQty4), 4).ToList();

        //                                //    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample4 } });

        //                                //    int SampleProdID4 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
        //                                //    //int SampleProdID4 = Convert.ToInt32(sample4);
        //                                //    _nvCollection.Clear();
        //                                //    _nvCollection.Add("@mioid-int", callExecutionDataObject.employeeId.ToString());
        //                                //    _nvCollection.Add("@sample_id-int", callExecutionDataObject.sample4.ToString());
        //                                //    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                //    _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                //    _nvCollection.Add("@year-int", smsyear.ToString());
        //                                //    var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
        //                                //    if (checkSample1Balance.Tables[0].Rows.Count > 0)
        //                                //    {
        //                                //        int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
        //                                //        int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
        //                                //        int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

        //                                //        if (balnc >= (qty + opening))
        //                                //        {

        //                                //        }
        //                                //        else if ((Convert.ToInt32(callExecutionDataObject.sampleQty4) + balnc) > (qty + opening))
        //                                //        {

        //                                //        }
        //                                //        else
        //                                //        {
        //                                //            var newbalance = Convert.ToInt32(callExecutionDataObject.sampleQty4) + balnc;
        //                                //            _nvCollection.Clear();
        //                                //            _nvCollection.Add("@mioid-int", callExecutionDataObject.employeeId.ToString());
        //                                //            _nvCollection.Add("@sample_id-int", callExecutionDataObject.sample1.ToString());
        //                                //            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                //            _nvCollection.Add("@Qty-int", newbalance.ToString());
        //                                //            _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                //            _nvCollection.Add("@year-int", smsyear.ToString());
        //                                //            var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

        //                                //            _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID4, Convert.ToInt32(callExecutionDataObject.sample4), Convert.ToInt32(callExecutionDataObject.sampleQty4), 4).ToList();
        //                                //        }
        //                                //    }

        //                                //}

        //                                //if (callExecutionDataObject.sample5 != "-1" && callExecutionDataObject.sampleQty5 != "")
        //                                //{

        //                                //    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample5 } });

        //                                //    int SampleProdID5 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

        //                                //    _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID5, Convert.ToInt32(callExecutionDataObject.sample5), Convert.ToInt32(callExecutionDataObject.sampleQty5), 5).ToList();

        //                                //}

        //                                #endregion

        //                                #region CallReminder

        //                                if (callExecutionDataObjectnew.reminder1 != "-1")
        //                                {
        //                                    _dl.InserData("sp_CallReminderInsert", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@DetailReminder-int", callExecutionDataObjectnew.reminder1 }, { "@OrderBy-int", "1" } });
        //                                }

        //                                if (callExecutionDataObjectnew.reminder2 != "-1")
        //                                {
        //                                    _dl.InserData("sp_CallReminderInsert", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@DetailReminder-int", callExecutionDataObjectnew.reminder2 }, { "@OrderBy-int", "2" } });
        //                                }

        //                                if (callExecutionDataObjectnew.reminder3 != "-1")
        //                                {
        //                                    _dl.InserData("sp_CallReminderInsert", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@DetailReminder-int", callExecutionDataObjectnew.reminder3 }, { "@OrderBy-int", "3" } });
        //                                }


        //                                #endregion

        //                                #region CallGifts

        //                                // ReSharper disable once NotAccessedVariable
        //                                List<CallGift> insertCallGift;

        //                                if (callExecutionDataObjectnew.gift != "-1")
        //                                {
        //                                    // ReSharper disable once RedundantAssignment
        //                                    insertCallGift = callExecutionDataObjectnew.giftQty != "" ? _dataContext.sp_CallGiftsInsert(salesCallsId, Convert.ToInt32(callExecutionDataObjectnew.gift), Convert.ToInt32(callExecutionDataObjectnew.giftQty), 1).ToList() : _dataContext.sp_CallGiftsInsert(salesCallsId, Convert.ToInt32(callExecutionDataObjectnew.gift), 0, 1).ToList();
        //                                }


        //                                #endregion

        //                                #region MacAddress
        //                                // macaddress = "123.213.163";
        //                                if (callExecutionDataObjectnew.macaddress != null)
        //                                {
        //                                    _nvCollection.Clear();
        //                                    _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                    _nvCollection.Add("@EmployesID-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                    _nvCollection.Add("@macaddress-varchar(50)", callExecutionDataObjectnew.macaddress.ToString());

        //                                    var mac = _dl.GetData("sp_insert_macaddress", _nvCollection);
        //                                }
        //                                #endregion

        //                                #region Location
        //                                if (callExecutionDataObjectnew.longitude != null && callExecutionDataObjectnew.latitude != null)
        //                                {
        //                                    _nvCollection.Clear();
        //                                    _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                    _nvCollection.Add("@long-varchar(100)", callExecutionDataObjectnew.longitude.ToString());
        //                                    _nvCollection.Add("@lat-varchar(100)", callExecutionDataObjectnew.latitude.ToString());
        //                                    var ch = _dl.GetData("sp_Insert_Location", _nvCollection);
        //                                }

        //                                #endregion

        //                                #region Fake Users Calls Data

        //                                try
        //                                {
        //                                    if (callExecutionDataObjectnew.flag != null)
        //                                    {
        //                                        _nvCollection.Clear();

        //                                        _nvCollection.Clear();
        //                                        _nvCollection.Add("@SalesCalID-int", salesCallsId.ToString());
        //                                        _nvCollection.Add("@Flag-int", ((Convert.ToBoolean(callExecutionDataObjectnew.flag.ToString())) ? "1" : "0"));
        //                                        _nvCollection.Add("@AppVersion-varchar(100)", callExecutionDataObjectnew.appversion);
        //                                        _nvCollection.Add("@MacAddress-varchar(100)", callExecutionDataObjectnew.macaddress);
        //                                        _nvCollection.Add("@ApplicationPackages-text", callExecutionDataObjectnew.applicationpackages);
        //                                        _nvCollection.Add("@ModelNumber-text", callExecutionDataObjectnew.modelnumber);
        //                                        var ch = _dl.GetData("sp_fakeUsersData", _nvCollection);


        //                                    }
        //                                }
        //                                catch (Exception)
        //                                {

        //                                    //throw;
        //                                }



        //                                #endregion

        //                                #region Range

        //                                string range = "";
        //                                _nvCollection.Clear();
        //                                _nvCollection.Add("@DoctorID-int", doctorId.ToString());


        //                                DataSet dslastlatlng = _dl.GetData("sp_Doctorlatlng", _nvCollection);
        //                                string getrange = ConfigurationManager.AppSettings["Range"].ToString();
        //                                if (dslastlatlng.Tables[0].Rows.Count > 0)
        //                                {
        //                                    double distanceInMeters = new GeoCoordinate(Convert.ToDouble(dslastlatlng.Tables[0].Rows[0][0].ToString()), Convert.ToDouble(dslastlatlng.Tables[0].Rows[0][1].ToString()))
        //                                    .GetDistanceTo(new GeoCoordinate(Convert.ToDouble(callExecutionDataObjectnew.latitude.ToString()), Convert.ToDouble(callExecutionDataObjectnew.longitude.ToString())));

        //                                    if (distanceInMeters <= Convert.ToDouble(getrange))
        //                                    {
        //                                        range = "InRange";
        //                                    }
        //                                    else
        //                                    {
        //                                        range = "OutRange";
        //                                    }

        //                                    var rangestatus = _dl.GetData("sp_insertrangestatus", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@RangeStatus-varchar(50)", range.ToString() }, { "@Distance-varchar(100)", distanceInMeters.ToString() } });
        //                                }
        //                                else
        //                                {
        //                                    var rangestatus = _dl.GetData("sp_insertrangestatus", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@RangeStatus-varchar(50)", "NewTag" }, { "@Distance-varchar(100)", "0.0" } });
        //                                }

        //                                #endregion

        //                                #region Doctortagging

        //                                try
        //                                {
        //                                    string apiKey = ConfigurationManager.AppSettings["MapsAPIKey"].ToString();
        //                                    string url = string.Format("https://eu1.locationiq.com/v1/reverse.php?key={0}&lat={1}&lon={2}&format=xml", apiKey, callExecutionDataObjectnew.latitude.ToString(), callExecutionDataObjectnew.longitude.ToString());
        //                                    WebRequest request = WebRequest.Create(url);
        //                                    using (WebResponse response = (HttpWebResponse)request.GetResponse())
        //                                    {
        //                                        using (StreamReader reader = new StreamReader(response.GetResponseStream(), Encoding.UTF8))
        //                                        {
        //                                            DataSet dsResult = new DataSet();
        //                                            dsResult.ReadXml(reader);//format in xml
        //                                            DataTable dtCoordinates = new DataTable();
        //                                            dtCoordinates.Columns.AddRange(new DataColumn[1] { new DataColumn("AreaAddress", typeof(string)) });

        //                                            if (dsResult.Tables.Count > 1)
        //                                            {
        //                                                var data = dsResult.Tables[1];
        //                                                var add1 = data.Rows[0]["result_text"].ToString();
        //                                                address = add1;
        //                                            }

        //                                        }
        //                                    }
        //                                }
        //                                catch (Exception e)
        //                                {
        //                                    returnString = e.Message;
        //                                    goto DoneExecution;
        //                                }


        //                                #endregion

        //                                #region Doctor Location
        //                                if (callExecutionDataObjectnew.longitude != null && callExecutionDataObjectnew.latitude != null)
        //                                {
        //                                    _nvCollection.Clear();
        //                                    _nvCollection.Add("@DoctorID-int", doctorId.ToString());

        //                                    DataSet dsloccount = _dl.GetData("sp_CountDoctorTagging", _nvCollection);

        //                                    if (dsloccount.Tables[0].Rows.Count < 1)
        //                                    {
        //                                        _nvCollection.Clear();
        //                                        _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                        _nvCollection.Add("@DoctorID-int", doctorId.ToString());
        //                                        _nvCollection.Add("@VisitShift-int", vt);
        //                                        _nvCollection.Add("@long-varchar(100)", callExecutionDataObjectnew.longitude.ToString());
        //                                        _nvCollection.Add("@lat-varchar(100)", callExecutionDataObjectnew.latitude.ToString());
        //                                        _nvCollection.Add("@Address-varchar(MAX)", address.ToString());
        //                                        var ch = _dl.GetData("sp_Insert_DoctorTagging", _nvCollection);
        //                                    }

        //                                }
        //                                #endregion

        //                                #region CalculateDistanceForExpenseData



        //                                _nvCollection.Clear();

        //                                //_nvCollection.Add("@SalesCallID-int", salesCallsId.ToString());

        //                                //_nvCollection.Add("@AutoActivityStatus-int", callExecutionDataObject.AutoActivityStart.ToString());
        //                                _nvCollection.Add("@EmployeeID-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                _nvCollection.Add("@Salescallid-int", salesCallsId.ToString());
        //                                _nvCollection.Add("@Month-int", result.Month.ToString());
        //                                _nvCollection.Add("@Year-int", result.Year.ToString());
        //                                _nvCollection.Add("@Day-int", result.Day.ToString());

        //                                DataSet distanceforExpense = _dl.GetData("sp_GetLatLongforCallDistance", _nvCollection);

        //                                if (distanceforExpense.Tables[0].Rows.Count > 0 && distanceforExpense.Tables[0].Rows[0][0].ToString() != "FIRST CALL" && distanceforExpense.Tables[0].Rows[0][0].ToString() != "ACTIVITY NOT STARTED")
        //                                {
        //                                    //double distanceInMeters = new GeoCoordinate(Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][1].ToString()), Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][2].ToString()))
        //                                    //    .GetDistanceTo(new GeoCoordinate(Convert.ToDouble(callExecutionDataObjectnew.latitude.ToString()), Convert.ToDouble(callExecutionDataObjectnew.longitude.ToString())));
        //                                    if (distanceforExpense.Tables[0].Rows[0][1].ToString() != "0.0")
        //                                    {
        //                                        string url = "http://www.yournavigation.org/api/1.0/gosmore.php?flat=" + distanceforExpense.Tables[0].Rows[0][1].ToString() + "&flon=" + distanceforExpense.Tables[0].Rows[0][2].ToString() + "&tlat=" + callExecutionDataObjectnew.latitude.ToString() + "&tlon=" + callExecutionDataObjectnew.longitude.ToString() + "&format=geojson" + callExecutionDataObjectnew.latitude.ToString() + "," + callExecutionDataObjectnew.longitude.ToString() + "&sensor=false";
        //                                        WebRequest request = WebRequest.Create(url);
        //                                        using (WebResponse response = (HttpWebResponse)request.GetResponse())
        //                                        {
        //                                            using (StreamReader reader = new StreamReader(response.GetResponseStream(), Encoding.UTF8))
        //                                            {
        //                                                DataSet dsResult = new DataSet();
        //                                                dsResult.ReadXml(reader);//format in xml
        //                                                GetCallDitanceForMobile = Convert.ToDouble(dsResult.Tables[0].Rows[0][2].ToString());
        //                                                //  Flag = "DATABASE";
        //                                                if (GetCallDitanceForMobile == 0)
        //                                                {
        //                                                    GetCallDitanceForMobile = new GeoCoordinate(Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][3].ToString()), Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][4].ToString()))
        //                                         .GetDistanceTo(new GeoCoordinate(Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][8].ToString()), Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][9].ToString())));
        //                                                    GetCallDitanceForMobile = GetCallDitanceForMobile / 1000;
        //                                                    //   Flag = "API";
        //                                                }
        //                                            }
        //                                        }
        //                                    }


        //                                    //  GetCallDitanceForMobile = distanceInMeters/1000;
        //                                    Previous_Latitude = distanceforExpense.Tables[0].Rows[0][1].ToString();
        //                                    Previous_Longitude = distanceforExpense.Tables[0].Rows[0][2].ToString();
        //                                    Previous_salescallid = Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][0].ToString());
        //                                    LastDocCity = Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][4].ToString());
        //                                    //  startactid = Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][3].ToString());

        //                                    if ((Previous_Latitude.ToString() == "0" || Previous_Latitude.ToString() == "0") &&
        //                                       (Previous_Longitude.ToString() == "0" || Previous_Longitude.ToString() == "0"))
        //                                    {
        //                                        distanceZero = "Previous Location does not exist";
        //                                    }
        //                                    else
        //                                    {
        //                                        distanceZero = "";
        //                                    }

        //                                    ////GeoCoordinate pin1 = new GeoCoordinate(Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][1].ToString()), Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][2].ToString()));
        //                                    ////GeoCoordinate pin2 = new GeoCoordinate(Convert.ToDouble(callExecutionDataObject.latitude.ToString()), Convert.ToDouble(callExecutionDataObject.longitude.ToString()));

        //                                    ////double distanceBetween = pin1.GetDistanceTo(pin2);

        //                                }
        //                                else if (distanceforExpense.Tables[0].Rows[0][0].ToString() == "FIRST CALL")
        //                                {
        //                                    distanceZero = "FIRST CALL";
        //                                }


        //                                else
        //                                {

        //                                }
        //                                #endregion

        //                            }
        //                        }

        //                        #region  Expense Data Deserialization


        //                        if (callExecutionDataObjectnew.ExpenseDataJson != "[]")
        //                        {
        //                            var ExpenseData = JsonConvert.DeserializeObject<ExpenseDataJsonObject[]>(callExecutionDataObjectnew.ExpenseDataJson);
        //                            try
        //                            {
        //                                for (int k = 0; k < ExpenseData.Length; k++)
        //                                {
        //                                    var ExpenseDetailData = JsonConvert.DeserializeObject<ExpenseDetailDataJsonObject[]>(ExpenseData[k].expenseData);
        //                                    for (int l = 0; l < ExpenseDetailData.Length; l++)
        //                                    {

        //                                        _nvCollection.Clear();

        //                                        _nvCollection.Add("@EmployeeID-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                        _nvCollection.Add("@ActivityId-int", ExpenseDetailData[l].ActivityTypeID.ToString());
        //                                        _nvCollection.Add("@Month-int", result.Month.ToString());
        //                                        _nvCollection.Add("@Year-int", result.Year.ToString());
        //                                        _nvCollection.Add("@Day-int", result.Day.ToString());
        //                                        DataSet ChkOutBackAndNightStay = _dl.GetData("sp_chkOutBackAndNightStayExecuted", _nvCollection);

        //                                        if (ChkOutBackAndNightStay.Tables[0].Rows[0][0].ToString() == "Already Executed")
        //                                        {
        //                                            //returnString = "Already Activity Executed";
        //                                            //goto Error;
        //                                            var getExpenid = _dl.GetData("sp_INSERTExpenseDetailWithCall", new NameValueCollection { 
        //                                    { "@salesCallId-int", salesCallsId.ToString() }, 
        //                                    { "@expenseId-int", "NULL" }, 
        //                                    { "@ExpenseValue-int", "NULL" }, 
        //                                    { "@CallDitanceForMobile-varchar(250)",(callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString() }, 
        //                                    { "@CallDitanceForportal-varchar(250)", GetCallDitanceForMobile.ToString() }, 
        //                                    { "@EmployeeId-Bigint", callExecutionDataObjectnew.employeeId.ToString() }, 
        //                                    { "@doctorId-int", doctorId.ToString() },
        //                                    { "@PreviousSalescall-Bigint", Previous_salescallid.ToString() }, 
        //                                    { "@PreviousLongitude-Bigint", Previous_Longitude.ToString()}, 
        //                                    { "@PreviousLatitude-Bigint", Previous_Latitude.ToString()},
        //                                     { "@Systemvariable-Bigint", distanceZero.ToString()}, 
        //                                          { "@LastDocCity-Bigint", LastDocCity.ToString()},
        //                                       { "@startactid-Bigint", Flag.ToString()}, { "@Date-Bigint", result.ToString()}
        //                                            });

        //                                            Constants.ImagesSuccesLog("Date:-" + System.DateTime.Now.ToString() + "--" + "IMsert In sp_INSERTExpenseDetailWithCall:- " + " SalesCallID : " + salesCallsId.ToString() + " CallDitanceForMobile: " + ((callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString()) + " CallDitanceForportal: " + GetCallDitanceForMobile.ToString() + " EmployeeId: " + callExecutionDataObjectnew.employeeId.ToString() + " doctorId: " + doctorId.ToString());

        //                                        }

        //                                        else
        //                                        {
        //                                            var getExpenid = _dl.GetData("sp_INSERTExpenseDetailWithCall", new NameValueCollection { 
        //                                    { "@salesCallId-int", salesCallsId.ToString() }, 
        //                                    { "@expenseId-int", ExpenseDetailData[l].ActivityTypeID.ToString() }, 
        //                                    { "@ExpenseValue-int", ExpenseDetailData[l].Expense.ToString() }, 
        //                                    { "@CallDitanceForMobile-varchar(250)", (callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString()  }, 
        //                                    { "@CallDitanceForportal-varchar(250)", GetCallDitanceForMobile.ToString() }, 
        //                                    { "@EmployeeId-Bigint", callExecutionDataObjectnew.employeeId.ToString() }, 
        //                                    { "@doctorId-int", doctorId.ToString() },
        //                                    { "@PreviousSalescall-Bigint", Previous_salescallid.ToString() }, 
        //                                    { "@PreviousLongitude-Bigint", Previous_Longitude.ToString()}, 
        //                                    { "@PreviousLatitude-Bigint", Previous_Latitude.ToString()}, 
        //                                    { "@Systemvariable-Bigint", distanceZero.ToString()}, 
        //                                      { "@LastDocCity-Bigint", LastDocCity.ToString()},
        //                                    { "@startactid-Bigint", Flag.ToString()},
        //                                     { "@Date-Bigint", result.ToString()}
        //                                            });

        //                                            Constants.ImagesSuccesLog("Date:-" + System.DateTime.Now.ToString() + "--" + "Insert In sp_INSERTExpenseDetailWithCall:- " + " SalesCallID : " + salesCallsId.ToString() + " expenseId: " + ExpenseDetailData[l].ActivityTypeID.ToString() + " CallDitanceForMobile: " + ((callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString()) + " CallDitanceForportal: " + GetCallDitanceForMobile.ToString() + " EmployeeId: " + callExecutionDataObjectnew.employeeId.ToString() + " doctorId: " + doctorId.ToString());
        //                                        }
        //                                    }


        //                                }
        //                            }
        //                            catch (Exception)
        //                            {


        //                            }

        //                        }
        //                        else if (((callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile) != "0.0" || ((callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile) != "0")
        //                        {
        //                            var getExpenid = _dl.GetData("sp_INSERTExpenseDetailWithCall", new NameValueCollection { 
        //                                    { "@salesCallId-int", salesCallsId.ToString() }, 
        //                                    { "@expenseId-int", "NULL" }, 
        //                                    { "@ExpenseValue-int", "NULL" }, 
        //                                    { "@CallDitanceForMobile-varchar(250)", (callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString() }, 
        //                                    { "@CallDitanceForportal-varchar(250)", GetCallDitanceForMobile.ToString() }, 
        //                                    { "@EmployeeId-Bigint", callExecutionDataObjectnew.employeeId.ToString() }, 
        //                                    { "@doctorId-int", doctorId.ToString() },
        //                                    { "@PreviousSalescall-Bigint", Previous_salescallid.ToString() }, 
        //                                    { "@PreviousLongitude-Bigint", Previous_Longitude.ToString()}, 
        //                                    { "@PreviousLatitude-Bigint", Previous_Latitude.ToString()},
        //                                     { "@Systemvariable-Bigint", distanceZero.ToString()}, 
        //                                          { "@LastDocCity-Bigint", LastDocCity.ToString()},
        //                                       { "@startactid-Bigint", Flag.ToString()}, 
        //                                       { "@Date-Bigint", result.ToString()}
        //                                            });

        //                            Constants.ImagesSuccesLog("Date:-" + System.DateTime.Now.ToString() + "--" + "IMsert In sp_INSERTExpenseDetailWithCall:- " + " SalesCallID : " + salesCallsId.ToString() + " CallDitanceForMobile: " + ((callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString()) + " CallDitanceForportal: " + GetCallDitanceForMobile.ToString() + " EmployeeId: " + callExecutionDataObjectnew.employeeId.ToString() + " doctorId: " + doctorId.ToString());

        //                        }


        //                        #endregion



        //                        #region Image Files Data Deserialization


        //                        try
        //                        {
        //                            if (callExecutionDataObjectnew.ExpenseDataJson != "[]")
        //                            {
        //                                var ExpenseData = JsonConvert.DeserializeObject<ExpenseDataJsonObject[]>(callExecutionDataObjectnew.ExpenseDataJson);
        //                                try
        //                                {
        //                                    for (int k = 0; k < ExpenseData.Length; k++)
        //                                    {
        //                                        expensedata[] ExpenseDetailData = JsonConvert.DeserializeObject<expensedata[]>(ExpenseData[k].expenseData);
        //                                        foreach (expensedata expenseData in ExpenseDetailData)
        //                                        {

        //                                            fileNameObject[] resultfileNameJson = js.Deserialize<fileNameObject[]>(expenseData.File);

        //                                            for (int j = 0; j < resultfileNameJson.Length; j++)
        //                                            {
        //                                                var resultresultfileNameObject = resultfileNameJson[j];
        //                                                if (resultresultfileNameObject.fileName.ToString() != "+")
        //                                                {

        //                                                    _nvCollection.Clear();
        //                                                    _nvCollection.Add("@ImagePath-varchar(500)", ExpenseExecutionImagesPath + "/" + resultresultfileNameObject.fileName);
        //                                                    _nvCollection.Add("@isProfile-varchar(200)", "EXPENSE");
        //                                                    var getsync = _dl.GetData("sp_getsyncimage", _nvCollection);
        //                                                    string imagePath = ExpenseExecutionImagesPath + "/" + resultresultfileNameObject.fileName;
        //                                                    Constants.ImagesSuccesLog("Image initial table live count: " + getsync.Tables[0].Rows.Count + " Image Path : " + imagePath);
        //                                                    if (getsync != null)
        //                                                    {
        //                                                        if (getsync.Tables[0].Rows.Count > 0)
        //                                                        {

        //                                                            _nvCollection.Clear();
        //                                                            _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                                            _nvCollection.Add("@ImagePath-varchar(500)", imagePath);
        //                                                            _nvCollection.Add("@Activityid-varchar(500)", expenseData.ActivityTypeID.ToString());
        //                                                            _nvCollection.Add("@system-varchar(500)", "");
        //                                                            _nvCollection.Add("@isAvailable-bit", "1");
        //                                                            var ch = _dl.GetData("sp_InsertCallExecutionImages", _nvCollection);

        //                                                            Constants.ImagesSuccesLog("Image success table live count: " + getsync.Tables[0].Rows.Count + " isAvailable:1 & Image Path : " + imagePath);
        //                                                        }
        //                                                        else
        //                                                        {
        //                                                            _nvCollection.Clear();
        //                                                            _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                                            _nvCollection.Add("@ImagePath-varchar(500)", imagePath);
        //                                                            _nvCollection.Add("@Activityid-varchar(500)", expenseData.ActivityTypeID.ToString());
        //                                                            _nvCollection.Add("@system-varchar(500)", "");
        //                                                            _nvCollection.Add("@isAvailable-bit", "0");
        //                                                            var callimage = _dl.GetData("sp_InsertCallExecutionImages", _nvCollection);

        //                                                            Constants.ImagesSuccesLog("Image  table live count : " + getsync.Tables[0].Rows.Count + " isAvailable:0 & Image Path : " + imagePath);
        //                                                        }

        //                                                    }

        //                                                    else
        //                                                    {
        //                                                        _nvCollection.Clear();
        //                                                        _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                                        _nvCollection.Add("@ImagePath-varchar(500)", imagePath);
        //                                                        _nvCollection.Add("@Activityid-varchar(500)", expenseData.ActivityTypeID.ToString());
        //                                                        _nvCollection.Add("@system-varchar(500)", "");
        //                                                        _nvCollection.Add("@isAvailable-bit", "0");
        //                                                        var callimage = _dl.GetData("sp_InsertCallExecutionImages", _nvCollection);

        //                                                        Constants.ImagesSuccesLog("Condition Else Image  table live count : " + getsync.Tables[0].Rows.Count + " isAvailable:0 & Image Path : " + imagePath);
        //                                                    }

        //                                                    _nvCollection.Clear();
        //                                                    _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                                    _nvCollection.Add("@ImagePath-varchar(500)", imagePath);
        //                                                    _nvCollection.Add("@Activityid-varchar(500)", expenseData.ActivityTypeID.ToString());
        //                                                    _nvCollection.Add("@system-varchar(500)", "");
        //                                                    _nvCollection.Add("@isAvailable-bit", "0");
        //                                                    var finalcouse = _dl.GetData("sp_InsertCallExecutionImagesFinal", _nvCollection);


        //                                                }
        //                                            }

        //                                        }
        //                                    }
        //                                }
        //                                catch (Exception)
        //                                {


        //                                }

        //                            }

        //                        }
        //                        catch (Exception ex)
        //                        {

        //                        }
        //                        #endregion

        //                        #region EdetailingJson Data Deserialization
        //                        try
        //                        {
        //                            var resultEdetailingJson = JsonConvert.DeserializeObject<EdetailingObject[]>(callExecutionDataObjectnew.EdetailingJson);
        //                            for (int j = 0; j < resultEdetailingJson.Length; j++)
        //                            {
        //                                var resultEdetailingObject = resultEdetailingJson[j];
        //                                _nvCollection.Clear();
        //                                _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                _nvCollection.Add("@PDFId-int", resultEdetailingObject.pdfid);
        //                                _nvCollection.Add("@PageNumId-int", resultEdetailingObject.pagenumber);
        //                                _nvCollection.Add("@TimeDuration-varchar(50)", resultEdetailingObject.timeduration);
        //                                _nvCollection.Add("@Type-int", "1"); //Type ID of PDF
        //                                var ch = _dl.GetData("sp_InsertPDFCallMonitor", _nvCollection);
        //                            }
        //                        }
        //                        catch (Exception ex)
        //                        {

        //                        }
        //                        #endregion

        //                        #region VideoEdetailingJson Data Deserialization

        //                        try
        //                        {
        //                            var resultVideoJson = JsonConvert.DeserializeObject<VideoObject[]>(callExecutionDataObjectnew.videosDetailingJson);
        //                            if (resultVideoJson != null)
        //                            {
        //                                for (int j = 0; j < resultVideoJson.Length; j++)
        //                                {
        //                                    var resultVideoObject = resultVideoJson[j];
        //                                    _nvCollection.Clear();
        //                                    _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                    _nvCollection.Add("@PDFId-int", resultVideoObject.videoid);
        //                                    _nvCollection.Add("@PageNumId-int", resultVideoObject.videoduration);
        //                                    _nvCollection.Add("@TimeDuration-varchar(50)", resultVideoObject.timeduration);
        //                                    _nvCollection.Add("@Type-int", "2"); //Type ID of Video 
        //                                    var ch = _dl.GetData("sp_InsertPDFCallMonitor", _nvCollection);
        //                                }
        //                            }
        //                        }
        //                        catch (Exception ex)
        //                        {
        //                            //    Constants.CallErrorLog("Error on Video Detailing Insertion: " + ex.Message);

        //                        }
        //                        #endregion

        //                        #region SurveyJson Data Deserialization

        //                        var SurveyData = JsonConvert.DeserializeObject<SurveyMainUploadDataObject[]>(callExecutionDataObjectnew.surveyFormJson);
        //                        for (int k = 0; k < SurveyData.Length; k++)
        //                        {
        //                            SurveyMainUploadDataObject var_surveymainupload = SurveyData[i];
        //                            string Sdate = "";
        //                            string SuerveyId = "";

        //                            Sdate = var_surveymainupload.SurveyDateTime;
        //                            if (!DateTime.TryParse(Sdate, out result))
        //                            {
        //                                returnString = "Survey DateTime Format Is invalid";
        //                            }

        //                            var getAllQuestions = JsonConvert.DeserializeObject<List<SurveyDataUploadDataObject>>(var_surveymainupload.QuestionObject);

        //                            var getsurveyid = _dl.GetData("sp_InserSurveyMain", new NameValueCollection { { "@FormId-int", var_surveymainupload.formid.ToString() }, { "@EmpId-INT", var_surveymainupload.EmpId.ToString() }, { "@CustId-int", var_surveymainupload.CustId.ToString() }, { "@SalescallId-bigint", salesCallsId.ToString() }, { "@SurveyName-varchar(100)", var_surveymainupload.SurveyName }, { "@Description-varchar(250)", var_surveymainupload.Description }, { "@SurveyDateTime-DateTime", Sdate.ToString() } });
        //                            if (getsurveyid.Tables[0].Rows.Count > 0)
        //                            {
        //                                SuerveyId = getsurveyid.Tables[0].Rows[0][0].ToString();
        //                            }

        //                            for (int j = 0; j < getAllQuestions.Count; j++)
        //                            {
        //                                var data = getAllQuestions[j];

        //                                var getsurveycount = _dl.GetData("sp_insertSurveyData", new NameValueCollection { { "@SurveyId-int", SuerveyId }, { "@QuestionId-INT", data.QuestionId }, { "@AnswerId-int", data.AnswerId }, { "@Other-varchar(250)", data.Other } });

        //                            }



        //                        }
        //                        #endregion

        //                        returnString = "CallSaved";
        //                        goto DoneExecution;
        //                    }
        //            #endregion

        //                }


        //            }
        //        }
        //        catch (Exception exception)
        //        {

        //            returnString = exception.Message;
        //            Constants.ErrorLog("Exception Raising From MobileService.svc.cs UploadCallsData_New | " + exception.Message + " | Stack Trace | " + exception.StackTrace + ";");
        //            goto Error;
        //        }

        //    Error:
        //    DoneExecution:
        //        {
        //            CallExecutionResponseObject callExecutionResponseObject = new CallExecutionResponseObject();
        //            callExecutionResponseObject.CallNo = i;
        //            callExecutionResponseObject.isExecutedSuccessfully = (returnString == "CallSaved") ? true : false;
        //            callExecutionResponseObject.CallResponseMessage = returnString;
        //            CallExecutionResponse.Add(callExecutionResponseObject);
        //        }

        //    }
        //    return js.Serialize(CallExecutionResponse);
        //}  //Shahrukh 12-23-2019 

        //public string UploadCallsData_ExpenseAndMultipleAddress_IMEI(string fileName, Stream stream)
        //{
        //    List<CallExecutionResponseObject> CallExecutionResponse = new List<CallExecutionResponseObject>();
        //    string CreateFilePath = Path.Combine(HostingEnvironment.MapPath("~/Uploads/Files"));
        //    try
        //    {
        //        if (!Directory.Exists(CreateFilePath))
        //        {
        //            Directory.CreateDirectory(CreateFilePath);
        //        }
        //    }
        //    catch (Exception exception)
        //    {
        //        Console.Out.WriteLine(exception.Message);
        //    }

        //    string FilePath = Path.Combine(CreateFilePath, fileName);
        //    int length = 0;
        //    string returnString = null;
        //    using (FileStream writer = new FileStream(FilePath, FileMode.Create))
        //    {
        //        int readCount;
        //        var buffer = new byte[8192];
        //        while ((readCount = stream.Read(buffer, 0, buffer.Length)) != 0)
        //        {
        //            writer.Write(buffer, 0, readCount);
        //            length += readCount;
        //        }
        //    }
        //    JavaScriptSerializer js = new JavaScriptSerializer();
        //    string jsondata = System.IO.File.ReadAllText(FilePath);
        //    var CallsData = js.Deserialize<List<CallExecutionDataObjectnew>>(jsondata);
        //    for (int i = 0; i < CallsData.Count; i++)
        //    {
        //        CallExecutionDataObjectnew callExecutionDataObjectnew = CallsData[i];

        //        string date = "";

        //        string level1 = null, level2 = null, level3 = null, level4 = null, level5 = null, level6 = null;
        //        var doctorId = "";
        //        string classId = "", specialityId = "", qulificationId = "";
        //        int month = 0;
        //        int year = 0;
        //        long salesCallsId = 0;

        //        double GetCallDitanceForMobile = 0.0;
        //        double Previous_salescallid = 0;
        //        double Flag = 0;
        //        string Previous_Longitude = "";
        //        string Previous_Latitude = "";
        //        string distanceZero = "";
        //        double LastDocCity = 0;
        //        NameValueCollection _nvCollection = new NameValueCollection();

        //        bool allowexecution = false;

        //        #region Application Version Check


        //        try
        //        {
        //            string allowedApplicationVersions = Constants.GetAllowedApplicationVersions();
        //            if (allowedApplicationVersions.ToLower() == "all")
        //            {
        //                allowexecution = true;
        //            }
        //            else
        //            {
        //                string[] allowedapps = allowedApplicationVersions.Split(',');
        //                for (int j = 0; j < allowedapps.Length; j++)
        //                {
        //                    if (allowedapps[j] == callExecutionDataObjectnew.appversion)
        //                    {
        //                        allowexecution = true;
        //                        break;
        //                    }
        //                }
        //            }
        //        }
        //        catch (Exception ex)
        //        {
        //            throw ex;
        //        }

        //        if (!allowexecution)
        //        {
        //            returnString = "Application version not allowed to excute the calls";
        //            goto Error;
        //        }

        //        #endregion

        //        #region Unique Device ID and Session Restriction
        //        allowexecution = false;
        //        try
        //        {
        //            string executionrestrictionflag = Constants.GetExecutionRestrictionFlag();
        //            if (executionrestrictionflag.ToLower() == "false")
        //            {
        //                allowexecution = true;
        //            }
        //            else
        //            {
        //                var dsData = _dl.GetData("sp_CheckEmployeeDeviceAndSessionStatus_IMEI", new NameValueCollection { 
        //                    { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } ,
        //                       { "@IMEIAddress-VARCHAR", callExecutionDataObjectnew.IMEIAddress } ,
        //                    { "@MacAddress-VARCHAR", callExecutionDataObjectnew.macaddress } ,
        //                    { "@Type-VARCHAR", "ExecutionApp" }
        //                });
        //                if (dsData != null)
        //                {
        //                    if (dsData.Tables[0].Rows.Count > 0)
        //                    {
        //                        if (dsData.Tables[0].Rows[0][0].ToString() == "OK")
        //                        {
        //                            allowexecution = true;
        //                        }
        //                        else
        //                        {
        //                            returnString = dsData.Tables[0].Rows[0][0].ToString();
        //                        }
        //                    }
        //                }
        //            }
        //        }
        //        catch (Exception ex)
        //        {
        //            throw ex;
        //        }

        //        if (!allowexecution)
        //        {

        //            returnString = (returnString == "") ? "ServerError" : returnString;
        //            goto Error;

        //        }



        //        #endregion
        //        try
        //        {
        //            #region CheckLeave
        //            DataSet set0 = _dl.GetData("sp_check_ZSM_MIO_leave", new NameValueCollection { { "@Startdate-date", callExecutionDataObjectnew.date }, { "@Enddate-date", callExecutionDataObjectnew.date }, { "@employeeid-INT", callExecutionDataObjectnew.employeeId } });
        //            if (set0.Tables[0].Rows.Count > 0)
        //            {
        //                returnString = set0.Tables[0].Rows[0][0].ToString() == "Available" ? "Meetingandleave" : "";
        //                if (returnString == "Meetingandleave")
        //                {
        //                    goto Error;
        //                }
        //                else
        //                {

        //                    date = callExecutionDataObjectnew.date + " " + callExecutionDataObjectnew.startTime;
        //                    DateTime result;
        //                    if (!DateTime.TryParse(date, out result))
        //                    {
        //                        returnString = "DateTime Format Is invalid";
        //                        goto Error;
        //                    }
        //                    DateTime executedDateTime = DateTime.ParseExact(callExecutionDataObjectnew.executionDateTime, "dd/MM/yyyy HH:mm:ss",
        //                                     CultureInfo.InvariantCulture);

        //                    string rectype = "S";
        //                    month = result.Month;
        //                    year = result.Year;
        //                    var smsmonth = Convert.ToInt32(result.Month);
        //                    var smsyear = Convert.ToInt32(result.Year);

        //                    var getatt = _dl.GetData("sp_CheckAttLeave_New", new NameValueCollection { { "@empid-int", callExecutionDataObjectnew.employeeId.ToString() }, { "@MDateTime-datetime", date.ToString() } });
        //                    if (getatt.Tables[0].Rows[0][0].ToString() == "alreadyLeave")
        //                    {
        //                        returnString = "leaveMarked";
        //                        goto Error;
        //                    }
        //                    else if (getatt.Tables[0].Rows[0][0].ToString() == "alreadySPM")
        //                    {
        //                        returnString = "SPMMarked";
        //                        goto Error;
        //                    }
        //                    else
        //                    {

        //                        #region preedays work

        //                        string dt_temp = "";
        //                        string pree_day = "0";
        //                        int aloowsDays = 24;

        //                        dt_temp = Convert.ToString(result).ToString();

        //                        _nvCollection.Clear();
        //                        _nvCollection.Add("@EmployeeId-bigint", callExecutionDataObjectnew.employeeId.ToString());

        //                        DataSet ds_p = _dl.GetData("sp_SelectEmployeePree_days_withEmpID", _nvCollection);
        //                        if (ds_p != null)
        //                        {
        //                            if (ds_p.Tables[0].Rows.Count > 0)
        //                            {
        //                                pree_day = ds_p.Tables[0].Rows[0]["pree_days"].ToString();

        //                                if (pree_day == "")
        //                                {
        //                                    pree_day = "0";
        //                                }
        //                                else if (ds_p.Tables[0].Rows[0]["pree_days"] == null)
        //                                {
        //                                    pree_day = "0";
        //                                }

        //                            }
        //                        }

        //                        //if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) <= Convert.ToDateTime(System.DateTime.Now.ToString("MM/dd/yyyy")))
        //                        //{
        //                        //    if (DATEDIFFForHours("Hours", Convert.ToDateTime(dt_temp), Convert.ToDateTime(System.DateTime.Now)) > 24)
        //                        //    {
        //                        //        if (DATEDIFFForHours("Hours", Convert.ToDateTime(dt_temp), Convert.ToDateTime(System.DateTime.Now)) > ((Convert.ToInt32(pree_day) * aloowsDays) + 0))
        //                        //        {
        //                        //            returnString = "PreeDays";
        //                        //            goto Error;
        //                        //        }
        //                        //    }
        //                        //}
        //                        if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) <= Convert.ToDateTime(System.DateTime.Now.ToString("MM/dd/yyyy")))
        //                        {
        //                            if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) != Convert.ToDateTime(executedDateTime.ToString("MM/dd/yyyy")))
        //                            {
        //                                if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) <= Convert.ToDateTime(executedDateTime.ToString("MM/dd/yyyy")))
        //                                {
        //                                    if (DATEDIFF("Days", Convert.ToDateTime(dt_temp), Convert.ToDateTime(executedDateTime)) > Convert.ToInt32(pree_day))
        //                                    {
        //                                        returnString = "PreeDays";
        //                                        goto Error;
        //                                    }
        //                                }
        //                                else
        //                                {
        //                                    returnString = "Not Allowed";
        //                                    goto Error;
        //                                }
        //                            }
        //                        }
        //                        else
        //                        {
        //                            returnString = "Not Allowed";
        //                            goto Error;
        //                        }

        //                        #endregion

        //                        #region Employee Information
        //                        var dsEmployeeMemberShipInfo = _dl.GetData("sp_EmployeeMembershipSelectByEmployee",
        //                            new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
        //                        if (dsEmployeeMemberShipInfo != null)
        //                        {
        //                            var dsEmployeeHierarchy = _dl.GetData("sp_EmplyeeHierarchySelect",
        //                                new NameValueCollection { { "@SystemUserID-BIGINT", dsEmployeeMemberShipInfo.Tables[0].Rows[0]["SystemUserID"].ToString() } });
        //                            if (dsEmployeeHierarchy != null)
        //                            {
        //                                level1 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId1"].ToString();
        //                                level2 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId2"].ToString();
        //                                level3 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId3"].ToString();
        //                                level4 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId4"].ToString();
        //                                level5 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId5"].ToString();
        //                                level6 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId6"].ToString();
        //                            }
        //                        }
        //                        else
        //                        {
        //                            returnString = "Employee Not Found";
        //                            goto Error;
        //                        }
        //                        #endregion


        //                        var doctorCodeArray = callExecutionDataObjectnew.docDetail.Split(',');
        //                        for (int k = 0; k < doctorCodeArray.Length; k++)
        //                        {

        //                            #region Get Doctor Details
        //                            var doctorCode = doctorCodeArray[k];
        //                            //var dsGetMrDoctorDetails = _dl.GetData("sp_MRDoctorSelectByCode", new NameValueCollection { { "@EmployeeId-bigint", employeeId }, { "@Code-nvarchar-20", doctorCode } });+
        //                            var dsGetMrDoctorDetails = _dl.GetData("sp_MRDoctorSelectByCode_new", new NameValueCollection { { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@Code-nvarchar-20", doctorCode }, { "@month-int", month.ToString() }, { "@year-int", year.ToString() } });
        //                            if (dsGetMrDoctorDetails != null)
        //                            {
        //                                if (dsGetMrDoctorDetails.Tables[0].Rows.Count > 0)
        //                                {
        //                                    doctorId = dsGetMrDoctorDetails.Tables[0].Rows[0]["DoctorId"].ToString();

        //                                    #region Get Class Of Doctor

        //                                    //var doctorClassDetail = _dl.GetData("sp_ClassOfDoctorSelect",
        //                                    //    new NameValueCollection { { "@DoctorId-bigint", doctorId } });
        //                                    var doctorClassDetail = _dl.GetData("sp_ClassOfDoctorOfSPOSelect",
        //                             new NameValueCollection { { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@DoctorId-bigint", doctorId }, { "@month-int", month.ToString() }, { "@year-int", year.ToString() } });
        //                                    if (doctorClassDetail != null)
        //                                        if (doctorClassDetail.Tables[0].Rows.Count > 0)
        //                                        {
        //                                            classId = doctorClassDetail.Tables[0].Rows[0]["ClassId"].ToString();
        //                                        }
        //                                        else
        //                                        {
        //                                            returnString = "Class Of Doctor Not Found";
        //                                            if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                                        }

        //                                    #endregion

        //                                    #region Get Speciality Of Doctor

        //                                    var doctorspecialitydetail = _dl.GetData("sp_doctorspecialityselectbydoctor",
        //                                        new NameValueCollection { { "@doctorid-bigint", doctorId } });
        //                                    if (doctorspecialitydetail != null)
        //                                        if (doctorspecialitydetail.Tables[0].Rows.Count > 0)
        //                                        {
        //                                            specialityId = doctorspecialitydetail.Tables[0].Rows[0]["specialityid"].ToString();
        //                                        }
        //                                        else
        //                                        {
        //                                            returnString = "speciality of doctor not found";
        //                                            if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                                        }

        //                                    #endregion

        //                                    #region Get Qualification Of Doctor

        //                                    var doctorQualificationDetail = _dl.GetData("sp_QualificationsOfDoctorsSelectByDoctor",
        //                                        new NameValueCollection { { "@DoctorId-BIGINT", doctorId } });
        //                                    if (doctorQualificationDetail != null)
        //                                        if (doctorQualificationDetail.Tables[0].Rows.Count > 0)
        //                                        {
        //                                            qulificationId = doctorQualificationDetail.Tables[0].Rows[0]["QulificationId"].ToString();
        //                                        }
        //                                        else
        //                                        {
        //                                            returnString = "Qualification Of Doctor Not Found";
        //                                            if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                                        }

        //                                    #endregion
        //                                }
        //                            }
        //                            else
        //                            {
        //                                returnString = "Doctor Not Found in Doctor List Of MIO";
        //                                if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                            }

        //                            #endregion

        //                            #region Get Visit Shift

        //                            var hour = Convert.ToInt32(result.ToString("HH"));

        //                            string vt;
        //                            if (hour >= 0 && hour < 12)
        //                            {
        //                                vt = "1";
        //                            }
        //                            else if (hour < 17)
        //                            {
        //                                vt = "1";
        //                            }
        //                            else
        //                            {
        //                                vt = "2";
        //                            }



        //                            #endregion


        //                            #region PreSalesCallInsert

        //                            var getcountstand = _dl.GetData("getcountryStandardtime", new NameValueCollection { { "@employeeid-int", callExecutionDataObjectnew.employeeId } });
        //                            var inTimeZone = TimeZoneInfo.FindSystemTimeZoneById(getcountstand.Tables[0].Rows[0][0].ToString());
        //                            DateTime inTime = TimeZoneInfo.ConvertTime(DateTime.Now, TimeZoneInfo.Local, inTimeZone);
        //                            DataSet set = _dl.GetData("sp_check_call_execute", new NameValueCollection { { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QualificationId-int,", qulificationId }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@IsPlanned-VARCHAR-50", callExecutionDataObjectnew.isPlanned == "No" ? "NULL" : callExecutionDataObjectnew.isPlanned }, { "@visitdate-datetime", result.ToString() }, });
        //                            if (set.Tables[0].Rows.Count > 0)
        //                            {
        //                                returnString = "Already Executed";
        //                                if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                            }
        //                            else
        //                            {

        //                                if (callExecutionDataObjectnew.isPlanned == "No")
        //                                {

        //                                    DataSet set2 = _dl.GetData("sp_check_CallExecuteForUnplanned", new NameValueCollection { { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@visitdate-datetime", result.ToString() }, });
        //                                    if (set2.Tables[0].Rows.Count > 0)
        //                                    {
        //                                        returnString = "Planned";
        //                                        if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                                    }
        //                                    else
        //                                    {

        //                                        var dsPreSalesCalls = _dl.GetData("sp_PreSalesCallsInsert2", new NameValueCollection { { "@VisitDateTime-datetime", result.ToString() }, { "@Level1LevelId-int,", level1 }, { "@Level2LevelId-int,", level2 }, { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QulificationId-int,", qulificationId }, { "@CreationDateTime-datetime", inTime.ToString() }, { "@CallTypeId-int", "1" }, { "@VisitShift-int,", vt }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@InboundId-bigint", "NULL" }, { "@DocCode-INT", doctorCode }, { "@IsPlanned-VARCHAR-50", callExecutionDataObjectnew.isPlanned == "No" ? "NULL" : callExecutionDataObjectnew.isPlanned }, { "@ActivityID-INT", callExecutionDataObjectnew.activity }, { "@ReasonID-INT", callExecutionDataObjectnew.reason } });
        //                                        if (dsPreSalesCalls != null)
        //                                        {
        //                                            if (dsPreSalesCalls.Tables[0].Rows.Count > 0)
        //                                            {
        //                                                salesCallsId = Convert.ToInt64(dsPreSalesCalls.Tables[0].Rows[0]["SalesCallId"].ToString());
        //                                            }
        //                                            else
        //                                            {
        //                                                returnString = "Error In Saving In PreSalesCalls";
        //                                                if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                                            }
        //                                        }
        //                                        else
        //                                        {
        //                                            returnString = "Error In Saving In PreSalesCalls";
        //                                            if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                                        }
        //                                    }
        //                                }
        //                                else
        //                                {
        //                                    var dsPreSalesCalls = _dl.GetData("sp_PreSalesCallsInsert2", new NameValueCollection { { "@VisitDateTime-datetime", result.ToString() }, { "@Level1LevelId-int,", level1 }, { "@Level2LevelId-int,", level2 }, { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QulificationId-int,", qulificationId }, { "@CreationDateTime-datetime", inTime.ToString() }, { "@CallTypeId-int", "1" }, { "@VisitShift-int,", vt }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@InboundId-bigint", "NULL" }, { "@DocCode-INT", doctorCode }, { "@IsPlanned-VARCHAR-50", callExecutionDataObjectnew.isPlanned == "No" ? "NULL" : callExecutionDataObjectnew.isPlanned }, { "@ActivityID-INT", callExecutionDataObjectnew.activity }, { "@ReasonID-INT", callExecutionDataObjectnew.reason } });
        //                                    if (dsPreSalesCalls != null)
        //                                    {
        //                                        if (dsPreSalesCalls.Tables[0].Rows.Count > 0)
        //                                        {
        //                                            salesCallsId = Convert.ToInt64(dsPreSalesCalls.Tables[0].Rows[0]["SalesCallId"].ToString());
        //                                        }
        //                                        else
        //                                        {
        //                                            returnString = "Error In Saving In PreSalesCalls";
        //                                            if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                                        }
        //                                    }
        //                                    else
        //                                    {
        //                                        returnString = "Error In Saving In PreSalesCalls";
        //                                        if (callExecutionDataObjectnew.callType == "0") goto Error;
        //                                    }
        //                                }
        //                            }
        //                            #endregion

        //                            if (salesCallsId != 0)
        //                            {

        //                                #region Mobile Exec Time
        //                                if (callExecutionDataObjectnew.executionDateTime != null)
        //                                {
        //                                    _nvCollection.Clear();
        //                                    _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                    _nvCollection.Add("@mobexectime-datetime", executedDateTime.ToString());

        //                                    var mac = _dl.GetData("sp_Insert_MobExecutionTime", _nvCollection);
        //                                }
        //                                #endregion

        //                                #region CallDoctors


        //                                // ReSharper disable once UnusedVariable
        //                                if (_dataContext != null)
        //                                {
        //                                    var insertCallDoctors = _dataContext.sp_CallDoctorsInsert(salesCallsId, Convert.ToInt64(doctorId)).ToList();
        //                                }

        //                                #endregion


        //                                #region CallVisitors


        //                                if (!Convert.ToBoolean(callExecutionDataObjectnew.coaching))
        //                                {
        //                                    // ReSharper disable once UnusedVariable
        //                                    var dsIsCoaching = _dl.InserData("sp_InsertCallCoaching",
        //                                        new NameValueCollection
        //                {
        //                    {"@SalesCallId-INT", salesCallsId.ToString()},
        //                    {"@IsCoaching-VARCHAR-50", "0"}
        //                });
        //                                }
        //                                else
        //                                {
        //                                    // ReSharper disable once UnusedVariable
        //                                    var dsIsCoaching = _dl.InserData("sp_InsertCallCoaching",
        //                                        new NameValueCollection
        //                {
        //                    {"@SalesCallId-INT", salesCallsId.ToString()},
        //                    {"@IsCoaching-VARCHAR-50", "1"}
        //                });
        //                                }

        //                                long jvflma = 0;
        //                                long jvslma = 0;
        //                                long jvftma = callExecutionDataObjectnew.jvftm == "true" ? 1 : 0;
        //                                //NSM
        //                                long jvbuha = 0;
        //                                //GM
        //                                long jvgma = 0;
        //                                long jvcooa = callExecutionDataObjectnew.jvcoo == "true" ? 1 : 0;
        //                                long jvcda = callExecutionDataObjectnew.jvcd == "true" ? 1 : 0;
        //                                long jvpma = callExecutionDataObjectnew.jvpm == "true" ? 1 : 0;
        //                                if (Convert.ToBoolean(callExecutionDataObjectnew.jvflm))
        //                                {
        //                                    var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
        //                                    if (dsFlm != null)
        //                                    {
        //                                        if (dsFlm.Tables[0].Rows.Count > 0)
        //                                        {
        //                                            jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                        }
        //                                    }
        //                                }
        //                                if (Convert.ToBoolean(callExecutionDataObjectnew.jvslm))
        //                                {
        //                                    var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
        //                                    if (dsFlm != null)
        //                                    {
        //                                        if (dsFlm.Tables[0].Rows.Count > 0)
        //                                        {
        //                                            jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                            var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(jvflma) } });
        //                                            if (dsSlm != null)
        //                                            {
        //                                                if (dsSlm.Tables[0].Rows.Count > 0)
        //                                                {
        //                                                    jvslma = Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                                }
        //                                            }
        //                                        }
        //                                    }
        //                                }
        //                                //Check if Joint Visit is with NSM
        //                                if (Convert.ToBoolean(callExecutionDataObjectnew.jvbuh))
        //                                {
        //                                    var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
        //                                    if (dsFlm != null)
        //                                    {
        //                                        if (dsFlm.Tables[0].Rows.Count > 0)
        //                                        {
        //                                            jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                            //var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(jvflma) } });
        //                                            var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });
        //                                            if (dsSlm != null)
        //                                            {
        //                                                if (dsSlm.Tables[0].Rows.Count > 0)
        //                                                {
        //                                                    jvslma = Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                                    var dsBuh = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });

        //                                                    if (dsBuh != null)
        //                                                    {
        //                                                        if (dsBuh.Tables[0].Rows.Count > 0)
        //                                                        {

        //                                                            jvbuha = Convert.ToInt64(dsBuh.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                                        }
        //                                                    }
        //                                                }
        //                                            }
        //                                        }
        //                                    }
        //                                }
        //                                //Check if Joint Visit is with GM
        //                                if (Convert.ToBoolean(callExecutionDataObjectnew.jvgm))
        //                                {
        //                                    var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
        //                                    if (dsFlm != null)
        //                                    {
        //                                        if (dsFlm.Tables[0].Rows.Count > 0)
        //                                        {
        //                                            jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                            //var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(jvflma) } });
        //                                            var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });
        //                                            if (dsSlm != null)
        //                                            {
        //                                                if (dsSlm.Tables[0].Rows.Count > 0)
        //                                                {
        //                                                    jvslma = Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                                    var dsBuh = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });

        //                                                    if (dsBuh != null)
        //                                                    {
        //                                                        if (dsBuh.Tables[0].Rows.Count > 0)
        //                                                        {
        //                                                            jvbuha = Convert.ToInt64(dsBuh.Tables[0].Rows[0]["ManagerId"].ToString());
        //                                                            var dsGm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsBuh.Tables[0].Rows[0]["ManagerId"].ToString())) } });
        //                                                            if (dsGm != null)
        //                                                            {
        //                                                                if (dsGm.Tables[0].Rows.Count > 0)
        //                                                                {

        //                                                                    jvgma = Convert.ToInt64((dsGm.Tables[0].Rows[0]["ManagerId"].ToString() == "" ? "1" : dsGm.Tables[0].Rows[0]["ManagerId"].ToString()));
        //                                                                }
        //                                                            }
        //                                                        }
        //                                                    }
        //                                                }
        //                                            }
        //                                        }
        //                                    }
        //                                }
        //                                jvflma = callExecutionDataObjectnew.jvflm == "true" ? jvflma : 0;
        //                                jvslma = callExecutionDataObjectnew.jvslm == "true" ? jvslma : 0;
        //                                jvbuha = callExecutionDataObjectnew.jvbuh == "true" ? jvbuha : 0;
        //                                jvgma = callExecutionDataObjectnew.jvgm == "true" ? jvgma : 0;

        //                                //if (Convert.ToBoolean(callExecutionDataObject.jvho1))
        //                                //{
        //                                //    jvHO1 = 1;
        //                                //}
        //                                //if (Convert.ToBoolean(callExecutionDataObject.jvho2))
        //                                //{
        //                                //    jvHO2 = 1;
        //                                //}
        //                                //// ReSharper disable once UnusedVariable
        //                                long? nullable = null;
        //                                if (_dataContext != null)
        //                                {

        //                                    /* var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew(salesCallsId, Convert.ToInt64(callExecutionDataObject.employeeId),
        //                                         ((jvflma == 0) ? nullable : jvflma),
        //                                         ((jvslma == 0) ? nullable : jvslma),
        //                                         ((jvHO1 == 0) ? nullable : jvHO1),
        //                                         ((jvHO2 == 0) ? nullable : jvHO2)).ToList();*/
        //                                    var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew_withjv8(salesCallsId, Convert.ToInt64(callExecutionDataObjectnew.employeeId),
        //                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvflm)) ? nullable : jvflma),
        //                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvslm)) ? nullable : jvslma),
        //                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvftm)) ? nullable : jvftma),
        //                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvbuh)) ? nullable : jvbuha),
        //                                        //ye parameter sahih lgane hain filhal temporary lgaye hen 
        //                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvgm)) ? nullable : jvgma),
        //                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvcoo)) ? nullable : jvcooa),
        //                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvcd)) ? nullable : jvcda),
        //                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvpm)) ? nullable : jvpma)
        //                                ).ToList();

        //                                    /*if (jvflma == 0 && jvslma == 0)
        //                                    {
        //                                        var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew(salesCallsId, Convert.ToInt64(callExecutionDataObject.employeeId), null, null, null, null).ToList();
        //                                    }
        //                                    else
        //                                    {
        //                                        var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew(salesCallsId, Convert.ToInt64(callExecutionDataObject.employeeId), jvflma, jvslma, 0, 0).ToList();
        //                                    }*/

        //                                }

        //                                #endregion

        //                                #region VisitFeedBack

        //                                if (_dataContext != null)
        //                                {
        //                                    // ReSharper disable once UnusedVariable
        //                                    var insertFeedBack = _dataContext.sp_VisitFeedBackInsert(salesCallsId, callExecutionDataObjectnew.callNotes).ToList();
        //                                }

        //                                #endregion

        //                                #region CallProducts

        //                                // ReSharper disable once NotAccessedVariable
        //                                List<CallProduct> insertCallProduct;

        //                                if (callExecutionDataObjectnew.product1 != "-1")
        //                                {
        //                                    if (_dataContext != null)
        //                                    {
        //                                        // ReSharper disable once RedundantAssignment
        //                                        //insertCallProduct =
        //                                        //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product1), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product1), 1).ToList();
        //                                        insertCallProduct =
        //                                            _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnew.product1), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnew.product1), 1).ToList();

        //                                        if (callExecutionDataObjectnew.p1Notes != "" && insertCallProduct.Count > 0)
        //                                        {
        //                                            var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
        //                                                new NameValueCollection { 
        //                                        { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() }, 
        //                                        { "@Comment-varchar(max),", callExecutionDataObjectnew.p1Notes} 
        //                                        });
        //                                        }
        //                                    }


        //                                }


        //                                if (callExecutionDataObjectnew.product2 != "-1")
        //                                {
        //                                    if (_dataContext != null)
        //                                    {
        //                                        // ReSharper disable once RedundantAssignment
        //                                        //insertCallProduct =
        //                                        //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product2), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product1), 2).ToList();
        //                                        insertCallProduct =
        //                                            _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnew.product2), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnew.product2), 2).ToList();

        //                                        if (callExecutionDataObjectnew.p2Notes != "" && insertCallProduct.Count > 0)
        //                                        {
        //                                            var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
        //                                                new NameValueCollection { 
        //                                        { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() }, 
        //                                        { "@Comment-varchar(max),", callExecutionDataObjectnew.p2Notes} 
        //                                        });
        //                                        }

        //                                    }
        //                                }

        //                                if (callExecutionDataObjectnew.product3 != "-1")
        //                                {
        //                                    if (_dataContext != null)
        //                                    {
        //                                        // ReSharper disable once RedundantAssignment
        //                                        //insertCallProduct =
        //                                        //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product3), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product3), 3).ToList();
        //                                        insertCallProduct =
        //                                            _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnew.product3), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnew.product3), 3).ToList();

        //                                        if (callExecutionDataObjectnew.p3Notes != "" && insertCallProduct.Count > 0)
        //                                        {
        //                                            var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
        //                                                new NameValueCollection { 
        //                                        { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() }, 
        //                                        { "@Comment-varchar(max),", callExecutionDataObjectnew.p3Notes} 
        //                                        });
        //                                        }
        //                                    }
        //                                }

        //                                if (callExecutionDataObjectnew.product4 != "-1")
        //                                {
        //                                    if (_dataContext != null)
        //                                    {
        //                                        // ReSharper disable once RedundantAssignment
        //                                        //insertCallProduct =
        //                                        //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product4), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product4), 4).ToList();
        //                                        insertCallProduct =
        //                                            _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnew.product4), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnew.product4), 4).ToList();

        //                                        if (callExecutionDataObjectnew.p4Notes != "" && insertCallProduct.Count > 0)
        //                                        {
        //                                            var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
        //                                                new NameValueCollection { 
        //                                        { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() }, 
        //                                        { "@Comment-varchar(max),", callExecutionDataObjectnew.p4Notes} 
        //                                        });
        //                                        }
        //                                    }

        //                                }



        //                                #endregion

        //                                #region CallProductSamples

        //                                if (callExecutionDataObjectnew.sample1 != "-1" && callExecutionDataObjectnew.sampleQty1 != "")
        //                                {

        //                                    // var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample1 } });

        //                                    // int SampleProdID1 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());


        //                                    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObjectnew.sample1 } });

        //                                    int SampleProdID1 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
        //                                    _nvCollection.Clear();
        //                                    _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                    _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample1.ToString());
        //                                    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                    _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                    _nvCollection.Add("@year-int", smsyear.ToString());
        //                                    var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
        //                                    if (checkSample1Balance.Tables[0].Rows.Count > 0)
        //                                    {
        //                                        int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
        //                                        int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
        //                                        int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

        //                                        if (balnc >= (qty + opening))
        //                                        {

        //                                        }
        //                                        else if ((Convert.ToInt32(callExecutionDataObjectnew.sampleQty1) + balnc) > (qty + opening))
        //                                        {

        //                                        }
        //                                        else
        //                                        {
        //                                            var newbalance = Convert.ToInt32(callExecutionDataObjectnew.sampleQty1) + balnc;
        //                                            _nvCollection.Clear();
        //                                            _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                            _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample1.ToString());
        //                                            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                            _nvCollection.Add("@Qty-int", newbalance.ToString());
        //                                            _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                            _nvCollection.Add("@year-int", smsyear.ToString());
        //                                            var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

        //                                            _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID1, Convert.ToInt32(callExecutionDataObjectnew.sample1), Convert.ToInt32(callExecutionDataObjectnew.sampleQty1), 1).ToList();
        //                                        }
        //                                    }

        //                                }

        //                                if (callExecutionDataObjectnew.sample2 != "-1" && callExecutionDataObjectnew.sampleQty2 != "")
        //                                {
        //                                    // var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample2 } });

        //                                    // int SampleProdID2 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

        //                                    // _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID2, Convert.ToInt32(callExecutionDataObject.sample2), Convert.ToInt32(callExecutionDataObject.sampleQty2), 2).ToList();


        //                                    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObjectnew.sample2 } });

        //                                    int SampleProdID2 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
        //                                    // int SampleProdID2 = Convert.ToInt32(sample2);
        //                                    _nvCollection.Clear();
        //                                    _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                    _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample2.ToString());
        //                                    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                    _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                    _nvCollection.Add("@year-int", smsyear.ToString());
        //                                    var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
        //                                    if (checkSample1Balance.Tables[0].Rows.Count > 0)
        //                                    {
        //                                        int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
        //                                        int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
        //                                        int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

        //                                        if (balnc >= (qty + opening))
        //                                        {

        //                                        }
        //                                        else if ((Convert.ToInt32(callExecutionDataObjectnew.sampleQty2) + balnc) > (qty + opening))
        //                                        {

        //                                        }
        //                                        else
        //                                        {
        //                                            var newbalance = Convert.ToInt32(callExecutionDataObjectnew.sampleQty2) + balnc;
        //                                            _nvCollection.Clear();
        //                                            _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                            _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample2.ToString());
        //                                            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                            _nvCollection.Add("@Qty-int", newbalance.ToString());
        //                                            _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                            _nvCollection.Add("@year-int", smsyear.ToString());
        //                                            var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

        //                                            _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID2, Convert.ToInt32(callExecutionDataObjectnew.sample2), Convert.ToInt32(callExecutionDataObjectnew.sampleQty2), 2).ToList();
        //                                        }
        //                                    }

        //                                }

        //                                if (callExecutionDataObjectnew.sample3 != "-1" && callExecutionDataObjectnew.sampleQty3 != "")
        //                                {

        //                                    // var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample3 } });

        //                                    //   int SampleProdID3 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

        //                                    //   _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID3, Convert.ToInt32(callExecutionDataObject.sample3), Convert.ToInt32(callExecutionDataObject.sampleQty3), 3).ToList();

        //                                    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObjectnew.sample3 } });

        //                                    int SampleProdID3 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
        //                                    //  int SampleProdID3 = Convert.ToInt32(sample3);
        //                                    _nvCollection.Clear();
        //                                    _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                    _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample3.ToString());
        //                                    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                    _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                    _nvCollection.Add("@year-int", smsyear.ToString());
        //                                    var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
        //                                    if (checkSample1Balance.Tables[0].Rows.Count > 0)
        //                                    {
        //                                        int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
        //                                        int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
        //                                        int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

        //                                        if (balnc >= (qty + opening))
        //                                        {

        //                                        }
        //                                        else if ((Convert.ToInt32(callExecutionDataObjectnew.sampleQty3) + balnc) > (qty + opening))
        //                                        {

        //                                        }
        //                                        else
        //                                        {
        //                                            var newbalance = Convert.ToInt32(callExecutionDataObjectnew.sampleQty3) + balnc;
        //                                            _nvCollection.Clear();
        //                                            _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                            _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample3.ToString());
        //                                            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                            _nvCollection.Add("@Qty-int", newbalance.ToString());
        //                                            _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                            _nvCollection.Add("@year-int", smsyear.ToString());
        //                                            var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

        //                                            _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID3, Convert.ToInt32(callExecutionDataObjectnew.sample3), Convert.ToInt32(callExecutionDataObjectnew.sampleQty3), 3).ToList();
        //                                        }
        //                                    }

        //                                }


        //                                //if (callExecutionDataObject.sample4 != "-1" && callExecutionDataObject.sampleQty4 != "")
        //                                //{

        //                                //  //  var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample4 } });

        //                                // //   int SampleProdID4 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

        //                                //  //  _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID4, Convert.ToInt32(callExecutionDataObject.sample4), Convert.ToInt32(callExecutionDataObject.sampleQty4), 4).ToList();

        //                                //    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample4 } });

        //                                //    int SampleProdID4 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
        //                                //    //int SampleProdID4 = Convert.ToInt32(sample4);
        //                                //    _nvCollection.Clear();
        //                                //    _nvCollection.Add("@mioid-int", callExecutionDataObject.employeeId.ToString());
        //                                //    _nvCollection.Add("@sample_id-int", callExecutionDataObject.sample4.ToString());
        //                                //    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                //    _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                //    _nvCollection.Add("@year-int", smsyear.ToString());
        //                                //    var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
        //                                //    if (checkSample1Balance.Tables[0].Rows.Count > 0)
        //                                //    {
        //                                //        int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
        //                                //        int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
        //                                //        int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

        //                                //        if (balnc >= (qty + opening))
        //                                //        {

        //                                //        }
        //                                //        else if ((Convert.ToInt32(callExecutionDataObject.sampleQty4) + balnc) > (qty + opening))
        //                                //        {

        //                                //        }
        //                                //        else
        //                                //        {
        //                                //            var newbalance = Convert.ToInt32(callExecutionDataObject.sampleQty4) + balnc;
        //                                //            _nvCollection.Clear();
        //                                //            _nvCollection.Add("@mioid-int", callExecutionDataObject.employeeId.ToString());
        //                                //            _nvCollection.Add("@sample_id-int", callExecutionDataObject.sample1.ToString());
        //                                //            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
        //                                //            _nvCollection.Add("@Qty-int", newbalance.ToString());
        //                                //            _nvCollection.Add("@month-int", smsmonth.ToString());
        //                                //            _nvCollection.Add("@year-int", smsyear.ToString());
        //                                //            var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

        //                                //            _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID4, Convert.ToInt32(callExecutionDataObject.sample4), Convert.ToInt32(callExecutionDataObject.sampleQty4), 4).ToList();
        //                                //        }
        //                                //    }

        //                                //}

        //                                //if (callExecutionDataObject.sample5 != "-1" && callExecutionDataObject.sampleQty5 != "")
        //                                //{

        //                                //    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample5 } });

        //                                //    int SampleProdID5 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

        //                                //    _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID5, Convert.ToInt32(callExecutionDataObject.sample5), Convert.ToInt32(callExecutionDataObject.sampleQty5), 5).ToList();

        //                                //}

        //                                #endregion

        //                                #region CallReminder

        //                                if (callExecutionDataObjectnew.reminder1 != "-1")
        //                                {
        //                                    _dl.InserData("sp_CallReminderInsert", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@DetailReminder-int", callExecutionDataObjectnew.reminder1 }, { "@OrderBy-int", "1" } });
        //                                }

        //                                if (callExecutionDataObjectnew.reminder2 != "-1")
        //                                {
        //                                    _dl.InserData("sp_CallReminderInsert", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@DetailReminder-int", callExecutionDataObjectnew.reminder2 }, { "@OrderBy-int", "2" } });
        //                                }

        //                                if (callExecutionDataObjectnew.reminder3 != "-1")
        //                                {
        //                                    _dl.InserData("sp_CallReminderInsert", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@DetailReminder-int", callExecutionDataObjectnew.reminder3 }, { "@OrderBy-int", "3" } });
        //                                }


        //                                #endregion

        //                                #region CallGifts

        //                                // ReSharper disable once NotAccessedVariable
        //                                List<CallGift> insertCallGift;

        //                                if (callExecutionDataObjectnew.gift != "-1")
        //                                {
        //                                    // ReSharper disable once RedundantAssignment
        //                                    insertCallGift = callExecutionDataObjectnew.giftQty != "" ? _dataContext.sp_CallGiftsInsert(salesCallsId, Convert.ToInt32(callExecutionDataObjectnew.gift), Convert.ToInt32(callExecutionDataObjectnew.giftQty), 1).ToList() : _dataContext.sp_CallGiftsInsert(salesCallsId, Convert.ToInt32(callExecutionDataObjectnew.gift), 0, 1).ToList();
        //                                }


        //                                #endregion

        //                                #region MacAddress
        //                                // macaddress = "123.213.163";
        //                                if (callExecutionDataObjectnew.macaddress != null)
        //                                {
        //                                    _nvCollection.Clear();
        //                                    _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                    _nvCollection.Add("@EmployesID-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                    _nvCollection.Add("@macaddress-varchar(50)", callExecutionDataObjectnew.macaddress.ToString());

        //                                    var mac = _dl.GetData("sp_insert_macaddress", _nvCollection);
        //                                }
        //                                #endregion

        //                                #region Location
        //                                if (callExecutionDataObjectnew.longitude != null && callExecutionDataObjectnew.latitude != null)
        //                                {
        //                                    _nvCollection.Clear();
        //                                    _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                    _nvCollection.Add("@long-varchar(100)", callExecutionDataObjectnew.longitude.ToString());
        //                                    _nvCollection.Add("@lat-varchar(100)", callExecutionDataObjectnew.latitude.ToString());
        //                                    var ch = _dl.GetData("sp_Insert_Location", _nvCollection);
        //                                }

        //                                #endregion

        //                                #region Fake Users Calls Data

        //                                try
        //                                {
        //                                    if (callExecutionDataObjectnew.flag != null)
        //                                    {
        //                                        _nvCollection.Clear();

        //                                        _nvCollection.Clear();
        //                                        _nvCollection.Add("@SalesCalID-int", salesCallsId.ToString());
        //                                        _nvCollection.Add("@Flag-int", ((Convert.ToBoolean(callExecutionDataObjectnew.flag.ToString())) ? "1" : "0"));
        //                                        _nvCollection.Add("@AppVersion-varchar(100)", callExecutionDataObjectnew.appversion);
        //                                        _nvCollection.Add("@MacAddress-varchar(100)", callExecutionDataObjectnew.macaddress);
        //                                        _nvCollection.Add("@ApplicationPackages-text", callExecutionDataObjectnew.applicationpackages);
        //                                        _nvCollection.Add("@ModelNumber-text", callExecutionDataObjectnew.modelnumber);
        //                                        var ch = _dl.GetData("sp_fakeUsersData", _nvCollection);


        //                                    }
        //                                }
        //                                catch (Exception)
        //                                {

        //                                    //throw;
        //                                }



        //                                #endregion

        //                                #region Range

        //                                string range = "";
        //                                _nvCollection.Clear();
        //                                _nvCollection.Add("@DoctorID-int", doctorId.ToString());


        //                                DataSet dslastlatlng = _dl.GetData("sp_Doctorlatlng", _nvCollection);
        //                                string getrange = ConfigurationManager.AppSettings["Range"].ToString();
        //                                if (dslastlatlng.Tables[0].Rows.Count > 0)
        //                                {
        //                                    double distanceInMeters = new GeoCoordinate(Convert.ToDouble(dslastlatlng.Tables[0].Rows[0][0].ToString()), Convert.ToDouble(dslastlatlng.Tables[0].Rows[0][1].ToString()))
        //                                    .GetDistanceTo(new GeoCoordinate(Convert.ToDouble(callExecutionDataObjectnew.latitude.ToString()), Convert.ToDouble(callExecutionDataObjectnew.longitude.ToString())));

        //                                    if (distanceInMeters <= Convert.ToDouble(getrange))
        //                                    {
        //                                        range = "InRange";
        //                                    }
        //                                    else
        //                                    {
        //                                        range = "OutRange";
        //                                    }

        //                                    var rangestatus = _dl.GetData("sp_insertrangestatus", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@RangeStatus-varchar(50)", range.ToString() }, { "@Distance-varchar(100)", distanceInMeters.ToString() } });
        //                                }
        //                                else
        //                                {
        //                                    var rangestatus = _dl.GetData("sp_insertrangestatus", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@RangeStatus-varchar(50)", "NewTag" }, { "@Distance-varchar(100)", "0.0" } });
        //                                }

        //                                #endregion

        //                                #region Doctortagging

        //                                string address = "";
        //                                long doctorid;
        //                                var dsDoctorTagPermision = _dl.GetData("sp_DoctorTagPermision", new NameValueCollection { { "@DoctorID-INT", doctorId } });
        //                                if (dsDoctorTagPermision != null)
        //                                {
        //                                    if (dsDoctorTagPermision.Tables[0].Rows.Count > 0)
        //                                    {
        //                                        doctorid = Convert.ToInt64(dsDoctorTagPermision.Tables[0].Rows[0]["DoctorID"].ToString());
        //                                        string url = "http://maps.googleapis.com/maps/api/geocode/xml?latlng=" + callExecutionDataObjectnew.latitude.ToString() + "," + callExecutionDataObjectnew.longitude.ToString() + "&sensor=false";
        //                                        WebRequest request = WebRequest.Create(url);
        //                                        using (WebResponse response = (HttpWebResponse)request.GetResponse())
        //                                        {
        //                                            using (StreamReader reader = new StreamReader(response.GetResponseStream(), Encoding.UTF8))
        //                                            {
        //                                                // empid = dt.Rows[i]["EmployeeId"].ToString();
        //                                                DataSet dsResult = new DataSet();
        //                                                dsResult.ReadXml(reader);//format in xml
        //                                                DataTable dtCoordinates = new DataTable();
        //                                                dtCoordinates.Columns.AddRange(new DataColumn[1] { new DataColumn("AreaAddress", typeof(string)) });

        //                                                if (dsResult.Tables.Count > 1)
        //                                                {
        //                                                    var data = dsResult.Tables[1];
        //                                                    var add1 = data.Rows[0]["formatted_address"].ToString();
        //                                                    var add2 = data.Rows[2]["formatted_address"].ToString();
        //                                                    string split = add1.Split(',')[0];
        //                                                    address = split + " " + add2;
        //                                                    // dt.Rows[i]["Address"] = address;
        //                                                }


        //                                            }
        //                                        }
        //                                    }

        //                                }

        //                                #endregion

        //                                #region Doctor Location
        //                                if (callExecutionDataObjectnew.longitude != null && callExecutionDataObjectnew.latitude != null)
        //                                {
        //                                    _nvCollection.Clear();
        //                                    _nvCollection.Add("@DoctorID-int", doctorId.ToString());

        //                                    DataSet dsloccount = _dl.GetData("sp_CountDoctorTagging", _nvCollection);

        //                                    if (dsloccount.Tables[0].Rows.Count < 1)
        //                                    {
        //                                        _nvCollection.Clear();
        //                                        _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                        _nvCollection.Add("@DoctorID-int", doctorId.ToString());
        //                                        _nvCollection.Add("@VisitShift-int", vt);
        //                                        _nvCollection.Add("@long-varchar(100)", callExecutionDataObjectnew.longitude.ToString());
        //                                        _nvCollection.Add("@lat-varchar(100)", callExecutionDataObjectnew.latitude.ToString());
        //                                        _nvCollection.Add("@Address-varchar(MAX)", address.ToString());
        //                                        var ch = _dl.GetData("sp_Insert_DoctorTagging", _nvCollection);
        //                                    }

        //                                }
        //                                #endregion

        //                                #region CalculateDistanceForExpenseData



        //                                _nvCollection.Clear();

        //                                //_nvCollection.Add("@SalesCallID-int", salesCallsId.ToString());

        //                                //_nvCollection.Add("@AutoActivityStatus-int", callExecutionDataObject.AutoActivityStart.ToString());
        //                                _nvCollection.Add("@EmployeeID-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                _nvCollection.Add("@Salescallid-int", salesCallsId.ToString());
        //                                _nvCollection.Add("@Month-int", result.Month.ToString());
        //                                _nvCollection.Add("@Year-int", result.Year.ToString());
        //                                _nvCollection.Add("@Day-int", result.Day.ToString());

        //                                DataSet distanceforExpense = _dl.GetData("sp_GetLatLongforCallDistance", _nvCollection);

        //                                if (distanceforExpense.Tables[0].Rows.Count > 0 && distanceforExpense.Tables[0].Rows[0][0].ToString() != "FIRST CALL" && distanceforExpense.Tables[0].Rows[0][0].ToString() != "ACTIVITY NOT STARTED")
        //                                {
        //                                    //double distanceInMeters = new GeoCoordinate(Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][1].ToString()), Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][2].ToString()))
        //                                    //    .GetDistanceTo(new GeoCoordinate(Convert.ToDouble(callExecutionDataObjectnew.latitude.ToString()), Convert.ToDouble(callExecutionDataObjectnew.longitude.ToString())));
        //                                    if (distanceforExpense.Tables[0].Rows[0][1].ToString() != "0.0")
        //                                    {
        //                                        string url = "http://www.yournavigation.org/api/1.0/gosmore.php?flat=" + distanceforExpense.Tables[0].Rows[0][1].ToString() + "&flon=" + distanceforExpense.Tables[0].Rows[0][2].ToString() + "&tlat=" + callExecutionDataObjectnew.latitude.ToString() + "&tlon=" + callExecutionDataObjectnew.longitude.ToString() + "&format=geojson" + callExecutionDataObjectnew.latitude.ToString() + "," + callExecutionDataObjectnew.longitude.ToString() + "&sensor=false";
        //                                        WebRequest request = WebRequest.Create(url);
        //                                        using (WebResponse response = (HttpWebResponse)request.GetResponse())
        //                                        {
        //                                            using (StreamReader reader = new StreamReader(response.GetResponseStream(), Encoding.UTF8))
        //                                            {
        //                                                DataSet dsResult = new DataSet();
        //                                                dsResult.ReadXml(reader);//format in xml
        //                                                GetCallDitanceForMobile = Convert.ToDouble(dsResult.Tables[0].Rows[0][2].ToString());
        //                                                //  Flag = "DATABASE";
        //                                                if (GetCallDitanceForMobile == 0)
        //                                                {
        //                                                    GetCallDitanceForMobile = new GeoCoordinate(Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][3].ToString()), Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][4].ToString()))
        //                                         .GetDistanceTo(new GeoCoordinate(Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][8].ToString()), Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][9].ToString())));
        //                                                    GetCallDitanceForMobile = GetCallDitanceForMobile / 1000;
        //                                                    //   Flag = "API";
        //                                                }
        //                                            }
        //                                        }
        //                                    }


        //                                    //  GetCallDitanceForMobile = distanceInMeters/1000;
        //                                    Previous_Latitude = distanceforExpense.Tables[0].Rows[0][1].ToString();
        //                                    Previous_Longitude = distanceforExpense.Tables[0].Rows[0][2].ToString();
        //                                    Previous_salescallid = Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][0].ToString());
        //                                    LastDocCity = Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][4].ToString());
        //                                    //  startactid = Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][3].ToString());

        //                                    if ((Previous_Latitude.ToString() == "0" || Previous_Latitude.ToString() == "0") &&
        //                                       (Previous_Longitude.ToString() == "0" || Previous_Longitude.ToString() == "0"))
        //                                    {
        //                                        distanceZero = "Previous Location does not exist";
        //                                    }
        //                                    else
        //                                    {
        //                                        distanceZero = "";
        //                                    }

        //                                    ////GeoCoordinate pin1 = new GeoCoordinate(Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][1].ToString()), Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][2].ToString()));
        //                                    ////GeoCoordinate pin2 = new GeoCoordinate(Convert.ToDouble(callExecutionDataObject.latitude.ToString()), Convert.ToDouble(callExecutionDataObject.longitude.ToString()));

        //                                    ////double distanceBetween = pin1.GetDistanceTo(pin2);

        //                                }
        //                                else if (distanceforExpense.Tables[0].Rows[0][0].ToString() == "FIRST CALL")
        //                                {
        //                                    distanceZero = "FIRST CALL";
        //                                }


        //                                else
        //                                {

        //                                }
        //                                #endregion

        //                            }
        //                        }

        //                        #region  Expense Data Deserialization


        //                        if (callExecutionDataObjectnew.ExpenseDataJson != "[]")
        //                        {
        //                            var ExpenseData = JsonConvert.DeserializeObject<ExpenseDataJsonObject[]>(callExecutionDataObjectnew.ExpenseDataJson);
        //                            try
        //                            {
        //                                for (int k = 0; k < ExpenseData.Length; k++)
        //                                {
        //                                    var ExpenseDetailData = JsonConvert.DeserializeObject<ExpenseDetailDataJsonObject[]>(ExpenseData[k].expenseData);
        //                                    for (int l = 0; l < ExpenseDetailData.Length; l++)
        //                                    {

        //                                        _nvCollection.Clear();

        //                                        _nvCollection.Add("@EmployeeID-int", callExecutionDataObjectnew.employeeId.ToString());
        //                                        _nvCollection.Add("@ActivityId-int", ExpenseDetailData[l].ActivityTypeID.ToString());
        //                                        _nvCollection.Add("@Month-int", result.Month.ToString());
        //                                        _nvCollection.Add("@Year-int", result.Year.ToString());
        //                                        _nvCollection.Add("@Day-int", result.Day.ToString());
        //                                        DataSet ChkOutBackAndNightStay = _dl.GetData("sp_chkOutBackAndNightStayExecuted", _nvCollection);

        //                                        if (ChkOutBackAndNightStay.Tables[0].Rows[0][0].ToString() == "Already Executed")
        //                                        {
        //                                            //returnString = "Already Activity Executed";
        //                                            //goto Error;
        //                                            var getExpenid = _dl.GetData("sp_INSERTExpenseDetailWithCall", new NameValueCollection { 
        //                                    { "@salesCallId-int", salesCallsId.ToString() }, 
        //                                    { "@expenseId-int", "NULL" }, 
        //                                    { "@ExpenseValue-int", "NULL" }, 
        //                                    { "@CallDitanceForMobile-varchar(250)",(callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString() }, 
        //                                    { "@CallDitanceForportal-varchar(250)", GetCallDitanceForMobile.ToString() }, 
        //                                    { "@EmployeeId-Bigint", callExecutionDataObjectnew.employeeId.ToString() }, 
        //                                    { "@doctorId-int", doctorId.ToString() },
        //                                    { "@PreviousSalescall-Bigint", Previous_salescallid.ToString() }, 
        //                                    { "@PreviousLongitude-Bigint", Previous_Longitude.ToString()}, 
        //                                    { "@PreviousLatitude-Bigint", Previous_Latitude.ToString()},
        //                                     { "@Systemvariable-Bigint", distanceZero.ToString()}, 
        //                                          { "@LastDocCity-Bigint", LastDocCity.ToString()},
        //                                       { "@startactid-Bigint", Flag.ToString()}});
        //                                            Constants.ImagesSuccesLog("Date:-" + System.DateTime.Now.ToString() + "--" + "IMsert In sp_INSERTExpenseDetailWithCall:- " + " SalesCallID : " + salesCallsId.ToString() + " CallDitanceForMobile: " + ((callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString()) + " CallDitanceForportal: " + GetCallDitanceForMobile.ToString() + " EmployeeId: " + callExecutionDataObjectnew.employeeId.ToString() + " doctorId: " + doctorId.ToString());

        //                                        }

        //                                        else
        //                                        {
        //                                            var getExpenid = _dl.GetData("sp_INSERTExpenseDetailWithCall", new NameValueCollection { 
        //                                    { "@salesCallId-int", salesCallsId.ToString() }, 
        //                                    { "@expenseId-int", ExpenseDetailData[l].ActivityTypeID.ToString() }, 
        //                                    { "@ExpenseValue-int", ExpenseDetailData[l].Expense.ToString() }, 
        //                                    { "@CallDitanceForMobile-varchar(250)", (callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString()  }, 
        //                                    { "@CallDitanceForportal-varchar(250)", GetCallDitanceForMobile.ToString() }, 
        //                                    { "@EmployeeId-Bigint", callExecutionDataObjectnew.employeeId.ToString() }, 
        //                                    { "@doctorId-int", doctorId.ToString() },
        //                                    { "@PreviousSalescall-Bigint", Previous_salescallid.ToString() }, 
        //                                    { "@PreviousLongitude-Bigint", Previous_Longitude.ToString()}, 
        //                                    { "@PreviousLatitude-Bigint", Previous_Latitude.ToString()}, 
        //                                    { "@Systemvariable-Bigint", distanceZero.ToString()}, 
        //                                      { "@LastDocCity-Bigint", LastDocCity.ToString()},
        //                                    { "@startactid-Bigint", Flag.ToString()}});
        //                                            Constants.ImagesSuccesLog("Date:-" + System.DateTime.Now.ToString() + "--" + "Insert In sp_INSERTExpenseDetailWithCall:- " + " SalesCallID : " + salesCallsId.ToString() + " expenseId: " + ExpenseDetailData[l].ActivityTypeID.ToString() + " CallDitanceForMobile: " + ((callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString()) + " CallDitanceForportal: " + GetCallDitanceForMobile.ToString() + " EmployeeId: " + callExecutionDataObjectnew.employeeId.ToString() + " doctorId: " + doctorId.ToString());
        //                                        }
        //                                    }


        //                                }
        //                            }
        //                            catch (Exception)
        //                            {


        //                            }

        //                        }
        //                        else if (((callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile) != "0.0" || ((callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile) != "0")
        //                        {
        //                            var getExpenid = _dl.GetData("sp_INSERTExpenseDetailWithCall", new NameValueCollection { 
        //                                    { "@salesCallId-int", salesCallsId.ToString() }, 
        //                                    { "@expenseId-int", "NULL" }, 
        //                                    { "@ExpenseValue-int", "NULL" }, 
        //                                    { "@CallDitanceForMobile-varchar(250)", (callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString() }, 
        //                                    { "@CallDitanceForportal-varchar(250)", GetCallDitanceForMobile.ToString() }, 
        //                                    { "@EmployeeId-Bigint", callExecutionDataObjectnew.employeeId.ToString() }, 
        //                                    { "@doctorId-int", doctorId.ToString() },
        //                                    { "@PreviousSalescall-Bigint", Previous_salescallid.ToString() }, 
        //                                    { "@PreviousLongitude-Bigint", Previous_Longitude.ToString()}, 
        //                                    { "@PreviousLatitude-Bigint", Previous_Latitude.ToString()},
        //                                     { "@Systemvariable-Bigint", distanceZero.ToString()}, 
        //                                          { "@LastDocCity-Bigint", LastDocCity.ToString()},
        //                                       { "@startactid-Bigint", Flag.ToString()}});
        //                            Constants.ImagesSuccesLog("Date:-" + System.DateTime.Now.ToString() + "--" + "IMsert In sp_INSERTExpenseDetailWithCall:- " + " SalesCallID : " + salesCallsId.ToString() + " CallDitanceForMobile: " + ((callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString()) + " CallDitanceForportal: " + GetCallDitanceForMobile.ToString() + " EmployeeId: " + callExecutionDataObjectnew.employeeId.ToString() + " doctorId: " + doctorId.ToString());

        //                        }


        //                        #endregion



        //                        #region Image Files Data Deserialization


        //                        try
        //                        {
        //                            if (callExecutionDataObjectnew.ExpenseDataJson != "[]")
        //                            {
        //                                var ExpenseData = JsonConvert.DeserializeObject<ExpenseDataJsonObject[]>(callExecutionDataObjectnew.ExpenseDataJson);
        //                                try
        //                                {
        //                                    for (int k = 0; k < ExpenseData.Length; k++)
        //                                    {
        //                                        expensedata[] ExpenseDetailData = JsonConvert.DeserializeObject<expensedata[]>(ExpenseData[k].expenseData);
        //                                        foreach (expensedata expenseData in ExpenseDetailData)
        //                                        {

        //                                            fileNameObject[] resultfileNameJson = js.Deserialize<fileNameObject[]>(expenseData.File);

        //                                            for (int j = 0; j < resultfileNameJson.Length; j++)
        //                                            {
        //                                                var resultresultfileNameObject = resultfileNameJson[j];
        //                                                if (resultresultfileNameObject.fileName.ToString() != "+")
        //                                                {

        //                                                    _nvCollection.Clear();
        //                                                    _nvCollection.Add("@ImagePath-varchar(500)", ExpenseExecutionImagesPath + "/" + resultresultfileNameObject.fileName);
        //                                                    _nvCollection.Add("@isProfile-varchar(200)", "EXPENSE");
        //                                                    var getsync = _dl.GetData("sp_getsyncimage", _nvCollection);
        //                                                    string imagePath = ExpenseExecutionImagesPath + "/" + resultresultfileNameObject.fileName;
        //                                                    Constants.ImagesSuccesLog("Image initial table live count: " + getsync.Tables[0].Rows.Count + " Image Path : " + imagePath);
        //                                                    if (getsync != null)
        //                                                    {
        //                                                        if (getsync.Tables[0].Rows.Count > 0)
        //                                                        {

        //                                                            _nvCollection.Clear();
        //                                                            _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                                            _nvCollection.Add("@ImagePath-varchar(500)", imagePath);
        //                                                            _nvCollection.Add("@Activityid-varchar(500)", expenseData.ActivityTypeID.ToString());
        //                                                            _nvCollection.Add("@system-varchar(500)", "");
        //                                                            _nvCollection.Add("@isAvailable-bit", "1");
        //                                                            var ch = _dl.GetData("sp_InsertCallExecutionImages", _nvCollection);

        //                                                            Constants.ImagesSuccesLog("Image success table live count: " + getsync.Tables[0].Rows.Count + " isAvailable:1 & Image Path : " + imagePath);
        //                                                        }
        //                                                        else
        //                                                        {
        //                                                            _nvCollection.Clear();
        //                                                            _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                                            _nvCollection.Add("@ImagePath-varchar(500)", imagePath);
        //                                                            _nvCollection.Add("@Activityid-varchar(500)", expenseData.ActivityTypeID.ToString());
        //                                                            _nvCollection.Add("@system-varchar(500)", "");
        //                                                            _nvCollection.Add("@isAvailable-bit", "0");
        //                                                            var callimage = _dl.GetData("sp_InsertCallExecutionImages", _nvCollection);

        //                                                            Constants.ImagesSuccesLog("Image  table live count : " + getsync.Tables[0].Rows.Count + " isAvailable:0 & Image Path : " + imagePath);
        //                                                        }

        //                                                    }

        //                                                    else
        //                                                    {
        //                                                        _nvCollection.Clear();
        //                                                        _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                                        _nvCollection.Add("@ImagePath-varchar(500)", imagePath);
        //                                                        _nvCollection.Add("@Activityid-varchar(500)", expenseData.ActivityTypeID.ToString());
        //                                                        _nvCollection.Add("@system-varchar(500)", "");
        //                                                        _nvCollection.Add("@isAvailable-bit", "0");
        //                                                        var callimage = _dl.GetData("sp_InsertCallExecutionImages", _nvCollection);

        //                                                        Constants.ImagesSuccesLog("Condition Else Image  table live count : " + getsync.Tables[0].Rows.Count + " isAvailable:0 & Image Path : " + imagePath);
        //                                                    }

        //                                                    _nvCollection.Clear();
        //                                                    _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                                    _nvCollection.Add("@ImagePath-varchar(500)", imagePath);
        //                                                    _nvCollection.Add("@Activityid-varchar(500)", expenseData.ActivityTypeID.ToString());
        //                                                    _nvCollection.Add("@system-varchar(500)", "");
        //                                                    _nvCollection.Add("@isAvailable-bit", "0");
        //                                                    var finalcouse = _dl.GetData("sp_InsertCallExecutionImagesFinal", _nvCollection);


        //                                                }
        //                                            }

        //                                        }
        //                                    }
        //                                }
        //                                catch (Exception)
        //                                {


        //                                }

        //                            }

        //                        }
        //                        catch (Exception ex)
        //                        {

        //                        }
        //                        #endregion

        //                        #region EdetailingJson Data Deserialization
        //                        try
        //                        {
        //                            var resultEdetailingJson = JsonConvert.DeserializeObject<EdetailingObject[]>(callExecutionDataObjectnew.EdetailingJson);
        //                            for (int j = 0; j < resultEdetailingJson.Length; j++)
        //                            {
        //                                var resultEdetailingObject = resultEdetailingJson[j];
        //                                _nvCollection.Clear();
        //                                _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                _nvCollection.Add("@PDFId-int", resultEdetailingObject.pdfid);
        //                                _nvCollection.Add("@PageNumId-int", resultEdetailingObject.pagenumber);
        //                                _nvCollection.Add("@TimeDuration-varchar(50)", resultEdetailingObject.timeduration);
        //                                _nvCollection.Add("@Type-int", "1"); //Type ID of PDF
        //                                var ch = _dl.GetData("sp_InsertPDFCallMonitor", _nvCollection);
        //                            }
        //                        }
        //                        catch (Exception ex)
        //                        {

        //                        }
        //                        #endregion

        //                        #region VideoEdetailingJson Data Deserialization

        //                        try
        //                        {
        //                            var resultVideoJson = JsonConvert.DeserializeObject<VideoObject[]>(callExecutionDataObjectnew.videosDetailingJson);
        //                            if (resultVideoJson != null)
        //                            {
        //                                for (int j = 0; j < resultVideoJson.Length; j++)
        //                                {
        //                                    var resultVideoObject = resultVideoJson[j];
        //                                    _nvCollection.Clear();
        //                                    _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
        //                                    _nvCollection.Add("@PDFId-int", resultVideoObject.videoid);
        //                                    _nvCollection.Add("@PageNumId-int", resultVideoObject.videoduration);
        //                                    _nvCollection.Add("@TimeDuration-varchar(50)", resultVideoObject.timeduration);
        //                                    _nvCollection.Add("@Type-int", "2"); //Type ID of Video 
        //                                    var ch = _dl.GetData("sp_InsertPDFCallMonitor", _nvCollection);
        //                                }
        //                            }
        //                        }
        //                        catch (Exception ex)
        //                        {
        //                            //    Constants.CallErrorLog("Error on Video Detailing Insertion: " + ex.Message);

        //                        }
        //                        #endregion

        //                        #region SurveyJson Data Deserialization

        //                        var SurveyData = JsonConvert.DeserializeObject<SurveyMainUploadDataObject[]>(callExecutionDataObjectnew.surveyFormJson);
        //                        for (int k = 0; k < SurveyData.Length; k++)
        //                        {
        //                            SurveyMainUploadDataObject var_surveymainupload = SurveyData[i];
        //                            string Sdate = "";
        //                            string SuerveyId = "";

        //                            Sdate = var_surveymainupload.SurveyDateTime;
        //                            if (!DateTime.TryParse(Sdate, out result))
        //                            {
        //                                returnString = "Survey DateTime Format Is invalid";
        //                            }

        //                            var getAllQuestions = JsonConvert.DeserializeObject<List<SurveyDataUploadDataObject>>(var_surveymainupload.QuestionObject);

        //                            var getsurveyid = _dl.GetData("sp_InserSurveyMain", new NameValueCollection { { "@FormId-int", var_surveymainupload.formid.ToString() }, { "@EmpId-INT", var_surveymainupload.EmpId.ToString() }, { "@CustId-int", var_surveymainupload.CustId.ToString() }, { "@SalescallId-bigint", salesCallsId.ToString() }, { "@SurveyName-varchar(100)", var_surveymainupload.SurveyName }, { "@Description-varchar(250)", var_surveymainupload.Description }, { "@SurveyDateTime-DateTime", Sdate.ToString() } });
        //                            if (getsurveyid.Tables[0].Rows.Count > 0)
        //                            {
        //                                SuerveyId = getsurveyid.Tables[0].Rows[0][0].ToString();
        //                            }

        //                            for (int j = 0; j < getAllQuestions.Count; j++)
        //                            {
        //                                var data = getAllQuestions[j];

        //                                var getsurveycount = _dl.GetData("sp_insertSurveyData", new NameValueCollection { { "@SurveyId-int", SuerveyId }, { "@QuestionId-INT", data.QuestionId }, { "@AnswerId-int", data.AnswerId }, { "@Other-varchar(250)", data.Other } });

        //                            }



        //                        }
        //                        #endregion

        //                        returnString = "CallSaved";
        //                        goto DoneExecution;
        //                    }
        //            #endregion

        //                }


        //            }
        //        }
        //        catch (Exception exception)
        //        {

        //            returnString = exception.Message;
        //            Constants.ErrorLog("Exception Raising From MobileService.svc.cs UploadCallsData_New | " + exception.Message + " | Stack Trace | " + exception.StackTrace + ";");
        //            goto Error;
        //        }

        //    Error:
        //    DoneExecution:
        //        {
        //            CallExecutionResponseObject callExecutionResponseObject = new CallExecutionResponseObject();
        //            callExecutionResponseObject.CallNo = i;
        //            callExecutionResponseObject.isExecutedSuccessfully = (returnString == "CallSaved") ? true : false;
        //            callExecutionResponseObject.CallResponseMessage = returnString;
        //            CallExecutionResponse.Add(callExecutionResponseObject);
        //        }

        //    }
        //    return js.Serialize(CallExecutionResponse);
        //}

        //Shahrukh 03-20-2019 For Expense New changes in Night Stay and Outback
        #endregion

        public string UploadCallsDataLatest(string fileName, Stream stream)
        {
            List<CallExecutionResponseObject> CallExecutionResponse = new List<CallExecutionResponseObject>();
            string CreateFilePath = Path.Combine(HostingEnvironment.MapPath("~/Uploads/Files"));
            try
            {
                if (!Directory.Exists(CreateFilePath))
                {
                    Directory.CreateDirectory(CreateFilePath);
                }
            }
            catch (Exception exception)
            {
                Console.Out.WriteLine(exception.Message);
            }

            string FilePath = Path.Combine(CreateFilePath, fileName);
            int length = 0;
            string returnString = null;
            using (FileStream writer = new FileStream(FilePath, FileMode.Create))
            {
                int readCount;
                var buffer = new byte[8192];
                while ((readCount = stream.Read(buffer, 0, buffer.Length)) != 0)
                {
                    writer.Write(buffer, 0, readCount);
                    length += readCount;
                }
            }
            JavaScriptSerializer js = new JavaScriptSerializer();
            string jsondata = System.IO.File.ReadAllText(FilePath);
            var CallsData = js.Deserialize<List<CallExecutionDataObjectnew>>(jsondata);
            for (int i = 0; i < CallsData.Count; i++)
            {
                CallExecutionDataObjectnew callExecutionDataObjectnew = CallsData[i];

                string date = "";
                string level1 = null, level2 = null, level3 = null, level4 = null, level5 = null, level6 = null;
                var doctorId = "";
                string classId = "", specialityId = "", qulificationId = "";
                int month = 0;
                int year = 0;
                long salesCallsId = 0;
                long iSPlannedAsUnplanned = 0;
                double GetCallDitanceForMobile = 0.0;
                double Previous_salescallid = 0;
                double Flag = 0;
                string Previous_Longitude = "";
                string Previous_Latitude = "";
                string distanceZero = "";
                double LastDocCity = 0;
                long LastDocID = 0;
                string ForExpenseString = "";
                string range = "";
                double distanceInMeters = 0;
                int CallsNo = 0;
                bool allowexecution = false;

                NameValueCollection _nvCollection = new NameValueCollection();

                #region Application Version Check


                try
                {
                    string allowedApplicationVersions = Constants.GetAllowedApplicationVersions();
                    if (allowedApplicationVersions.ToLower() == "all")
                    {
                        allowexecution = true;
                    }
                    else
                    {
                        string[] allowedapps = allowedApplicationVersions.Split(',');
                        for (int j = 0; j < allowedapps.Length; j++)
                        {
                            if (allowedapps[j] == callExecutionDataObjectnew.appversion)
                            {
                                allowexecution = true;
                                break;
                            }
                        }
                    }
                }
                catch (Exception ex)
                {
                    throw ex;
                }

                if (!allowexecution)
                {
                    returnString = "Application version not allowed to excute the calls";
                    goto Error;
                }

                #endregion


                try
                {
                    //DateTime executedDateTime1 = DateTime.ParseExact(callExecutionDataObjectnew.executionDateTime, "dd/MM/yyyy HH:mm:ss", CultureInfo.InvariantCulture);
                    //DateTime CheckDate = DateTime.ParseExact("30/08/2021 23:59:59", "dd/MM/yyyy HH:mm:ss", CultureInfo.InvariantCulture);

                    //if ((callExecutionDataObjectnew.appversion == "2.0.0" || callExecutionDataObjectnew.appversion == "2.0.1") && executedDateTime1 <= CheckDate)
                    //{
                    #region CheckLeave
                    DataSet set0 = _dl.GetData("sp_check_ZSM_MIO_leave", new NameValueCollection { { "@Startdate-date", callExecutionDataObjectnew.date }, { "@Enddate-date", callExecutionDataObjectnew.date }, { "@employeeid-INT", callExecutionDataObjectnew.employeeId } });
                    if (set0.Tables[0].Rows.Count > 0)
                    {
                        returnString = set0.Tables[0].Rows[0][0].ToString() == "Available" ? "Meetingandleave" : "";
                        if (returnString == "Meetingandleave")
                        {
                            goto Error;
                        }
                        else
                        {
                            date = callExecutionDataObjectnew.date + " " + callExecutionDataObjectnew.startTime;
                            DateTime result;
                            if (!DateTime.TryParse(date, out result))
                            {
                                returnString = "DateTime Format Is invalid";
                                goto Error;
                            }
                            DateTime executedDateTime = DateTime.ParseExact(callExecutionDataObjectnew.executionDateTime, "dd/MM/yyyy HH:mm:ss", CultureInfo.InvariantCulture);

                            string rectype = "S";
                            month = result.Month;
                            year = result.Year;
                            var smsmonth = Convert.ToInt32(result.Month);
                            var smsyear = Convert.ToInt32(result.Year);

                            var getatt = _dl.GetData("sp_CheckAttLeave_New", new NameValueCollection { { "@empid-int", callExecutionDataObjectnew.employeeId.ToString() }, { "@MDateTime-datetime", date.ToString() } });
                            if (getatt.Tables[0].Rows[0][0].ToString() == "alreadyLeave")
                            {
                                returnString = "leaveMarked";
                                goto Error;
                            }
                            else if (getatt.Tables[0].Rows[0][0].ToString() == "alreadySPM")
                            {
                                returnString = "SPMMarked";
                                goto Error;
                            }
                            else
                            {
                                #region preedays work
                                if ((callExecutionDataObjectnew.isLive == "1" || callExecutionDataObjectnew.isLive == "0") && Convert.ToDateTime(executedDateTime.ToString("MM/dd/yyyy")) == Convert.ToDateTime(System.DateTime.Now.ToString("MM/dd/yyyy")))
                                {
                                    string dt_temp = "";
                                    string pree_day = "0";
                                    int aloowsDays = 24;

                                    dt_temp = Convert.ToString(result).ToString();

                                    _nvCollection.Clear();
                                    _nvCollection.Add("@EmployeeId-bigint", callExecutionDataObjectnew.employeeId.ToString());

                                    DataSet ds_p = _dl.GetData("sp_SelectEmployeePree_days_withEmpID", _nvCollection);
                                    if (ds_p != null)
                                    {
                                        if (ds_p.Tables[0].Rows.Count > 0)
                                        {
                                            pree_day = ds_p.Tables[0].Rows[0]["pree_days"].ToString();

                                            if (pree_day == "")
                                            {
                                                pree_day = "0";
                                            }
                                            else if (ds_p.Tables[0].Rows[0]["pree_days"] == null)
                                            {
                                                pree_day = "0";
                                            }

                                        }
                                    }

                                    //if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) <= Convert.ToDateTime(System.DateTime.Now.ToString("MM/dd/yyyy")))
                                    //{
                                    //    if (DATEDIFFForHours("Hours", Convert.ToDateTime(dt_temp), Convert.ToDateTime(System.DateTime.Now)) > 24)
                                    //    {
                                    //        if (DATEDIFFForHours("Hours", Convert.ToDateTime(dt_temp), Convert.ToDateTime(System.DateTime.Now)) > ((Convert.ToInt32(pree_day) * aloowsDays) + 0))
                                    //        {
                                    //            returnString = "PreeDays";
                                    //            goto Error;
                                    //        }
                                    //    }
                                    //}
                                    if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) <= Convert.ToDateTime(System.DateTime.Now.ToString("MM/dd/yyyy")))
                                    {
                                        if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) != Convert.ToDateTime(executedDateTime.ToString("MM/dd/yyyy")))
                                        {
                                            if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) <= Convert.ToDateTime(executedDateTime.ToString("MM/dd/yyyy")))
                                            {
                                                if (DATEDIFF("Days", Convert.ToDateTime(dt_temp), Convert.ToDateTime(executedDateTime)) > Convert.ToInt32(pree_day))
                                                {
                                                    returnString = "PreeDays";
                                                    goto Error;
                                                }
                                            }
                                            else
                                            {
                                                returnString = "Not Allowed";
                                                goto Error;
                                            }
                                        }
                                    }
                                    else
                                    {
                                        returnString = "Not Allowed";
                                        goto Error;
                                    }
                                }
                                #endregion

                                #region Employee Information
                                var dsEmployeeMemberShipInfo = _dl.GetData("sp_EmployeeMembershipSelectByEmployee",
                                    new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
                                if (dsEmployeeMemberShipInfo != null)
                                {
                                    var dsEmployeeHierarchy = _dl.GetData("sp_EmplyeeHierarchySelect",
                                        new NameValueCollection { { "@SystemUserID-BIGINT", dsEmployeeMemberShipInfo.Tables[0].Rows[0]["SystemUserID"].ToString() } });
                                    if (dsEmployeeHierarchy != null)
                                    {
                                        level1 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId1"].ToString();
                                        level2 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId2"].ToString();
                                        level3 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId3"].ToString();
                                        level4 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId4"].ToString();
                                        level5 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId5"].ToString();
                                        level6 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId6"].ToString();
                                    }
                                }
                                else
                                {
                                    returnString = "Employee Not Found";
                                    goto Error;
                                }
                                #endregion

                                var doctorCodeArray = callExecutionDataObjectnew.docDetail.Split(',');
                                for (int k = 0; k < doctorCodeArray.Length; k++)
                                {

                                    #region Get Doctor Details
                                    var doctorCode = doctorCodeArray[k];
                                    //var dsGetMrDoctorDetails = _dl.GetData("sp_MRDoctorSelectByCode", new NameValueCollection { { "@EmployeeId-bigint", employeeId }, { "@Code-nvarchar-20", doctorCode } });+
                                    var dsGetMrDoctorDetails = _dl.GetData("sp_MRDoctorSelectByCode_new", new NameValueCollection { { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@Code-nvarchar-20", doctorCode }, { "@month-int", month.ToString() }, { "@year-int", year.ToString() } });
                                    if (dsGetMrDoctorDetails != null)
                                    {
                                        if (dsGetMrDoctorDetails.Tables[0].Rows.Count > 0)
                                        {
                                            doctorId = dsGetMrDoctorDetails.Tables[0].Rows[0]["DoctorId"].ToString();
                                            #region InRange /OutRange
                                            _nvCollection.Clear();
                                            _nvCollection.Add("@DoctorID-int", doctorId.ToString());
                                            _nvCollection.Add("@Address-varchar(Max)", callExecutionDataObjectnew.Doc_Address);
                                            DataSet dslastlatlng = _dl.GetData("sp_Doctorlatlng", _nvCollection);
                                            string getrange = ConfigurationManager.AppSettings["Range"].ToString();
                                            distanceInMeters = new GeoCoordinate(Convert.ToDouble(dslastlatlng.Tables[0].Rows[0][0].ToString()),
                                                Convert.ToDouble(dslastlatlng.Tables[0].Rows[0][1].ToString())).GetDistanceTo(new GeoCoordinate(Convert.ToDouble(callExecutionDataObjectnew.latitude.ToString()),
                                                Convert.ToDouble(callExecutionDataObjectnew.longitude.ToString())));
                                            if (distanceInMeters <= Convert.ToDouble(getrange))
                                            {
                                                range = "InRange";
                                            }
                                            else
                                            {
                                                range = "OutRange";
                                                ForExpenseString = "OutrangeWithoutExpense";
                                                if (GeoFencingForExecution == "1")
                                                {
                                                    returnString = range;
                                                    goto Error;
                                                }
                                            }

                                            #endregion
                                            #region Get Class Of Doctor

                                            //var doctorClassDetail = _dl.GetData("sp_ClassOfDoctorSelect",
                                            //    new NameValueCollection { { "@DoctorId-bigint", doctorId } });
                                            var doctorClassDetail = _dl.GetData("sp_ClassOfDoctorOfSPOSelect",
                                     new NameValueCollection { { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@DoctorId-bigint", doctorId }, { "@month-int", month.ToString() }, { "@year-int", year.ToString() } });
                                            if (doctorClassDetail != null)
                                                if (doctorClassDetail.Tables[0].Rows.Count > 0)
                                                {
                                                    classId = doctorClassDetail.Tables[0].Rows[0]["ClassId"].ToString();
                                                }
                                                else
                                                {
                                                    returnString = "Class Of Doctor Not Found";
                                                    if (callExecutionDataObjectnew.callType == "0") goto Error;
                                                }

                                            #endregion

                                            #region Get Speciality Of Doctor

                                            var doctorspecialitydetail = _dl.GetData("sp_doctorspecialityselectbydoctor",
                                                new NameValueCollection { { "@doctorid-bigint", doctorId } });
                                            if (doctorspecialitydetail != null)
                                                if (doctorspecialitydetail.Tables[0].Rows.Count > 0)
                                                {
                                                    specialityId = doctorspecialitydetail.Tables[0].Rows[0]["specialityid"].ToString();
                                                }
                                                else
                                                {
                                                    returnString = "speciality of doctor not found";
                                                    if (callExecutionDataObjectnew.callType == "0") goto Error;
                                                }

                                            #endregion

                                            #region Get Qualification Of Doctor

                                            var doctorQualificationDetail = _dl.GetData("sp_QualificationsOfDoctorsSelectByDoctor",
                                                new NameValueCollection { { "@DoctorId-BIGINT", doctorId } });
                                            if (doctorQualificationDetail != null)
                                                if (doctorQualificationDetail.Tables[0].Rows.Count > 0)
                                                {
                                                    qulificationId = doctorQualificationDetail.Tables[0].Rows[0]["QulificationId"].ToString();
                                                }
                                                else
                                                {
                                                    returnString = "Qualification Of Doctor Not Found";
                                                    if (callExecutionDataObjectnew.callType == "0") goto Error;
                                                }

                                            #endregion
                                        }
                                    }
                                    else
                                    {
                                        returnString = "Doctor Not Found in Doctor List Of MIO";
                                        if (callExecutionDataObjectnew.callType == "0") goto Error;
                                    }

                                    #endregion

                                    #region Get Visit Shift

                                    var hour = Convert.ToInt32(result.ToString("HH"));

                                    string vt;
                                    if (hour >= 0 && hour < 12)
                                    {
                                        vt = "1";
                                    }
                                    else if (hour < 17)
                                    {
                                        vt = "1";
                                    }
                                    else
                                    {
                                        vt = "2";
                                    }



                                    #endregion

                                    #region PreSalesCallInsert

                                    var getcountstand = _dl.GetData("getcountryStandardtime", new NameValueCollection { { "@employeeid-int", callExecutionDataObjectnew.employeeId } });
                                    var inTimeZone = TimeZoneInfo.FindSystemTimeZoneById(getcountstand.Tables[0].Rows[0][0].ToString());
                                    DateTime inTime = TimeZoneInfo.ConvertTime(DateTime.Now, TimeZoneInfo.Local, inTimeZone);
                                    DataSet set = _dl.GetData("sp_check_call_execute", new NameValueCollection { { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QualificationId-int,", qulificationId }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@IsPlanned-VARCHAR-50", callExecutionDataObjectnew.isPlanned == "No" ? "NULL" : callExecutionDataObjectnew.isPlanned }, { "@visitdate-datetime", result.ToString() }, });
                                    if (set.Tables[0].Rows.Count > 0)
                                    {
                                        returnString = "Already Executed";
                                        if (callExecutionDataObjectnew.callType == "0") goto Error;
                                    }
                                    else
                                    {
                                        if (callExecutionDataObjectnew.isPlanned == "No")
                                        {

                                            DataSet set2 = _dl.GetData("sp_check_CallExecuteForUnplanned", new NameValueCollection { { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@visitdate-datetime", result.ToString() }, });
                                            if (set2.Tables[0].Rows.Count > 0)
                                            {
                                                iSPlannedAsUnplanned = Convert.ToInt64(set2.Tables[0].Rows[0]["pk_CPI_CallPlannerMIOLevelID"].ToString());
                                                var dsPreSalesCalls = _dl.GetData("sp_PreSalesCallsInsert2", new NameValueCollection { { "@VisitDateTime-datetime", result.ToString() }, { "@Level1LevelId-int,", level1 }, { "@Level2LevelId-int,", level2 }, { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QulificationId-int,", qulificationId }, { "@CreationDateTime-datetime", inTime.ToString() }, { "@CallTypeId-int", "1" }, { "@VisitShift-int,", vt }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@InboundId-bigint", "NULL" }, { "@DocCode-INT", doctorCode }, { "@IsPlanned-VARCHAR-50", callExecutionDataObjectnew.isPlanned == "No" ? iSPlannedAsUnplanned.ToString() : callExecutionDataObjectnew.isPlanned }, { "@ActivityID-INT", callExecutionDataObjectnew.activity }, { "@ReasonID-INT", callExecutionDataObjectnew.reason } });
                                                if (dsPreSalesCalls != null)
                                                {
                                                    if (dsPreSalesCalls.Tables[0].Rows.Count > 0)
                                                    {
                                                        if (dsPreSalesCalls.Tables[0].Rows[0][0].ToString() == "alreadyexecuted")
                                                        {
                                                            returnString = "Already Executed";
                                                            return returnString;
                                                        }
                                                        else
                                                        {
                                                            salesCallsId = Convert.ToInt64(dsPreSalesCalls.Tables[0].Rows[0]["SalesCallId"].ToString());
                                                        }
                                                    }
                                                    else
                                                    {
                                                        returnString = "Error In Saving In PreSalesCalls";
                                                        if (callExecutionDataObjectnew.callType == "0") goto Error;
                                                    }
                                                }
                                                else
                                                {
                                                    returnString = "Error In Saving In PreSalesCalls";
                                                    if (callExecutionDataObjectnew.callType == "0") goto Error;
                                                }
                                            }
                                            else
                                            {
                                                var dsPreSalesCalls = _dl.GetData("sp_PreSalesCallsInsert2", new NameValueCollection { { "@VisitDateTime-datetime", result.ToString() }, { "@Level1LevelId-int,", level1 }, { "@Level2LevelId-int,", level2 }, { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QulificationId-int,", qulificationId }, { "@CreationDateTime-datetime", inTime.ToString() }, { "@CallTypeId-int", "1" }, { "@VisitShift-int,", vt }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@InboundId-bigint", "NULL" }, { "@DocCode-INT", doctorCode }, { "@IsPlanned-VARCHAR-50", callExecutionDataObjectnew.isPlanned == "No" ? "NULL" : callExecutionDataObjectnew.isPlanned }, { "@ActivityID-INT", callExecutionDataObjectnew.activity }, { "@ReasonID-INT", callExecutionDataObjectnew.reason } });
                                                if (dsPreSalesCalls != null)
                                                {
                                                    if (dsPreSalesCalls.Tables[0].Rows.Count > 0)
                                                    {
                                                        salesCallsId = Convert.ToInt64(dsPreSalesCalls.Tables[0].Rows[0]["SalesCallId"].ToString());
                                                    }
                                                    else
                                                    {
                                                        returnString = "Error In Saving In PreSalesCalls";
                                                        if (callExecutionDataObjectnew.callType == "0") goto Error;
                                                    }
                                                }
                                                else
                                                {
                                                    returnString = "Error In Saving In PreSalesCalls";
                                                    if (callExecutionDataObjectnew.callType == "0") goto Error;
                                                }
                                            }
                                        }
                                        else
                                        {
                                            var dsPreSalesCalls = _dl.GetData("sp_PreSalesCallsInsert2", new NameValueCollection { { "@VisitDateTime-datetime", result.ToString() }, { "@Level1LevelId-int,", level1 }, { "@Level2LevelId-int,", level2 }, { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QulificationId-int,", qulificationId }, { "@CreationDateTime-datetime", inTime.ToString() }, { "@CallTypeId-int", "1" }, { "@VisitShift-int,", vt }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@InboundId-bigint", "NULL" }, { "@DocCode-INT", doctorCode }, { "@IsPlanned-VARCHAR-50", callExecutionDataObjectnew.isPlanned == "No" ? "NULL" : callExecutionDataObjectnew.isPlanned }, { "@ActivityID-INT", callExecutionDataObjectnew.activity }, { "@ReasonID-INT", callExecutionDataObjectnew.reason } });
                                            if (dsPreSalesCalls != null)
                                            {
                                                if (dsPreSalesCalls.Tables[0].Rows.Count > 0)
                                                {
                                                    salesCallsId = Convert.ToInt64(dsPreSalesCalls.Tables[0].Rows[0]["SalesCallId"].ToString());
                                                }
                                                else
                                                {
                                                    returnString = "Error In Saving In PreSalesCalls";
                                                    if (callExecutionDataObjectnew.callType == "0") goto Error;
                                                }
                                            }
                                            else
                                            {
                                                returnString = "Error In Saving In PreSalesCalls";
                                                if (callExecutionDataObjectnew.callType == "0") goto Error;
                                            }
                                        }
                                    }
                                    #endregion

                                    if (salesCallsId != 0)
                                    {
                                        #region Mobile Exec Time
                                        if (callExecutionDataObjectnew.executionDateTime != null)
                                        {
                                            _nvCollection.Clear();
                                            _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                            _nvCollection.Add("@mobexectime-datetime", executedDateTime.ToString());

                                            var mac = _dl.GetData("sp_Insert_MobExecutionTime", _nvCollection);
                                        }
                                        #endregion

                                        #region CallDoctors


                                        // ReSharper disable once UnusedVariable
                                        if (_dataContext != null)
                                        {
                                            var insertCallDoctors = _dataContext.sp_CallDoctorsInsert(salesCallsId, Convert.ToInt64(doctorId)).ToList();
                                        }

                                        #endregion

                                        #region CallVisitors
                                        if (!Convert.ToBoolean(callExecutionDataObjectnew.coaching))
                                        {
                                            // ReSharper disable once UnusedVariable
                                            var dsIsCoaching = _dl.InserData("sp_InsertCallCoaching", new NameValueCollection {
                                                    {"@SalesCallId-INT", salesCallsId.ToString()},
                                                    {"@IsCoaching-VARCHAR-50", "0"}
                                            });
                                        }
                                        else
                                        {
                                            // ReSharper disable once UnusedVariable
                                            var dsIsCoaching = _dl.InserData("sp_InsertCallCoaching", new NameValueCollection {
                                                {"@SalesCallId-INT", salesCallsId.ToString()},
                                                {"@IsCoaching-VARCHAR-50", "1"}
                                            });
                                        }
                                        long jvflma = 0;
                                        long jvslma = 0;
                                        long jvftma = callExecutionDataObjectnew.jvftm == "true" ? 1 : 0;
                                        //NSM
                                        long jvbuha = 0;
                                        //GM
                                        long jvgma = 0;
                                        long jvcooa = callExecutionDataObjectnew.jvcoo == "true" ? 1 : 0;
                                        long jvcda = callExecutionDataObjectnew.jvcd == "true" ? 1 : 0;
                                        long jvpma = callExecutionDataObjectnew.jvpm == "true" ? 1 : 0;
                                        if (Convert.ToBoolean(callExecutionDataObjectnew.jvflm))
                                        {
                                            var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
                                            if (dsFlm != null)
                                            {
                                                if (dsFlm.Tables[0].Rows.Count > 0)
                                                {
                                                    jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
                                                }
                                            }
                                        }
                                        if (Convert.ToBoolean(callExecutionDataObjectnew.jvslm))
                                        {
                                            var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
                                            if (dsFlm != null)
                                            {
                                                if (dsFlm.Tables[0].Rows.Count > 0)
                                                {
                                                    jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
                                                    var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(jvflma) } });
                                                    if (dsSlm != null)
                                                    {
                                                        if (dsSlm.Tables[0].Rows.Count > 0)
                                                        {
                                                            jvslma = Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString());
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        //Check if Joint Visit is with NSM
                                        if (Convert.ToBoolean(callExecutionDataObjectnew.jvbuh))
                                        {
                                            var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
                                            if (dsFlm != null)
                                            {
                                                if (dsFlm.Tables[0].Rows.Count > 0)
                                                {
                                                    jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
                                                    //var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(jvflma) } });
                                                    var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });
                                                    if (dsSlm != null)
                                                    {
                                                        if (dsSlm.Tables[0].Rows.Count > 0)
                                                        {
                                                            jvslma = Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString());
                                                            var dsBuh = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });

                                                            if (dsBuh != null)
                                                            {
                                                                if (dsBuh.Tables[0].Rows.Count > 0)
                                                                {
                                                                    jvbuha = Convert.ToInt64(dsBuh.Tables[0].Rows[0]["ManagerId"].ToString());
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        //Check if Joint Visit is with GM
                                        if (Convert.ToBoolean(callExecutionDataObjectnew.jvgm))
                                        {
                                            var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
                                            if (dsFlm != null)
                                            {
                                                if (dsFlm.Tables[0].Rows.Count > 0)
                                                {
                                                    jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
                                                    //var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(jvflma) } });
                                                    var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });
                                                    if (dsSlm != null)
                                                    {
                                                        if (dsSlm.Tables[0].Rows.Count > 0)
                                                        {
                                                            jvslma = Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString());
                                                            var dsBuh = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });

                                                            if (dsBuh != null)
                                                            {
                                                                if (dsBuh.Tables[0].Rows.Count > 0)
                                                                {
                                                                    jvbuha = Convert.ToInt64(dsBuh.Tables[0].Rows[0]["ManagerId"].ToString());
                                                                    var dsGm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsBuh.Tables[0].Rows[0]["ManagerId"].ToString())) } });
                                                                    if (dsGm != null)
                                                                    {
                                                                        if (dsGm.Tables[0].Rows.Count > 0)
                                                                        {
                                                                            jvgma = Convert.ToInt64((dsGm.Tables[0].Rows[0]["ManagerId"].ToString() == "" ? "1" : dsGm.Tables[0].Rows[0]["ManagerId"].ToString()));
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        jvflma = callExecutionDataObjectnew.jvflm == "true" ? jvflma : 0;
                                        jvslma = callExecutionDataObjectnew.jvslm == "true" ? jvslma : 0;
                                        jvbuha = callExecutionDataObjectnew.jvbuh == "true" ? jvbuha : 0;
                                        jvgma = callExecutionDataObjectnew.jvgm == "true" ? jvgma : 0;

                                        //if (Convert.ToBoolean(callExecutionDataObject.jvho1))
                                        //{
                                        //    jvHO1 = 1;
                                        //}
                                        //if (Convert.ToBoolean(callExecutionDataObject.jvho2))
                                        //{
                                        //    jvHO2 = 1;
                                        //}
                                        //// ReSharper disable once UnusedVariable
                                        long? nullable = null;
                                        if (_dataContext != null)
                                        {
                                            /* var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew(salesCallsId, Convert.ToInt64(callExecutionDataObject.employeeId),
                                                 ((jvflma == 0) ? nullable : jvflma),
                                                 ((jvslma == 0) ? nullable : jvslma),
                                                 ((jvHO1 == 0) ? nullable : jvHO1),
                                                 ((jvHO2 == 0) ? nullable : jvHO2)).ToList();*/
                                            var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew_withjv8(salesCallsId,
                                                Convert.ToInt64(callExecutionDataObjectnew.employeeId),
                                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvflm)) ? nullable : jvflma),
                                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvslm)) ? nullable : jvslma),
                                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvftm)) ? nullable : jvftma),
                                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvbuh)) ? nullable : jvbuha),
                                                //ye parameter sahih lgane hain filhal temporary lgaye hen 
                                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvgm)) ? nullable : jvgma),
                                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvcoo)) ? nullable : jvcooa),
                                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvcd)) ? nullable : jvcda),
                                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvpm)) ? nullable : jvpma)
                                            ).ToList();

                                            /*if (jvflma == 0 && jvslma == 0)
                                            {
                                                var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew(salesCallsId, Convert.ToInt64(callExecutionDataObject.employeeId), null, null, null, null).ToList();
                                            }
                                            else
                                            {
                                                var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew(salesCallsId, Convert.ToInt64(callExecutionDataObject.employeeId), jvflma, jvslma, 0, 0).ToList();
                                            }*/

                                        }

                                        #endregion

                                        #region VisitFeedBack

                                        if (_dataContext != null)
                                        {
                                            // ReSharper disable once UnusedVariable
                                            var insertFeedBack = _dataContext.sp_VisitFeedBackInsert(salesCallsId, callExecutionDataObjectnew.callNotes).ToList();
                                        }

                                        #endregion

                                        #region CallProducts

                                        // ReSharper disable once NotAccessedVariable
                                        List<CallProduct> insertCallProduct;

                                        if (callExecutionDataObjectnew.product1 != "-1")
                                        {
                                            if (_dataContext != null)
                                            {
                                                // ReSharper disable once RedundantAssignment
                                                //insertCallProduct =
                                                //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product1), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product1), 1).ToList();
                                                insertCallProduct =
                                                    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnew.product1), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnew.product1), 1).ToList();

                                                if (callExecutionDataObjectnew.p1Notes != "" && insertCallProduct.Count > 0)
                                                {
                                                    var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
                                                        new NameValueCollection { 
                                                { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() }, 
                                                { "@Comment-varchar(max),", callExecutionDataObjectnew.p1Notes} 
                                                });
                                                }
                                            }


                                        }


                                        if (callExecutionDataObjectnew.product2 != "-1")
                                        {
                                            if (_dataContext != null)
                                            {
                                                // ReSharper disable once RedundantAssignment
                                                //insertCallProduct =
                                                //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product2), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product1), 2).ToList();
                                                insertCallProduct =
                                                    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnew.product2), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnew.product2), 2).ToList();

                                                if (callExecutionDataObjectnew.p2Notes != "" && insertCallProduct.Count > 0)
                                                {
                                                    var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
                                                        new NameValueCollection { 
                                                { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() }, 
                                                { "@Comment-varchar(max),", callExecutionDataObjectnew.p2Notes} 
                                                });
                                                }

                                            }
                                        }

                                        if (callExecutionDataObjectnew.product3 != "-1")
                                        {
                                            if (_dataContext != null)
                                            {
                                                // ReSharper disable once RedundantAssignment
                                                //insertCallProduct =
                                                //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product3), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product3), 3).ToList();
                                                insertCallProduct =
                                                    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnew.product3), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnew.product3), 3).ToList();

                                                if (callExecutionDataObjectnew.p3Notes != "" && insertCallProduct.Count > 0)
                                                {
                                                    var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
                                                        new NameValueCollection { 
                                                { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() }, 
                                                { "@Comment-varchar(max),", callExecutionDataObjectnew.p3Notes} 
                                                });
                                                }
                                            }
                                        }

                                        if (callExecutionDataObjectnew.product4 != "-1")
                                        {
                                            if (_dataContext != null)
                                            {
                                                // ReSharper disable once RedundantAssignment
                                                //insertCallProduct =
                                                //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product4), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product4), 4).ToList();
                                                insertCallProduct =
                                                    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnew.product4), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnew.product4), 4).ToList();

                                                if (callExecutionDataObjectnew.p4Notes != "" && insertCallProduct.Count > 0)
                                                {
                                                    var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
                                                        new NameValueCollection { 
                                                { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() }, 
                                                { "@Comment-varchar(max),", callExecutionDataObjectnew.p4Notes} 
                                                });
                                                }
                                            }

                                        }



                                        #endregion

                                        #region CallProductSamples

                                        if (callExecutionDataObjectnew.sample1 != "-1" && callExecutionDataObjectnew.sampleQty1 != "")
                                        {

                                            // var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample1 } });

                                            // int SampleProdID1 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());


                                            var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObjectnew.sample1 } });

                                            int SampleProdID1 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
                                            _nvCollection.Clear();
                                            _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
                                            _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample1.ToString());
                                            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                                            _nvCollection.Add("@month-int", smsmonth.ToString());
                                            _nvCollection.Add("@year-int", smsyear.ToString());
                                            var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
                                            if (checkSample1Balance.Tables[0].Rows.Count > 0)
                                            {
                                                int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
                                                int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
                                                int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

                                                if (balnc >= (qty + opening))
                                                {

                                                }
                                                else if ((Convert.ToInt32(callExecutionDataObjectnew.sampleQty1) + balnc) > (qty + opening))
                                                {

                                                }
                                                else
                                                {
                                                    var newbalance = Convert.ToInt32(callExecutionDataObjectnew.sampleQty1) + balnc;
                                                    _nvCollection.Clear();
                                                    _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
                                                    _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample1.ToString());
                                                    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                                                    _nvCollection.Add("@Qty-int", newbalance.ToString());
                                                    _nvCollection.Add("@month-int", smsmonth.ToString());
                                                    _nvCollection.Add("@year-int", smsyear.ToString());
                                                    var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

                                                    _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID1, Convert.ToInt32(callExecutionDataObjectnew.sample1), Convert.ToInt32(callExecutionDataObjectnew.sampleQty1), 1).ToList();
                                                }
                                            }

                                        }

                                        if (callExecutionDataObjectnew.sample2 != "-1" && callExecutionDataObjectnew.sampleQty2 != "")
                                        {
                                            // var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample2 } });

                                            // int SampleProdID2 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

                                            // _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID2, Convert.ToInt32(callExecutionDataObject.sample2), Convert.ToInt32(callExecutionDataObject.sampleQty2), 2).ToList();


                                            var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObjectnew.sample2 } });

                                            int SampleProdID2 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
                                            // int SampleProdID2 = Convert.ToInt32(sample2);
                                            _nvCollection.Clear();
                                            _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
                                            _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample2.ToString());
                                            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                                            _nvCollection.Add("@month-int", smsmonth.ToString());
                                            _nvCollection.Add("@year-int", smsyear.ToString());
                                            var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
                                            if (checkSample1Balance.Tables[0].Rows.Count > 0)
                                            {
                                                int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
                                                int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
                                                int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

                                                if (balnc >= (qty + opening))
                                                {

                                                }
                                                else if ((Convert.ToInt32(callExecutionDataObjectnew.sampleQty2) + balnc) > (qty + opening))
                                                {

                                                }
                                                else
                                                {
                                                    var newbalance = Convert.ToInt32(callExecutionDataObjectnew.sampleQty2) + balnc;
                                                    _nvCollection.Clear();
                                                    _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
                                                    _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample2.ToString());
                                                    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                                                    _nvCollection.Add("@Qty-int", newbalance.ToString());
                                                    _nvCollection.Add("@month-int", smsmonth.ToString());
                                                    _nvCollection.Add("@year-int", smsyear.ToString());
                                                    var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

                                                    _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID2, Convert.ToInt32(callExecutionDataObjectnew.sample2), Convert.ToInt32(callExecutionDataObjectnew.sampleQty2), 2).ToList();
                                                }
                                            }

                                        }

                                        if (callExecutionDataObjectnew.sample3 != "-1" && callExecutionDataObjectnew.sampleQty3 != "")
                                        {

                                            // var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample3 } });

                                            //   int SampleProdID3 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

                                            //   _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID3, Convert.ToInt32(callExecutionDataObject.sample3), Convert.ToInt32(callExecutionDataObject.sampleQty3), 3).ToList();

                                            var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObjectnew.sample3 } });

                                            int SampleProdID3 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
                                            //  int SampleProdID3 = Convert.ToInt32(sample3);
                                            _nvCollection.Clear();
                                            _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
                                            _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample3.ToString());
                                            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                                            _nvCollection.Add("@month-int", smsmonth.ToString());
                                            _nvCollection.Add("@year-int", smsyear.ToString());
                                            var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
                                            if (checkSample1Balance.Tables[0].Rows.Count > 0)
                                            {
                                                int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
                                                int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
                                                int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

                                                if (balnc >= (qty + opening))
                                                {

                                                }
                                                else if ((Convert.ToInt32(callExecutionDataObjectnew.sampleQty3) + balnc) > (qty + opening))
                                                {

                                                }
                                                else
                                                {
                                                    var newbalance = Convert.ToInt32(callExecutionDataObjectnew.sampleQty3) + balnc;
                                                    _nvCollection.Clear();
                                                    _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
                                                    _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample3.ToString());
                                                    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                                                    _nvCollection.Add("@Qty-int", newbalance.ToString());
                                                    _nvCollection.Add("@month-int", smsmonth.ToString());
                                                    _nvCollection.Add("@year-int", smsyear.ToString());
                                                    var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

                                                    _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID3, Convert.ToInt32(callExecutionDataObjectnew.sample3), Convert.ToInt32(callExecutionDataObjectnew.sampleQty3), 3).ToList();
                                                }
                                            }

                                        }


                                        //if (callExecutionDataObject.sample4 != "-1" && callExecutionDataObject.sampleQty4 != "")
                                        //{

                                        //  //  var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample4 } });

                                        // //   int SampleProdID4 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

                                        //  //  _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID4, Convert.ToInt32(callExecutionDataObject.sample4), Convert.ToInt32(callExecutionDataObject.sampleQty4), 4).ToList();

                                        //    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample4 } });

                                        //    int SampleProdID4 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
                                        //    //int SampleProdID4 = Convert.ToInt32(sample4);
                                        //    _nvCollection.Clear();
                                        //    _nvCollection.Add("@mioid-int", callExecutionDataObject.employeeId.ToString());
                                        //    _nvCollection.Add("@sample_id-int", callExecutionDataObject.sample4.ToString());
                                        //    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                                        //    _nvCollection.Add("@month-int", smsmonth.ToString());
                                        //    _nvCollection.Add("@year-int", smsyear.ToString());
                                        //    var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
                                        //    if (checkSample1Balance.Tables[0].Rows.Count > 0)
                                        //    {
                                        //        int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
                                        //        int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
                                        //        int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

                                        //        if (balnc >= (qty + opening))
                                        //        {

                                        //        }
                                        //        else if ((Convert.ToInt32(callExecutionDataObject.sampleQty4) + balnc) > (qty + opening))
                                        //        {

                                        //        }
                                        //        else
                                        //        {
                                        //            var newbalance = Convert.ToInt32(callExecutionDataObject.sampleQty4) + balnc;
                                        //            _nvCollection.Clear();
                                        //            _nvCollection.Add("@mioid-int", callExecutionDataObject.employeeId.ToString());
                                        //            _nvCollection.Add("@sample_id-int", callExecutionDataObject.sample1.ToString());
                                        //            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                                        //            _nvCollection.Add("@Qty-int", newbalance.ToString());
                                        //            _nvCollection.Add("@month-int", smsmonth.ToString());
                                        //            _nvCollection.Add("@year-int", smsyear.ToString());
                                        //            var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

                                        //            _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID4, Convert.ToInt32(callExecutionDataObject.sample4), Convert.ToInt32(callExecutionDataObject.sampleQty4), 4).ToList();
                                        //        }
                                        //    }

                                        //}

                                        //if (callExecutionDataObject.sample5 != "-1" && callExecutionDataObject.sampleQty5 != "")
                                        //{

                                        //    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample5 } });

                                        //    int SampleProdID5 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

                                        //    _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID5, Convert.ToInt32(callExecutionDataObject.sample5), Convert.ToInt32(callExecutionDataObject.sampleQty5), 5).ToList();

                                        //}

                                        #endregion

                                        #region CallReminder

                                        if (callExecutionDataObjectnew.reminder1 != "-1")
                                        {
                                            _dl.InserData("sp_CallReminderInsert", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@DetailReminder-int", callExecutionDataObjectnew.reminder1 }, { "@OrderBy-int", "1" } });
                                        }

                                        if (callExecutionDataObjectnew.reminder2 != "-1")
                                        {
                                            _dl.InserData("sp_CallReminderInsert", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@DetailReminder-int", callExecutionDataObjectnew.reminder2 }, { "@OrderBy-int", "2" } });
                                        }

                                        if (callExecutionDataObjectnew.reminder3 != "-1")
                                        {
                                            _dl.InserData("sp_CallReminderInsert", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@DetailReminder-int", callExecutionDataObjectnew.reminder3 }, { "@OrderBy-int", "3" } });
                                        }


                                        #endregion

                                        #region CallGifts

                                        // ReSharper disable once NotAccessedVariable
                                        List<CallGift> insertCallGift;

                                        if (callExecutionDataObjectnew.gift != "-1")
                                        {
                                            // ReSharper disable once RedundantAssignment
                                            insertCallGift = callExecutionDataObjectnew.giftQty != "" ? _dataContext.sp_CallGiftsInsert(salesCallsId, Convert.ToInt32(callExecutionDataObjectnew.gift), Convert.ToInt32(callExecutionDataObjectnew.giftQty), 1).ToList() : _dataContext.sp_CallGiftsInsert(salesCallsId, Convert.ToInt32(callExecutionDataObjectnew.gift), 0, 1).ToList();
                                        }


                                        #endregion

                                        #region MacAddress
                                        // macaddress = "123.213.163";
                                        if (callExecutionDataObjectnew.macaddress != null)
                                        {
                                            _nvCollection.Clear();
                                            _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                            _nvCollection.Add("@EmployesID-int", callExecutionDataObjectnew.employeeId.ToString());
                                            _nvCollection.Add("@macaddress-varchar(50)", callExecutionDataObjectnew.macaddress.ToString());

                                            var mac = _dl.GetData("sp_insert_macaddress", _nvCollection);
                                        }
                                        #endregion

                                        #region Location
                                        if (callExecutionDataObjectnew.longitude != null && callExecutionDataObjectnew.latitude != null)
                                        {
                                            _nvCollection.Clear();
                                            _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                            _nvCollection.Add("@long-varchar(100)", callExecutionDataObjectnew.longitude.ToString());
                                            _nvCollection.Add("@lat-varchar(100)", callExecutionDataObjectnew.latitude.ToString());
                                            var ch = _dl.GetData("sp_Insert_Location", _nvCollection);
                                        }

                                        #endregion

                                        #region Fake Users Calls Data

                                        try
                                        {
                                            if (callExecutionDataObjectnew.flag != null)
                                            {
                                                _nvCollection.Clear();

                                                _nvCollection.Clear();
                                                _nvCollection.Add("@SalesCalID-int", salesCallsId.ToString());
                                                _nvCollection.Add("@Flag-int", ((Convert.ToBoolean(callExecutionDataObjectnew.flag.ToString())) ? "1" : "0"));
                                                _nvCollection.Add("@AppVersion-varchar(100)", callExecutionDataObjectnew.appversion);
                                                _nvCollection.Add("@MacAddress-varchar(100)", callExecutionDataObjectnew.macaddress);
                                                _nvCollection.Add("@ApplicationPackages-text", callExecutionDataObjectnew.applicationpackages);
                                                _nvCollection.Add("@ModelNumber-text", callExecutionDataObjectnew.modelnumber);
                                                var ch = _dl.GetData("sp_fakeUsersData", _nvCollection);


                                            }
                                        }
                                        catch (Exception)
                                        {

                                            //throw;
                                        }



                                        #endregion

                                        #region Range


                                        if (range.ToString() != "")
                                        {


                                            var rangestatus = _dl.GetData("sp_insertrangestatus", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@RangeStatus-varchar(50)", range.ToString() }, { "@Distance-varchar(100)", distanceInMeters.ToString() } });
                                        }
                                        else
                                        {
                                            var rangestatus = _dl.GetData("sp_insertrangestatus", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@RangeStatus-varchar(50)", "NewTag" }, { "@Distance-varchar(100)", "0.0" } });
                                        }

                                        #endregion

                                        #region Doctortagging

                                        string address = "";
                                        long doctorid;
                                        var dsDoctorTagPermision = _dl.GetData("sp_DoctorTagPermision", new NameValueCollection { { "@DoctorID-INT", doctorId } });
                                        if (dsDoctorTagPermision != null)
                                        {
                                            if (dsDoctorTagPermision.Tables[0].Rows.Count > 0)
                                            {
                                                doctorid = Convert.ToInt64(dsDoctorTagPermision.Tables[0].Rows[0]["DoctorID"].ToString());
                                                string url = "http://maps.googleapis.com/maps/api/geocode/xml?latlng=" + callExecutionDataObjectnew.latitude.ToString() + "," + callExecutionDataObjectnew.longitude.ToString() + "&sensor=false";
                                                WebRequest request = WebRequest.Create(url);
                                                using (WebResponse response = (HttpWebResponse)request.GetResponse())
                                                {
                                                    using (StreamReader reader = new StreamReader(response.GetResponseStream(), Encoding.UTF8))
                                                    {
                                                        // empid = dt.Rows[i]["EmployeeId"].ToString();
                                                        DataSet dsResult = new DataSet();
                                                        dsResult.ReadXml(reader);//format in xml
                                                        DataTable dtCoordinates = new DataTable();
                                                        dtCoordinates.Columns.AddRange(new DataColumn[1] { new DataColumn("AreaAddress", typeof(string)) });

                                                        if (dsResult.Tables.Count > 1)
                                                        {
                                                            var data = dsResult.Tables[1];
                                                            var add1 = data.Rows[0]["formatted_address"].ToString();
                                                            var add2 = data.Rows[2]["formatted_address"].ToString();
                                                            string split = add1.Split(',')[0];
                                                            address = split + " " + add2;
                                                            // dt.Rows[i]["Address"] = address;
                                                        }


                                                    }
                                                }
                                            }

                                        }

                                        #endregion

                                        #region Doctor Location
                                        if (callExecutionDataObjectnew.longitude != null && callExecutionDataObjectnew.latitude != null)
                                        {
                                            _nvCollection.Clear();
                                            _nvCollection.Add("@DoctorID-int", doctorId.ToString());

                                            DataSet dsloccount = _dl.GetData("sp_CountDoctorTagging", _nvCollection);

                                            if (dsloccount.Tables[0].Rows.Count < 1)
                                            {
                                                _nvCollection.Clear();
                                                _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                                _nvCollection.Add("@DoctorID-int", doctorId.ToString());
                                                _nvCollection.Add("@VisitShift-int", vt);
                                                _nvCollection.Add("@long-varchar(100)", callExecutionDataObjectnew.longitude.ToString());
                                                _nvCollection.Add("@lat-varchar(100)", callExecutionDataObjectnew.latitude.ToString());
                                                _nvCollection.Add("@Address-varchar(MAX)", address.ToString());
                                                var ch = _dl.GetData("sp_Insert_DoctorTagging", _nvCollection);
                                            }

                                        }
                                        #endregion

                                        #region CalculateDistanceForExpenseData

                                        _nvCollection.Clear();
                                        //_nvCollection.Add("@SalesCallID-int", salesCallsId.ToString());
                                        //_nvCollection.Add("@AutoActivityStatus-int", callExecutionDataObject.AutoActivityStart.ToString());
                                        _nvCollection.Add("@EmployeeID-int", callExecutionDataObjectnew.employeeId.ToString());
                                        _nvCollection.Add("@Salescallid-int", salesCallsId.ToString());
                                        _nvCollection.Add("@Month-int", result.Month.ToString());
                                        _nvCollection.Add("@Year-int", result.Year.ToString());
                                        _nvCollection.Add("@Day-int", result.Day.ToString());

                                        DataSet distanceforExpense = _dl.GetData("sp_GetLatLongforCallDistance", _nvCollection);

                                        if (distanceforExpense.Tables[0].Rows.Count > 0 && distanceforExpense.Tables[0].Rows[0][0].ToString() != "FIRST CALL" && distanceforExpense.Tables[0].Rows[0][0].ToString() != "ACTIVITY NOT STARTED")
                                        {
                                            //double distanceInMeters = new GeoCoordinate(Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][1].ToString()), Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][2].ToString()))
                                            //    .GetDistanceTo(new GeoCoordinate(Convert.ToDouble(callExecutionDataObjectnew.latitude.ToString()), Convert.ToDouble(callExecutionDataObjectnew.longitude.ToString())));
                                            //if (distanceforExpense.Tables[0].Rows[0][1].ToString() != "0.0")
                                            //{
                                            //    string url = "http://www.yournavigation.org/api/1.0/gosmore.php?flat=" + distanceforExpense.Tables[0].Rows[0][1].ToString() + "&flon=" + distanceforExpense.Tables[0].Rows[0][2].ToString() + "&tlat=" + callExecutionDataObjectnew.latitude.ToString() + "&tlon=" + callExecutionDataObjectnew.longitude.ToString() + "&format=geojson" + callExecutionDataObjectnew.latitude.ToString() + "," + callExecutionDataObjectnew.longitude.ToString() + "&sensor=false";
                                            //    WebRequest request = WebRequest.Create(url);
                                            //    using (WebResponse response = (HttpWebResponse)request.GetResponse())
                                            //    {
                                            //        using (StreamReader reader = new StreamReader(response.GetResponseStream(), Encoding.UTF8))
                                            //        {
                                            //            DataSet dsResult = new DataSet();
                                            //            dsResult.ReadXml(reader);//format in xml
                                            //            GetCallDitanceForMobile = Convert.ToDouble(dsResult.Tables[0].Rows[0][2].ToString());
                                            //            //  Flag = "DATABASE";

                                            //            //Commented For Temporary 
                                            //     //       if (GetCallDitanceForMobile == 0)
                                            //     //       {
                                            //     //           GetCallDitanceForMobile = new GeoCoordinate(Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][1].ToString()), Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][2].ToString()))
                                            //     //.GetDistanceTo(new GeoCoordinate(Convert.ToDouble(callExecutionDataObjectnew.latitude.ToString()), Convert.ToDouble(callExecutionDataObjectnew.longitude.ToString())));
                                            //     //           GetCallDitanceForMobile = GetCallDitanceForMobile / 1000;
                                            //     //           //   Flag = "API";
                                            //     //       }
                                            //        }
                                            //    }
                                            //}

                                            //  GetCallDitanceForMobile = distanceInMeters/1000;
                                            Previous_Latitude = distanceforExpense.Tables[0].Rows[0][1].ToString();
                                            Previous_Longitude = distanceforExpense.Tables[0].Rows[0][2].ToString();
                                            Previous_salescallid = Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][0].ToString());
                                            LastDocCity = Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][4].ToString());
                                            LastDocID = Convert.ToInt64(distanceforExpense.Tables[0].Rows[0][5].ToString());
                                            //  startactid = Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][3].ToString());

                                            if ((Previous_Latitude.ToString() == "0" || Previous_Latitude.ToString() == "0") &&
                                               (Previous_Longitude.ToString() == "0" || Previous_Longitude.ToString() == "0"))
                                            {
                                                distanceZero = "Previous Location does not exist";
                                            }
                                            else
                                            {
                                                distanceZero = "";
                                            }

                                            ////GeoCoordinate pin1 = new GeoCoordinate(Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][1].ToString()), Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][2].ToString()));
                                            ////GeoCoordinate pin2 = new GeoCoordinate(Convert.ToDouble(callExecutionDataObject.latitude.ToString()), Convert.ToDouble(callExecutionDataObject.longitude.ToString()));
                                            ////double distanceBetween = pin1.GetDistanceTo(pin2);
                                        }
                                        else if (distanceforExpense.Tables[0].Rows[0][0].ToString() == "FIRST CALL")
                                        {
                                            distanceZero = "FIRST CALL";
                                        }
                                        else
                                        {

                                        }
                                        #endregion
                                    }
                                }

                                #region  Expense Data Deserialization
                                if (callExecutionDataObjectnew.ExpenseDataJson != "[]")
                                {
                                    var ExpenseData = JsonConvert.DeserializeObject<ExpenseDataJsonObject[]>(callExecutionDataObjectnew.ExpenseDataJson);
                                    try
                                    {
                                        for (int k = 0; k < ExpenseData.Length; k++)
                                        {
                                            var ExpenseDetailData = JsonConvert.DeserializeObject<ExpenseDetailDataJsonObject[]>(ExpenseData[k].expenseData);
                                            for (int l = 0; l < ExpenseDetailData.Length; l++)
                                            {
                                                _nvCollection.Clear();
                                                _nvCollection.Add("@EmployeeID-int", callExecutionDataObjectnew.employeeId.ToString());
                                                _nvCollection.Add("@ActivityId-int", ExpenseDetailData[l].ActivityTypeID.ToString());
                                                _nvCollection.Add("@Month-int", result.Month.ToString());
                                                _nvCollection.Add("@Year-int", result.Year.ToString());
                                                _nvCollection.Add("@Day-int", result.Day.ToString());
                                                DataSet ChkOutBackAndNightStay = _dl.GetData("sp_chkOutBackAndNightStayExecuted", _nvCollection);
                                                if (ChkOutBackAndNightStay.Tables[0].Rows[0][0].ToString() == "Already Executed")
                                                {
                                                    //returnString = "Already Activity Executed";
                                                    //goto Error;
                                                    var getExpenid = _dl.GetData("sp_INSERTExpenseDetailWithCall", new NameValueCollection { 
                                                        { "@salesCallId-int", salesCallsId.ToString() }, 
                                                        { "@expenseId-int", "NULL" }, 
                                                        { "@ExpenseValue-int", "NULL" }, 
                                                        { "@CallDitanceForMobile-varchar(250)",(callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString() }, 
                                                        { "@CallDitanceForportal-varchar(250)", GetCallDitanceForMobile.ToString() }, 
                                                        { "@EmployeeId-Bigint", callExecutionDataObjectnew.employeeId.ToString() }, 
                                                        { "@doctorId-int", doctorId.ToString() },
                                                        { "@PreviousSalescall-Bigint", Previous_salescallid.ToString() }, 
                                                        { "@PreviousLongitude-Bigint", Previous_Longitude.ToString()}, 
                                                        { "@PreviousLatitude-Bigint", Previous_Latitude.ToString()},
                                                        { "@Systemvariable-Bigint", distanceZero.ToString()}, 
                                                        { "@LastDocCity-Bigint", LastDocCity.ToString()},                                                        
                                                        { "@startactid-Bigint", Flag.ToString()},
                                                        { "@Date-Bigint", result.ToString()},
                                                        { "@LastDocID-Bigint", LastDocID.ToString()},
                                                        { "@mobexectime-datetime", executedDateTime.ToString()},                                                          
                                                    });

                                                    ForExpenseString = (ForExpenseString == "" ? getExpenid.Tables[0].Rows[0][0].ToString() : ForExpenseString);
                                                    Constants.ImagesSuccesLog("Date:-" + System.DateTime.Now.ToString() + "--" + "IMsert In sp_INSERTExpenseDetailWithCall:- " + " SalesCallID : " + salesCallsId.ToString() + " CallDitanceForMobile: " + ((callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString()) + " CallDitanceForportal: " + GetCallDitanceForMobile.ToString() + " EmployeeId: " + callExecutionDataObjectnew.employeeId.ToString() + " doctorId: " + doctorId.ToString());
                                                }
                                                else
                                                {
                                                    var getExpenid = _dl.GetData("sp_INSERTExpenseDetailWithCall", new NameValueCollection { 
                                                        { "@salesCallId-int", salesCallsId.ToString() }, 
                                                        { "@expenseId-int", (ForExpenseString =="")? ExpenseDetailData[l].ActivityTypeID.ToString():"NULL" }, 
                                                        { "@ExpenseValue-int", ExpenseDetailData[l].Expense.ToString() }, 
                                                        { "@CallDitanceForMobile-varchar(250)", (callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString()  }, 
                                                        { "@CallDitanceForportal-varchar(250)", GetCallDitanceForMobile.ToString() }, 
                                                        { "@EmployeeId-Bigint", callExecutionDataObjectnew.employeeId.ToString() }, 
                                                        { "@doctorId-int", doctorId.ToString() },
                                                        { "@PreviousSalescall-Bigint", Previous_salescallid.ToString() }, 
                                                        { "@PreviousLongitude-Bigint", Previous_Longitude.ToString()}, 
                                                        { "@PreviousLatitude-Bigint", Previous_Latitude.ToString()}, 
                                                        { "@Systemvariable-Bigint", distanceZero.ToString()}, 
                                                        { "@LastDocCity-Bigint", LastDocCity.ToString()},                                                        
                                                        { "@startactid-Bigint", Flag.ToString()},
                                                        { "@Date-Bigint", result.ToString()},
                                                        { "@LastDocID-Bigint", LastDocID.ToString()},
                                                        { "@mobexectime-datetime", executedDateTime.ToString()},
                                                    });
                                                    ForExpenseString = (ForExpenseString == "" ? getExpenid.Tables[0].Rows[0][0].ToString() : ForExpenseString);
                                                    Constants.ImagesSuccesLog("Date:-" + System.DateTime.Now.ToString() + "--" + "Insert In sp_INSERTExpenseDetailWithCall:- " + " SalesCallID : " + salesCallsId.ToString() + " expenseId: " + ExpenseDetailData[l].ActivityTypeID.ToString() + " CallDitanceForMobile: " + ((callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString()) + " CallDitanceForportal: " + GetCallDitanceForMobile.ToString() + " EmployeeId: " + callExecutionDataObjectnew.employeeId.ToString() + " doctorId: " + doctorId.ToString());
                                                }
                                            }
                                        }
                                    }
                                    catch (Exception)
                                    {

                                    }
                                }
                                else if (((callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile) != "0.0" || ((callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile) != "0")
                                {
                                    var getExpenid = _dl.GetData("sp_INSERTExpenseDetailWithCall", new NameValueCollection { 
                                        { "@salesCallId-int", salesCallsId.ToString() }, 
                                        { "@expenseId-int", "NULL" }, 
                                        { "@ExpenseValue-int", "NULL" }, 
                                        { "@CallDitanceForMobile-varchar(250)", (callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString() }, 
                                        { "@CallDitanceForportal-varchar(250)", GetCallDitanceForMobile.ToString() }, 
                                        { "@EmployeeId-Bigint", callExecutionDataObjectnew.employeeId.ToString() }, 
                                        { "@doctorId-int", doctorId.ToString() },
                                        { "@PreviousSalescall-Bigint", Previous_salescallid.ToString() }, 
                                        { "@PreviousLongitude-Bigint", Previous_Longitude.ToString()}, 
                                        { "@PreviousLatitude-Bigint", Previous_Latitude.ToString()},
                                        { "@Systemvariable-Bigint", distanceZero.ToString()}, 
                                        { "@LastDocCity-Bigint", LastDocCity.ToString()},
                                        { "@Date-Bigint", result.ToString()},
                                        { "@startactid-Bigint", Flag.ToString()},
                                        { "@LastDocID-Bigint", LastDocID.ToString()},
                                        { "@mobexectime-datetime", executedDateTime.ToString()},
                                    });
                                    ForExpenseString = (ForExpenseString == "" ? getExpenid.Tables[0].Rows[0][0].ToString() : ForExpenseString);
                                    Constants.ImagesSuccesLog("Date:-" + System.DateTime.Now.ToString() + "--" + "IMsert In sp_INSERTExpenseDetailWithCall:- " + " SalesCallID : " + salesCallsId.ToString() + " CallDitanceForMobile: " + ((callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString()) + " CallDitanceForportal: " + GetCallDitanceForMobile.ToString() + " EmployeeId: " + callExecutionDataObjectnew.employeeId.ToString() + " doctorId: " + doctorId.ToString());
                                }
                                #endregion

                                #region Image Files Data Deserialization
                                try
                                {
                                    if (callExecutionDataObjectnew.ExpenseDataJson != "[]")
                                    {
                                        var ExpenseData = JsonConvert.DeserializeObject<ExpenseDataJsonObject[]>(callExecutionDataObjectnew.ExpenseDataJson);
                                        try
                                        {
                                            for (int k = 0; k < ExpenseData.Length; k++)
                                            {
                                                expensedata[] ExpenseDetailData = JsonConvert.DeserializeObject<expensedata[]>(ExpenseData[k].expenseData);
                                                foreach (expensedata expenseData in ExpenseDetailData)
                                                {
                                                    fileNameObject[] resultfileNameJson = js.Deserialize<fileNameObject[]>(expenseData.File);

                                                    for (int j = 0; j < resultfileNameJson.Length; j++)
                                                    {
                                                        var resultresultfileNameObject = resultfileNameJson[j];
                                                        if (resultresultfileNameObject.fileName.ToString() != "+")
                                                        {
                                                            _nvCollection.Clear();
                                                            _nvCollection.Add("@ImagePath-varchar(500)", ExpenseExecutionImagesPath + "/" + resultresultfileNameObject.fileName);
                                                            _nvCollection.Add("@isProfile-varchar(200)", "EXPENSE");
                                                            var getsync = _dl.GetData("sp_getsyncimage", _nvCollection);
                                                            string imagePath = ExpenseExecutionImagesPath + "/" + resultresultfileNameObject.fileName;
                                                            Constants.ImagesSuccesLog("Image initial table live count: " + getsync.Tables[0].Rows.Count + " Image Path : " + imagePath);
                                                            if (getsync != null)
                                                            {
                                                                if (getsync.Tables[0].Rows.Count > 0)
                                                                {
                                                                    _nvCollection.Clear();
                                                                    _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                                                    _nvCollection.Add("@ImagePath-varchar(500)", imagePath);
                                                                    _nvCollection.Add("@Activityid-varchar(500)", expenseData.ActivityTypeID.ToString());
                                                                    _nvCollection.Add("@system-varchar(500)", "");
                                                                    _nvCollection.Add("@isAvailable-bit", "1");
                                                                    var ch = _dl.GetData("sp_InsertCallExecutionImages", _nvCollection);

                                                                    Constants.ImagesSuccesLog("Image success table live count: " + getsync.Tables[0].Rows.Count + " isAvailable:1 & Image Path : " + imagePath);
                                                                }
                                                                else
                                                                {
                                                                    _nvCollection.Clear();
                                                                    _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                                                    _nvCollection.Add("@ImagePath-varchar(500)", imagePath);
                                                                    _nvCollection.Add("@Activityid-varchar(500)", expenseData.ActivityTypeID.ToString());
                                                                    _nvCollection.Add("@system-varchar(500)", "");
                                                                    _nvCollection.Add("@isAvailable-bit", "0");
                                                                    var callimage = _dl.GetData("sp_InsertCallExecutionImages", _nvCollection);

                                                                    Constants.ImagesSuccesLog("Image  table live count : " + getsync.Tables[0].Rows.Count + " isAvailable:0 & Image Path : " + imagePath);
                                                                }
                                                            }
                                                            else
                                                            {
                                                                _nvCollection.Clear();
                                                                _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                                                _nvCollection.Add("@ImagePath-varchar(500)", imagePath);
                                                                _nvCollection.Add("@Activityid-varchar(500)", expenseData.ActivityTypeID.ToString());
                                                                _nvCollection.Add("@system-varchar(500)", "");
                                                                _nvCollection.Add("@isAvailable-bit", "0");
                                                                var callimage = _dl.GetData("sp_InsertCallExecutionImages", _nvCollection);

                                                                Constants.ImagesSuccesLog("Condition Else Image  table live count : " + getsync.Tables[0].Rows.Count + " isAvailable:0 & Image Path : " + imagePath);
                                                            }

                                                            _nvCollection.Clear();
                                                            _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                                            _nvCollection.Add("@ImagePath-varchar(500)", imagePath);
                                                            _nvCollection.Add("@Activityid-varchar(500)", expenseData.ActivityTypeID.ToString());
                                                            _nvCollection.Add("@system-varchar(500)", "");
                                                            _nvCollection.Add("@isAvailable-bit", "0");
                                                            var finalcouse = _dl.GetData("sp_InsertCallExecutionImagesFinal", _nvCollection);
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        catch (Exception)
                                        {

                                        }
                                    }
                                }
                                catch (Exception ex)
                                {

                                }
                                #endregion

                                #region EdetailingJson Data Deserialization
                                try
                                {
                                    var resultEdetailingJson = JsonConvert.DeserializeObject<EdetailingObject[]>(callExecutionDataObjectnew.EdetailingJson);
                                    for (int j = 0; j < resultEdetailingJson.Length; j++)
                                    {
                                        var resultEdetailingObject = resultEdetailingJson[j];
                                        _nvCollection.Clear();
                                        _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                        _nvCollection.Add("@PDFId-int", resultEdetailingObject.pdfid);
                                        _nvCollection.Add("@PageNumId-int", resultEdetailingObject.pagenumber);
                                        _nvCollection.Add("@TimeDuration-varchar(50)", resultEdetailingObject.timeduration);
                                        _nvCollection.Add("@Type-int", "1"); //Type ID of PDF
                                        var ch = _dl.GetData("sp_InsertPDFCallMonitor", _nvCollection);
                                    }
                                }
                                catch (Exception ex)
                                {

                                }
                                #endregion

                                #region VideoEdetailingJson Data Deserialization

                                try
                                {
                                    var resultVideoJson = JsonConvert.DeserializeObject<VideoObject[]>(callExecutionDataObjectnew.videosDetailingJson);
                                    if (resultVideoJson != null)
                                    {
                                        for (int j = 0; j < resultVideoJson.Length; j++)
                                        {
                                            var resultVideoObject = resultVideoJson[j];
                                            _nvCollection.Clear();
                                            _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                            _nvCollection.Add("@PDFId-int", resultVideoObject.videoid);
                                            _nvCollection.Add("@PageNumId-int", resultVideoObject.videoduration);
                                            _nvCollection.Add("@TimeDuration-varchar(50)", resultVideoObject.timeduration);
                                            _nvCollection.Add("@Type-int", "2"); //Type ID of Video 
                                            var ch = _dl.GetData("sp_InsertPDFCallMonitor", _nvCollection);
                                        }
                                    }
                                }
                                catch (Exception ex)
                                {
                                    //    Constants.CallErrorLog("Error on Video Detailing Insertion: " + ex.Message);

                                }
                                #endregion

                                #region SurveyJson Data Deserialization

                                var SurveyData = JsonConvert.DeserializeObject<SurveyMainUploadDataObject[]>(callExecutionDataObjectnew.surveyFormJson);
                                for (int k = 0; k < SurveyData.Length; k++)
                                {
                                    SurveyMainUploadDataObject var_surveymainupload = SurveyData[i];
                                    string Sdate = "";
                                    string SuerveyId = "";

                                    Sdate = var_surveymainupload.SurveyDateTime;
                                    if (!DateTime.TryParse(Sdate, out result))
                                    {
                                        returnString = "Survey DateTime Format Is invalid";
                                    }

                                    var getAllQuestions = JsonConvert.DeserializeObject<List<SurveyDataUploadDataObject>>(var_surveymainupload.QuestionObject);

                                    var getsurveyid = _dl.GetData("sp_InserSurveyMain", new NameValueCollection { { "@FormId-int", var_surveymainupload.formid.ToString() }, { "@EmpId-INT", var_surveymainupload.EmpId.ToString() }, { "@CustId-int", var_surveymainupload.CustId.ToString() }, { "@SalescallId-bigint", salesCallsId.ToString() }, { "@SurveyName-varchar(100)", var_surveymainupload.SurveyName }, { "@Description-varchar(250)", var_surveymainupload.Description }, { "@SurveyDateTime-DateTime", Sdate.ToString() } });
                                    if (getsurveyid.Tables[0].Rows.Count > 0)
                                    {
                                        SuerveyId = getsurveyid.Tables[0].Rows[0][0].ToString();
                                    }

                                    for (int j = 0; j < getAllQuestions.Count; j++)
                                    {
                                        var data = getAllQuestions[j];

                                        var getsurveycount = _dl.GetData("sp_insertSurveyData", new NameValueCollection { { "@SurveyId-int", SuerveyId }, { "@QuestionId-INT", data.QuestionId }, { "@AnswerId-int", data.AnswerId }, { "@Other-varchar(250)", data.Other } });

                                    }



                                }
                                #endregion

                                returnString = "CallSaved";
                                goto DoneExecution;
                            }
                        }
                    }
                    #endregion
                    //}
                    //else
                    //{
                    //    #region CheckLeave
                    //    DataSet set0 = _dl.GetData("sp_check_ZSM_MIO_leave", new NameValueCollection { { "@Startdate-date", callExecutionDataObjectnew.date }, { "@Enddate-date", callExecutionDataObjectnew.date }, { "@employeeid-INT", callExecutionDataObjectnew.employeeId } });
                    //    if (set0.Tables[0].Rows.Count > 0)
                    //    {
                    //        returnString = set0.Tables[0].Rows[0][0].ToString() == "Available" ? "Meetingandleave" : "";
                    //        if (returnString == "Meetingandleave")
                    //        {
                    //            goto Error;
                    //        }
                    //        else
                    //        {
                    //            date = callExecutionDataObjectnew.date + " " + callExecutionDataObjectnew.startTime;
                    //            DateTime result;
                    //            if (!DateTime.TryParse(date, out result))
                    //            {
                    //                returnString = "DateTime Format Is invalid";
                    //                goto Error;
                    //            }
                    //            DateTime executedDateTime = DateTime.ParseExact(callExecutionDataObjectnew.executionDateTime, "dd/MM/yyyy HH:mm:ss", CultureInfo.InvariantCulture);

                    //            string rectype = "S";
                    //            month = result.Month;
                    //            year = result.Year;
                    //            var smsmonth = Convert.ToInt32(result.Month);
                    //            var smsyear = Convert.ToInt32(result.Year);

                    //            var getatt = _dl.GetData("sp_CheckAttLeave_New", new NameValueCollection { { "@empid-int", callExecutionDataObjectnew.employeeId.ToString() }, { "@MDateTime-datetime", date.ToString() } });
                    //            if (getatt.Tables[0].Rows[0][0].ToString() == "alreadyLeave")
                    //            {
                    //                returnString = "leaveMarked";
                    //                goto Error;
                    //            }
                    //            else if (getatt.Tables[0].Rows[0][0].ToString() == "alreadySPM")
                    //            {
                    //                returnString = "SPMMarked";
                    //                goto Error;
                    //            }
                    //            else
                    //            {
                    //                DataSet CheckCalls = _dl.GetData("Sp_CheckNoOfCalls", new NameValueCollection { 
                    //                { "@VisitDateTime-dateTime", result.ToString() },
                    //                { "@Employeeid-Bigint", callExecutionDataObjectnew.employeeId }
                    //            });

                    //                if (CheckCalls.Tables[0] != null)
                    //                {
                    //                    CallsNo = string.IsNullOrEmpty(Convert.ToString(CheckCalls.Tables[0].Rows[0]["CallCount"])) ? 0 : Convert.ToInt32(CheckCalls.Tables[0].Rows[0]["CallCount"]) + 1;

                    //                    if (CallsNo == Convert.ToInt32(callExecutionDataObjectnew.Callno))
                    //                    {
                    //                        #region preedays work
                    //                        if ((callExecutionDataObjectnew.isLive == "1" || callExecutionDataObjectnew.isLive == "0") && Convert.ToDateTime(executedDateTime.ToString("MM/dd/yyyy")) == Convert.ToDateTime(System.DateTime.Now.ToString("MM/dd/yyyy")))
                    //                        {
                    //                            string dt_temp = "";
                    //                            string pree_day = "0";
                    //                            int aloowsDays = 24;

                    //                            dt_temp = Convert.ToString(result).ToString();

                    //                            _nvCollection.Clear();
                    //                            _nvCollection.Add("@EmployeeId-bigint", callExecutionDataObjectnew.employeeId.ToString());

                    //                            DataSet ds_p = _dl.GetData("sp_SelectEmployeePree_days_withEmpID", _nvCollection);
                    //                            if (ds_p != null)
                    //                            {
                    //                                if (ds_p.Tables[0].Rows.Count > 0)
                    //                                {
                    //                                    pree_day = ds_p.Tables[0].Rows[0]["pree_days"].ToString();

                    //                                    if (pree_day == "")
                    //                                    {
                    //                                        pree_day = "0";
                    //                                    }
                    //                                    else if (ds_p.Tables[0].Rows[0]["pree_days"] == null)
                    //                                    {
                    //                                        pree_day = "0";
                    //                                    }

                    //                                }
                    //                            }

                    //                            //if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) <= Convert.ToDateTime(System.DateTime.Now.ToString("MM/dd/yyyy")))
                    //                            //{
                    //                            //    if (DATEDIFFForHours("Hours", Convert.ToDateTime(dt_temp), Convert.ToDateTime(System.DateTime.Now)) > 24)
                    //                            //    {
                    //                            //        if (DATEDIFFForHours("Hours", Convert.ToDateTime(dt_temp), Convert.ToDateTime(System.DateTime.Now)) > ((Convert.ToInt32(pree_day) * aloowsDays) + 0))
                    //                            //        {
                    //                            //            returnString = "PreeDays";
                    //                            //            goto Error;
                    //                            //        }
                    //                            //    }
                    //                            //}
                    //                            if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) <= Convert.ToDateTime(System.DateTime.Now.ToString("MM/dd/yyyy")))
                    //                            {
                    //                                if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) != Convert.ToDateTime(executedDateTime.ToString("MM/dd/yyyy")))
                    //                                {
                    //                                    if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) <= Convert.ToDateTime(executedDateTime.ToString("MM/dd/yyyy")))
                    //                                    {
                    //                                        if (DATEDIFF("Days", Convert.ToDateTime(dt_temp), Convert.ToDateTime(executedDateTime)) > Convert.ToInt32(pree_day))
                    //                                        {
                    //                                            returnString = "PreeDays";
                    //                                            goto Error;
                    //                                        }
                    //                                    }
                    //                                    else
                    //                                    {
                    //                                        returnString = "Not Allowed";
                    //                                        goto Error;
                    //                                    }
                    //                                }
                    //                            }
                    //                            else
                    //                            {
                    //                                returnString = "Not Allowed";
                    //                                goto Error;
                    //                            }
                    //                        }
                    //                        #endregion

                    //                        #region Employee Information
                    //                        var dsEmployeeMemberShipInfo = _dl.GetData("sp_EmployeeMembershipSelectByEmployee",
                    //                            new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
                    //                        if (dsEmployeeMemberShipInfo != null)
                    //                        {
                    //                            var dsEmployeeHierarchy = _dl.GetData("sp_EmplyeeHierarchySelect",
                    //                                new NameValueCollection { { "@SystemUserID-BIGINT", dsEmployeeMemberShipInfo.Tables[0].Rows[0]["SystemUserID"].ToString() } });
                    //                            if (dsEmployeeHierarchy != null)
                    //                            {
                    //                                level1 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId1"].ToString();
                    //                                level2 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId2"].ToString();
                    //                                level3 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId3"].ToString();
                    //                                level4 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId4"].ToString();
                    //                                level5 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId5"].ToString();
                    //                                level6 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId6"].ToString();
                    //                            }
                    //                        }
                    //                        else
                    //                        {
                    //                            returnString = "Employee Not Found";
                    //                            goto Error;
                    //                        }
                    //                        #endregion

                    //                        var doctorCodeArray = callExecutionDataObjectnew.docDetail.Split(',');
                    //                        for (int k = 0; k < doctorCodeArray.Length; k++)
                    //                        {

                    //                            #region Get Doctor Details
                    //                            var doctorCode = doctorCodeArray[k];
                    //                            //var dsGetMrDoctorDetails = _dl.GetData("sp_MRDoctorSelectByCode", new NameValueCollection { { "@EmployeeId-bigint", employeeId }, { "@Code-nvarchar-20", doctorCode } });+
                    //                            var dsGetMrDoctorDetails = _dl.GetData("sp_MRDoctorSelectByCode_new", new NameValueCollection { { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@Code-nvarchar-20", doctorCode }, { "@month-int", month.ToString() }, { "@year-int", year.ToString() } });
                    //                            if (dsGetMrDoctorDetails != null)
                    //                            {
                    //                                if (dsGetMrDoctorDetails.Tables[0].Rows.Count > 0)
                    //                                {
                    //                                    doctorId = dsGetMrDoctorDetails.Tables[0].Rows[0]["DoctorId"].ToString();
                    //                                    #region InRange /OutRange
                    //                                    _nvCollection.Clear();
                    //                                    _nvCollection.Add("@DoctorID-int", doctorId.ToString());
                    //                                    DataSet dslastlatlng = _dl.GetData("sp_Doctorlatlng", _nvCollection);
                    //                                    string getrange = ConfigurationManager.AppSettings["Range"].ToString();
                    //                                    distanceInMeters = new GeoCoordinate(Convert.ToDouble(dslastlatlng.Tables[0].Rows[0][0].ToString()), Convert.ToDouble(dslastlatlng.Tables[0].Rows[0][1].ToString()))
                    //                                  .GetDistanceTo(new GeoCoordinate(Convert.ToDouble(callExecutionDataObjectnew.latitude.ToString()), Convert.ToDouble(callExecutionDataObjectnew.longitude.ToString())));
                    //                                    if (distanceInMeters <= Convert.ToDouble(getrange))
                    //                                    {
                    //                                        range = "InRange";
                    //                                    }
                    //                                    else
                    //                                    {
                    //                                        range = "OutRange";
                    //                                        ForExpenseString = "OutrangeWithoutExpense";
                    //                                        if (GeoFencingForExecution == "1")
                    //                                        {
                    //                                            returnString = range;
                    //                                            goto Error;
                    //                                        }
                    //                                    }

                    //                                    #endregion
                    //                                    #region Get Class Of Doctor

                    //                                    //var doctorClassDetail = _dl.GetData("sp_ClassOfDoctorSelect",
                    //                                    //    new NameValueCollection { { "@DoctorId-bigint", doctorId } });
                    //                                    var doctorClassDetail = _dl.GetData("sp_ClassOfDoctorOfSPOSelect",
                    //                             new NameValueCollection { { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@DoctorId-bigint", doctorId }, { "@month-int", month.ToString() }, { "@year-int", year.ToString() } });
                    //                                    if (doctorClassDetail != null)
                    //                                        if (doctorClassDetail.Tables[0].Rows.Count > 0)
                    //                                        {
                    //                                            classId = doctorClassDetail.Tables[0].Rows[0]["ClassId"].ToString();
                    //                                        }
                    //                                        else
                    //                                        {
                    //                                            returnString = "Class Of Doctor Not Found";
                    //                                            if (callExecutionDataObjectnew.callType == "0") goto Error;
                    //                                        }

                    //                                    #endregion

                    //                                    #region Get Speciality Of Doctor

                    //                                    var doctorspecialitydetail = _dl.GetData("sp_doctorspecialityselectbydoctor",
                    //                                        new NameValueCollection { { "@doctorid-bigint", doctorId } });
                    //                                    if (doctorspecialitydetail != null)
                    //                                        if (doctorspecialitydetail.Tables[0].Rows.Count > 0)
                    //                                        {
                    //                                            specialityId = doctorspecialitydetail.Tables[0].Rows[0]["specialityid"].ToString();
                    //                                        }
                    //                                        else
                    //                                        {
                    //                                            returnString = "speciality of doctor not found";
                    //                                            if (callExecutionDataObjectnew.callType == "0") goto Error;
                    //                                        }

                    //                                    #endregion

                    //                                    #region Get Qualification Of Doctor

                    //                                    var doctorQualificationDetail = _dl.GetData("sp_QualificationsOfDoctorsSelectByDoctor",
                    //                                        new NameValueCollection { { "@DoctorId-BIGINT", doctorId } });
                    //                                    if (doctorQualificationDetail != null)
                    //                                        if (doctorQualificationDetail.Tables[0].Rows.Count > 0)
                    //                                        {
                    //                                            qulificationId = doctorQualificationDetail.Tables[0].Rows[0]["QulificationId"].ToString();
                    //                                        }
                    //                                        else
                    //                                        {
                    //                                            returnString = "Qualification Of Doctor Not Found";
                    //                                            if (callExecutionDataObjectnew.callType == "0") goto Error;
                    //                                        }

                    //                                    #endregion
                    //                                }
                    //                            }
                    //                            else
                    //                            {
                    //                                returnString = "Doctor Not Found in Doctor List Of MIO";
                    //                                if (callExecutionDataObjectnew.callType == "0") goto Error;
                    //                            }

                    //                            #endregion

                    //                            #region Get Visit Shift

                    //                            var hour = Convert.ToInt32(result.ToString("HH"));

                    //                            string vt;
                    //                            if (hour >= 0 && hour < 12)
                    //                            {
                    //                                vt = "1";
                    //                            }
                    //                            else if (hour < 17)
                    //                            {
                    //                                vt = "1";
                    //                            }
                    //                            else
                    //                            {
                    //                                vt = "2";
                    //                            }



                    //                            #endregion

                    //                            #region PreSalesCallInsert

                    //                            var getcountstand = _dl.GetData("getcountryStandardtime", new NameValueCollection { { "@employeeid-int", callExecutionDataObjectnew.employeeId } });
                    //                            var inTimeZone = TimeZoneInfo.FindSystemTimeZoneById(getcountstand.Tables[0].Rows[0][0].ToString());
                    //                            DateTime inTime = TimeZoneInfo.ConvertTime(DateTime.Now, TimeZoneInfo.Local, inTimeZone);
                    //                            DataSet set = _dl.GetData("sp_check_call_execute", new NameValueCollection { { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QualificationId-int,", qulificationId }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@IsPlanned-VARCHAR-50", callExecutionDataObjectnew.isPlanned == "No" ? "NULL" : callExecutionDataObjectnew.isPlanned }, { "@visitdate-datetime", result.ToString() }, });
                    //                            if (set.Tables[0].Rows.Count > 0)
                    //                            {
                    //                                returnString = "Already Executed";
                    //                                if (callExecutionDataObjectnew.callType == "0") goto Error;
                    //                            }
                    //                            else
                    //                            {
                    //                                if (callExecutionDataObjectnew.isPlanned == "No")
                    //                                {

                    //                                    DataSet set2 = _dl.GetData("sp_check_CallExecuteForUnplanned", new NameValueCollection { { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@visitdate-datetime", result.ToString() }, });
                    //                                    if (set2.Tables[0].Rows.Count > 0)
                    //                                    {
                    //                                        iSPlannedAsUnplanned = Convert.ToInt64(set2.Tables[0].Rows[0]["pk_CPI_CallPlannerMIOLevelID"].ToString());
                    //                                        var dsPreSalesCalls = _dl.GetData("sp_PreSalesCallsInsert2", new NameValueCollection { { "@VisitDateTime-datetime", result.ToString() }, { "@Level1LevelId-int,", level1 }, { "@Level2LevelId-int,", level2 }, { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QulificationId-int,", qulificationId }, { "@CreationDateTime-datetime", inTime.ToString() }, { "@CallTypeId-int", "1" }, { "@VisitShift-int,", vt }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@InboundId-bigint", "NULL" }, { "@DocCode-INT", doctorCode }, { "@IsPlanned-VARCHAR-50", callExecutionDataObjectnew.isPlanned == "No" ? iSPlannedAsUnplanned.ToString() : callExecutionDataObjectnew.isPlanned }, { "@ActivityID-INT", callExecutionDataObjectnew.activity }, { "@ReasonID-INT", callExecutionDataObjectnew.reason } });
                    //                                        if (dsPreSalesCalls != null)
                    //                                        {
                    //                                            if (dsPreSalesCalls.Tables[0].Rows.Count > 0)
                    //                                            {
                    //                                                if (dsPreSalesCalls.Tables[0].Rows[0][0].ToString() == "alreadyexecuted")
                    //                                                {
                    //                                                    returnString = "Already Executed";
                    //                                                    return returnString;
                    //                                                }
                    //                                                else
                    //                                                {
                    //                                                    salesCallsId = Convert.ToInt64(dsPreSalesCalls.Tables[0].Rows[0]["SalesCallId"].ToString());
                    //                                                }
                    //                                            }
                    //                                            else
                    //                                            {
                    //                                                returnString = "Error In Saving In PreSalesCalls";
                    //                                                if (callExecutionDataObjectnew.callType == "0") goto Error;
                    //                                            }
                    //                                        }
                    //                                        else
                    //                                        {
                    //                                            returnString = "Error In Saving In PreSalesCalls";
                    //                                            if (callExecutionDataObjectnew.callType == "0") goto Error;
                    //                                        }
                    //                                    }
                    //                                    else
                    //                                    {
                    //                                        var dsPreSalesCalls = _dl.GetData("sp_PreSalesCallsInsert2", new NameValueCollection { { "@VisitDateTime-datetime", result.ToString() }, { "@Level1LevelId-int,", level1 }, { "@Level2LevelId-int,", level2 }, { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QulificationId-int,", qulificationId }, { "@CreationDateTime-datetime", inTime.ToString() }, { "@CallTypeId-int", "1" }, { "@VisitShift-int,", vt }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@InboundId-bigint", "NULL" }, { "@DocCode-INT", doctorCode }, { "@IsPlanned-VARCHAR-50", callExecutionDataObjectnew.isPlanned == "No" ? "NULL" : callExecutionDataObjectnew.isPlanned }, { "@ActivityID-INT", callExecutionDataObjectnew.activity }, { "@ReasonID-INT", callExecutionDataObjectnew.reason } });
                    //                                        if (dsPreSalesCalls != null)
                    //                                        {
                    //                                            if (dsPreSalesCalls.Tables[0].Rows.Count > 0)
                    //                                            {
                    //                                                salesCallsId = Convert.ToInt64(dsPreSalesCalls.Tables[0].Rows[0]["SalesCallId"].ToString());
                    //                                            }
                    //                                            else
                    //                                            {
                    //                                                returnString = "Error In Saving In PreSalesCalls";
                    //                                                if (callExecutionDataObjectnew.callType == "0") goto Error;
                    //                                            }
                    //                                        }
                    //                                        else
                    //                                        {
                    //                                            returnString = "Error In Saving In PreSalesCalls";
                    //                                            if (callExecutionDataObjectnew.callType == "0") goto Error;
                    //                                        }
                    //                                    }
                    //                                }
                    //                                else
                    //                                {
                    //                                    var dsPreSalesCalls = _dl.GetData("sp_PreSalesCallsInsert2", new NameValueCollection { { "@VisitDateTime-datetime", result.ToString() }, { "@Level1LevelId-int,", level1 }, { "@Level2LevelId-int,", level2 }, { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QulificationId-int,", qulificationId }, { "@CreationDateTime-datetime", inTime.ToString() }, { "@CallTypeId-int", "1" }, { "@VisitShift-int,", vt }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@InboundId-bigint", "NULL" }, { "@DocCode-INT", doctorCode }, { "@IsPlanned-VARCHAR-50", callExecutionDataObjectnew.isPlanned == "No" ? "NULL" : callExecutionDataObjectnew.isPlanned }, { "@ActivityID-INT", callExecutionDataObjectnew.activity }, { "@ReasonID-INT", callExecutionDataObjectnew.reason } });
                    //                                    if (dsPreSalesCalls != null)
                    //                                    {
                    //                                        if (dsPreSalesCalls.Tables[0].Rows.Count > 0)
                    //                                        {
                    //                                            salesCallsId = Convert.ToInt64(dsPreSalesCalls.Tables[0].Rows[0]["SalesCallId"].ToString());
                    //                                        }
                    //                                        else
                    //                                        {
                    //                                            returnString = "Error In Saving In PreSalesCalls";
                    //                                            if (callExecutionDataObjectnew.callType == "0") goto Error;
                    //                                        }
                    //                                    }
                    //                                    else
                    //                                    {
                    //                                        returnString = "Error In Saving In PreSalesCalls";
                    //                                        if (callExecutionDataObjectnew.callType == "0") goto Error;
                    //                                    }
                    //                                }
                    //                            }
                    //                            #endregion

                    //                            if (salesCallsId != 0)
                    //                            {
                    //                                #region Mobile Exec Time
                    //                                if (callExecutionDataObjectnew.executionDateTime != null)
                    //                                {
                    //                                    _nvCollection.Clear();
                    //                                    _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                    //                                    _nvCollection.Add("@mobexectime-datetime", executedDateTime.ToString());

                    //                                    var mac = _dl.GetData("sp_Insert_MobExecutionTime", _nvCollection);
                    //                                }
                    //                                #endregion

                    //                                #region CallDoctors


                    //                                // ReSharper disable once UnusedVariable
                    //                                if (_dataContext != null)
                    //                                {
                    //                                    var insertCallDoctors = _dataContext.sp_CallDoctorsInsert(salesCallsId, Convert.ToInt64(doctorId)).ToList();
                    //                                }

                    //                                #endregion

                    //                                #region CallVisitors
                    //                                if (!Convert.ToBoolean(callExecutionDataObjectnew.coaching))
                    //                                {
                    //                                    // ReSharper disable once UnusedVariable
                    //                                    var dsIsCoaching = _dl.InserData("sp_InsertCallCoaching", new NameValueCollection {
                    //                                {"@SalesCallId-INT", salesCallsId.ToString()},
                    //                                {"@IsCoaching-VARCHAR-50", "0"}
                    //                        });
                    //                                }
                    //                                else
                    //                                {
                    //                                    // ReSharper disable once UnusedVariable
                    //                                    var dsIsCoaching = _dl.InserData("sp_InsertCallCoaching", new NameValueCollection {
                    //                            {"@SalesCallId-INT", salesCallsId.ToString()},
                    //                            {"@IsCoaching-VARCHAR-50", "1"}
                    //                        });
                    //                                }
                    //                                long jvflma = 0;
                    //                                long jvslma = 0;
                    //                                long jvftma = callExecutionDataObjectnew.jvftm == "true" ? 1 : 0;
                    //                                //NSM
                    //                                long jvbuha = 0;
                    //                                //GM
                    //                                long jvgma = 0;
                    //                                long jvcooa = callExecutionDataObjectnew.jvcoo == "true" ? 1 : 0;
                    //                                long jvcda = callExecutionDataObjectnew.jvcd == "true" ? 1 : 0;
                    //                                long jvpma = callExecutionDataObjectnew.jvpm == "true" ? 1 : 0;
                    //                                if (Convert.ToBoolean(callExecutionDataObjectnew.jvflm))
                    //                                {
                    //                                    var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
                    //                                    if (dsFlm != null)
                    //                                    {
                    //                                        if (dsFlm.Tables[0].Rows.Count > 0)
                    //                                        {
                    //                                            jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
                    //                                        }
                    //                                    }
                    //                                }
                    //                                if (Convert.ToBoolean(callExecutionDataObjectnew.jvslm))
                    //                                {
                    //                                    var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
                    //                                    if (dsFlm != null)
                    //                                    {
                    //                                        if (dsFlm.Tables[0].Rows.Count > 0)
                    //                                        {
                    //                                            jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
                    //                                            var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(jvflma) } });
                    //                                            if (dsSlm != null)
                    //                                            {
                    //                                                if (dsSlm.Tables[0].Rows.Count > 0)
                    //                                                {
                    //                                                    jvslma = Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString());
                    //                                                }
                    //                                            }
                    //                                        }
                    //                                    }
                    //                                }
                    //                                //Check if Joint Visit is with NSM
                    //                                if (Convert.ToBoolean(callExecutionDataObjectnew.jvbuh))
                    //                                {
                    //                                    var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
                    //                                    if (dsFlm != null)
                    //                                    {
                    //                                        if (dsFlm.Tables[0].Rows.Count > 0)
                    //                                        {
                    //                                            jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
                    //                                            //var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(jvflma) } });
                    //                                            var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });
                    //                                            if (dsSlm != null)
                    //                                            {
                    //                                                if (dsSlm.Tables[0].Rows.Count > 0)
                    //                                                {
                    //                                                    jvslma = Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString());
                    //                                                    var dsBuh = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });

                    //                                                    if (dsBuh != null)
                    //                                                    {
                    //                                                        if (dsBuh.Tables[0].Rows.Count > 0)
                    //                                                        {
                    //                                                            jvbuha = Convert.ToInt64(dsBuh.Tables[0].Rows[0]["ManagerId"].ToString());
                    //                                                        }
                    //                                                    }
                    //                                                }
                    //                                            }
                    //                                        }
                    //                                    }
                    //                                }
                    //                                //Check if Joint Visit is with GM
                    //                                if (Convert.ToBoolean(callExecutionDataObjectnew.jvgm))
                    //                                {
                    //                                    var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
                    //                                    if (dsFlm != null)
                    //                                    {
                    //                                        if (dsFlm.Tables[0].Rows.Count > 0)
                    //                                        {
                    //                                            jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
                    //                                            //var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(jvflma) } });
                    //                                            var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });
                    //                                            if (dsSlm != null)
                    //                                            {
                    //                                                if (dsSlm.Tables[0].Rows.Count > 0)
                    //                                                {
                    //                                                    jvslma = Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString());
                    //                                                    var dsBuh = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });

                    //                                                    if (dsBuh != null)
                    //                                                    {
                    //                                                        if (dsBuh.Tables[0].Rows.Count > 0)
                    //                                                        {
                    //                                                            jvbuha = Convert.ToInt64(dsBuh.Tables[0].Rows[0]["ManagerId"].ToString());
                    //                                                            var dsGm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsBuh.Tables[0].Rows[0]["ManagerId"].ToString())) } });
                    //                                                            if (dsGm != null)
                    //                                                            {
                    //                                                                if (dsGm.Tables[0].Rows.Count > 0)
                    //                                                                {
                    //                                                                    jvgma = Convert.ToInt64((dsGm.Tables[0].Rows[0]["ManagerId"].ToString() == "" ? "1" : dsGm.Tables[0].Rows[0]["ManagerId"].ToString()));
                    //                                                                }
                    //                                                            }
                    //                                                        }
                    //                                                    }
                    //                                                }
                    //                                            }
                    //                                        }
                    //                                    }
                    //                                }
                    //                                jvflma = callExecutionDataObjectnew.jvflm == "true" ? jvflma : 0;
                    //                                jvslma = callExecutionDataObjectnew.jvslm == "true" ? jvslma : 0;
                    //                                jvbuha = callExecutionDataObjectnew.jvbuh == "true" ? jvbuha : 0;
                    //                                jvgma = callExecutionDataObjectnew.jvgm == "true" ? jvgma : 0;

                    //                                //if (Convert.ToBoolean(callExecutionDataObject.jvho1))
                    //                                //{
                    //                                //    jvHO1 = 1;
                    //                                //}
                    //                                //if (Convert.ToBoolean(callExecutionDataObject.jvho2))
                    //                                //{
                    //                                //    jvHO2 = 1;
                    //                                //}
                    //                                //// ReSharper disable once UnusedVariable
                    //                                long? nullable = null;
                    //                                if (_dataContext != null)
                    //                                {
                    //                                    /* var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew(salesCallsId, Convert.ToInt64(callExecutionDataObject.employeeId),
                    //                                         ((jvflma == 0) ? nullable : jvflma),
                    //                                         ((jvslma == 0) ? nullable : jvslma),
                    //                                         ((jvHO1 == 0) ? nullable : jvHO1),
                    //                                         ((jvHO2 == 0) ? nullable : jvHO2)).ToList();*/
                    //                                    var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew_withjv8(salesCallsId,
                    //                                        Convert.ToInt64(callExecutionDataObjectnew.employeeId),
                    //                                        (!(Convert.ToBoolean(callExecutionDataObjectnew.jvflm)) ? nullable : jvflma),
                    //                                        (!(Convert.ToBoolean(callExecutionDataObjectnew.jvslm)) ? nullable : jvslma),
                    //                                        (!(Convert.ToBoolean(callExecutionDataObjectnew.jvftm)) ? nullable : jvftma),
                    //                                        (!(Convert.ToBoolean(callExecutionDataObjectnew.jvbuh)) ? nullable : jvbuha),
                    //                                        //ye parameter sahih lgane hain filhal temporary lgaye hen 
                    //                                        (!(Convert.ToBoolean(callExecutionDataObjectnew.jvgm)) ? nullable : jvgma),
                    //                                        (!(Convert.ToBoolean(callExecutionDataObjectnew.jvcoo)) ? nullable : jvcooa),
                    //                                        (!(Convert.ToBoolean(callExecutionDataObjectnew.jvcd)) ? nullable : jvcda),
                    //                                        (!(Convert.ToBoolean(callExecutionDataObjectnew.jvpm)) ? nullable : jvpma)
                    //                                    ).ToList();

                    //                                    /*if (jvflma == 0 && jvslma == 0)
                    //                                    {
                    //                                        var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew(salesCallsId, Convert.ToInt64(callExecutionDataObject.employeeId), null, null, null, null).ToList();
                    //                                    }
                    //                                    else
                    //                                    {
                    //                                        var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew(salesCallsId, Convert.ToInt64(callExecutionDataObject.employeeId), jvflma, jvslma, 0, 0).ToList();
                    //                                    }*/

                    //                                }

                    //                                #endregion

                    //                                #region VisitFeedBack

                    //                                if (_dataContext != null)
                    //                                {
                    //                                    // ReSharper disable once UnusedVariable
                    //                                    var insertFeedBack = _dataContext.sp_VisitFeedBackInsert(salesCallsId, callExecutionDataObjectnew.callNotes).ToList();
                    //                                }

                    //                                #endregion

                    //                                #region CallProducts

                    //                                // ReSharper disable once NotAccessedVariable
                    //                                List<CallProduct> insertCallProduct;

                    //                                if (callExecutionDataObjectnew.product1 != "-1")
                    //                                {
                    //                                    if (_dataContext != null)
                    //                                    {
                    //                                        // ReSharper disable once RedundantAssignment
                    //                                        //insertCallProduct =
                    //                                        //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product1), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product1), 1).ToList();
                    //                                        insertCallProduct =
                    //                                            _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnew.product1), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnew.product1), 1).ToList();

                    //                                        if (callExecutionDataObjectnew.p1Notes != "" && insertCallProduct.Count > 0)
                    //                                        {
                    //                                            var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
                    //                                                new NameValueCollection { 
                    //                            { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() }, 
                    //                            { "@Comment-varchar(max),", callExecutionDataObjectnew.p1Notes} 
                    //                            });
                    //                                        }
                    //                                    }


                    //                                }


                    //                                if (callExecutionDataObjectnew.product2 != "-1")
                    //                                {
                    //                                    if (_dataContext != null)
                    //                                    {
                    //                                        // ReSharper disable once RedundantAssignment
                    //                                        //insertCallProduct =
                    //                                        //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product2), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product1), 2).ToList();
                    //                                        insertCallProduct =
                    //                                            _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnew.product2), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnew.product2), 2).ToList();

                    //                                        if (callExecutionDataObjectnew.p2Notes != "" && insertCallProduct.Count > 0)
                    //                                        {
                    //                                            var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
                    //                                                new NameValueCollection { 
                    //                            { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() }, 
                    //                            { "@Comment-varchar(max),", callExecutionDataObjectnew.p2Notes} 
                    //                            });
                    //                                        }

                    //                                    }
                    //                                }

                    //                                if (callExecutionDataObjectnew.product3 != "-1")
                    //                                {
                    //                                    if (_dataContext != null)
                    //                                    {
                    //                                        // ReSharper disable once RedundantAssignment
                    //                                        //insertCallProduct =
                    //                                        //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product3), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product3), 3).ToList();
                    //                                        insertCallProduct =
                    //                                            _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnew.product3), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnew.product3), 3).ToList();

                    //                                        if (callExecutionDataObjectnew.p3Notes != "" && insertCallProduct.Count > 0)
                    //                                        {
                    //                                            var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
                    //                                                new NameValueCollection { 
                    //                            { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() }, 
                    //                            { "@Comment-varchar(max),", callExecutionDataObjectnew.p3Notes} 
                    //                            });
                    //                                        }
                    //                                    }
                    //                                }

                    //                                if (callExecutionDataObjectnew.product4 != "-1")
                    //                                {
                    //                                    if (_dataContext != null)
                    //                                    {
                    //                                        // ReSharper disable once RedundantAssignment
                    //                                        //insertCallProduct =
                    //                                        //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product4), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product4), 4).ToList();
                    //                                        insertCallProduct =
                    //                                            _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnew.product4), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnew.product4), 4).ToList();

                    //                                        if (callExecutionDataObjectnew.p4Notes != "" && insertCallProduct.Count > 0)
                    //                                        {
                    //                                            var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
                    //                                                new NameValueCollection { 
                    //                            { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() }, 
                    //                            { "@Comment-varchar(max),", callExecutionDataObjectnew.p4Notes} 
                    //                            });
                    //                                        }
                    //                                    }

                    //                                }



                    //                                #endregion

                    //                                #region CallProductSamples

                    //                                if (callExecutionDataObjectnew.sample1 != "-1" && callExecutionDataObjectnew.sampleQty1 != "")
                    //                                {

                    //                                    // var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample1 } });

                    //                                    // int SampleProdID1 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());


                    //                                    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObjectnew.sample1 } });

                    //                                    int SampleProdID1 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
                    //                                    _nvCollection.Clear();
                    //                                    _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
                    //                                    _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample1.ToString());
                    //                                    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                    //                                    _nvCollection.Add("@month-int", smsmonth.ToString());
                    //                                    _nvCollection.Add("@year-int", smsyear.ToString());
                    //                                    var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
                    //                                    if (checkSample1Balance.Tables[0].Rows.Count > 0)
                    //                                    {
                    //                                        int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
                    //                                        int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
                    //                                        int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

                    //                                        if (balnc >= (qty + opening))
                    //                                        {

                    //                                        }
                    //                                        else if ((Convert.ToInt32(callExecutionDataObjectnew.sampleQty1) + balnc) > (qty + opening))
                    //                                        {

                    //                                        }
                    //                                        else
                    //                                        {
                    //                                            var newbalance = Convert.ToInt32(callExecutionDataObjectnew.sampleQty1) + balnc;
                    //                                            _nvCollection.Clear();
                    //                                            _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
                    //                                            _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample1.ToString());
                    //                                            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                    //                                            _nvCollection.Add("@Qty-int", newbalance.ToString());
                    //                                            _nvCollection.Add("@month-int", smsmonth.ToString());
                    //                                            _nvCollection.Add("@year-int", smsyear.ToString());
                    //                                            var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

                    //                                            _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID1, Convert.ToInt32(callExecutionDataObjectnew.sample1), Convert.ToInt32(callExecutionDataObjectnew.sampleQty1), 1).ToList();
                    //                                        }
                    //                                    }

                    //                                }

                    //                                if (callExecutionDataObjectnew.sample2 != "-1" && callExecutionDataObjectnew.sampleQty2 != "")
                    //                                {
                    //                                    // var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample2 } });

                    //                                    // int SampleProdID2 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

                    //                                    // _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID2, Convert.ToInt32(callExecutionDataObject.sample2), Convert.ToInt32(callExecutionDataObject.sampleQty2), 2).ToList();


                    //                                    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObjectnew.sample2 } });

                    //                                    int SampleProdID2 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
                    //                                    // int SampleProdID2 = Convert.ToInt32(sample2);
                    //                                    _nvCollection.Clear();
                    //                                    _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
                    //                                    _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample2.ToString());
                    //                                    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                    //                                    _nvCollection.Add("@month-int", smsmonth.ToString());
                    //                                    _nvCollection.Add("@year-int", smsyear.ToString());
                    //                                    var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
                    //                                    if (checkSample1Balance.Tables[0].Rows.Count > 0)
                    //                                    {
                    //                                        int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
                    //                                        int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
                    //                                        int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

                    //                                        if (balnc >= (qty + opening))
                    //                                        {

                    //                                        }
                    //                                        else if ((Convert.ToInt32(callExecutionDataObjectnew.sampleQty2) + balnc) > (qty + opening))
                    //                                        {

                    //                                        }
                    //                                        else
                    //                                        {
                    //                                            var newbalance = Convert.ToInt32(callExecutionDataObjectnew.sampleQty2) + balnc;
                    //                                            _nvCollection.Clear();
                    //                                            _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
                    //                                            _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample2.ToString());
                    //                                            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                    //                                            _nvCollection.Add("@Qty-int", newbalance.ToString());
                    //                                            _nvCollection.Add("@month-int", smsmonth.ToString());
                    //                                            _nvCollection.Add("@year-int", smsyear.ToString());
                    //                                            var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

                    //                                            _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID2, Convert.ToInt32(callExecutionDataObjectnew.sample2), Convert.ToInt32(callExecutionDataObjectnew.sampleQty2), 2).ToList();
                    //                                        }
                    //                                    }

                    //                                }

                    //                                if (callExecutionDataObjectnew.sample3 != "-1" && callExecutionDataObjectnew.sampleQty3 != "")
                    //                                {

                    //                                    // var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample3 } });

                    //                                    //   int SampleProdID3 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

                    //                                    //   _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID3, Convert.ToInt32(callExecutionDataObject.sample3), Convert.ToInt32(callExecutionDataObject.sampleQty3), 3).ToList();

                    //                                    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObjectnew.sample3 } });

                    //                                    int SampleProdID3 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
                    //                                    //  int SampleProdID3 = Convert.ToInt32(sample3);
                    //                                    _nvCollection.Clear();
                    //                                    _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
                    //                                    _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample3.ToString());
                    //                                    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                    //                                    _nvCollection.Add("@month-int", smsmonth.ToString());
                    //                                    _nvCollection.Add("@year-int", smsyear.ToString());
                    //                                    var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
                    //                                    if (checkSample1Balance.Tables[0].Rows.Count > 0)
                    //                                    {
                    //                                        int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
                    //                                        int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
                    //                                        int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

                    //                                        if (balnc >= (qty + opening))
                    //                                        {

                    //                                        }
                    //                                        else if ((Convert.ToInt32(callExecutionDataObjectnew.sampleQty3) + balnc) > (qty + opening))
                    //                                        {

                    //                                        }
                    //                                        else
                    //                                        {
                    //                                            var newbalance = Convert.ToInt32(callExecutionDataObjectnew.sampleQty3) + balnc;
                    //                                            _nvCollection.Clear();
                    //                                            _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
                    //                                            _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample3.ToString());
                    //                                            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                    //                                            _nvCollection.Add("@Qty-int", newbalance.ToString());
                    //                                            _nvCollection.Add("@month-int", smsmonth.ToString());
                    //                                            _nvCollection.Add("@year-int", smsyear.ToString());
                    //                                            var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

                    //                                            _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID3, Convert.ToInt32(callExecutionDataObjectnew.sample3), Convert.ToInt32(callExecutionDataObjectnew.sampleQty3), 3).ToList();
                    //                                        }
                    //                                    }

                    //                                }


                    //                                //if (callExecutionDataObject.sample4 != "-1" && callExecutionDataObject.sampleQty4 != "")
                    //                                //{

                    //                                //  //  var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample4 } });

                    //                                // //   int SampleProdID4 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

                    //                                //  //  _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID4, Convert.ToInt32(callExecutionDataObject.sample4), Convert.ToInt32(callExecutionDataObject.sampleQty4), 4).ToList();

                    //                                //    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample4 } });

                    //                                //    int SampleProdID4 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
                    //                                //    //int SampleProdID4 = Convert.ToInt32(sample4);
                    //                                //    _nvCollection.Clear();
                    //                                //    _nvCollection.Add("@mioid-int", callExecutionDataObject.employeeId.ToString());
                    //                                //    _nvCollection.Add("@sample_id-int", callExecutionDataObject.sample4.ToString());
                    //                                //    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                    //                                //    _nvCollection.Add("@month-int", smsmonth.ToString());
                    //                                //    _nvCollection.Add("@year-int", smsyear.ToString());
                    //                                //    var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
                    //                                //    if (checkSample1Balance.Tables[0].Rows.Count > 0)
                    //                                //    {
                    //                                //        int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
                    //                                //        int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
                    //                                //        int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

                    //                                //        if (balnc >= (qty + opening))
                    //                                //        {

                    //                                //        }
                    //                                //        else if ((Convert.ToInt32(callExecutionDataObject.sampleQty4) + balnc) > (qty + opening))
                    //                                //        {

                    //                                //        }
                    //                                //        else
                    //                                //        {
                    //                                //            var newbalance = Convert.ToInt32(callExecutionDataObject.sampleQty4) + balnc;
                    //                                //            _nvCollection.Clear();
                    //                                //            _nvCollection.Add("@mioid-int", callExecutionDataObject.employeeId.ToString());
                    //                                //            _nvCollection.Add("@sample_id-int", callExecutionDataObject.sample1.ToString());
                    //                                //            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                    //                                //            _nvCollection.Add("@Qty-int", newbalance.ToString());
                    //                                //            _nvCollection.Add("@month-int", smsmonth.ToString());
                    //                                //            _nvCollection.Add("@year-int", smsyear.ToString());
                    //                                //            var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

                    //                                //            _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID4, Convert.ToInt32(callExecutionDataObject.sample4), Convert.ToInt32(callExecutionDataObject.sampleQty4), 4).ToList();
                    //                                //        }
                    //                                //    }

                    //                                //}

                    //                                //if (callExecutionDataObject.sample5 != "-1" && callExecutionDataObject.sampleQty5 != "")
                    //                                //{

                    //                                //    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample5 } });

                    //                                //    int SampleProdID5 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

                    //                                //    _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID5, Convert.ToInt32(callExecutionDataObject.sample5), Convert.ToInt32(callExecutionDataObject.sampleQty5), 5).ToList();

                    //                                //}

                    //                                #endregion

                    //                                #region CallReminder

                    //                                if (callExecutionDataObjectnew.reminder1 != "-1")
                    //                                {
                    //                                    _dl.InserData("sp_CallReminderInsert", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@DetailReminder-int", callExecutionDataObjectnew.reminder1 }, { "@OrderBy-int", "1" } });
                    //                                }

                    //                                if (callExecutionDataObjectnew.reminder2 != "-1")
                    //                                {
                    //                                    _dl.InserData("sp_CallReminderInsert", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@DetailReminder-int", callExecutionDataObjectnew.reminder2 }, { "@OrderBy-int", "2" } });
                    //                                }

                    //                                if (callExecutionDataObjectnew.reminder3 != "-1")
                    //                                {
                    //                                    _dl.InserData("sp_CallReminderInsert", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@DetailReminder-int", callExecutionDataObjectnew.reminder3 }, { "@OrderBy-int", "3" } });
                    //                                }


                    //                                #endregion

                    //                                #region CallGifts

                    //                                // ReSharper disable once NotAccessedVariable
                    //                                List<CallGift> insertCallGift;

                    //                                if (callExecutionDataObjectnew.gift != "-1")
                    //                                {
                    //                                    // ReSharper disable once RedundantAssignment
                    //                                    insertCallGift = callExecutionDataObjectnew.giftQty != "" ? _dataContext.sp_CallGiftsInsert(salesCallsId, Convert.ToInt32(callExecutionDataObjectnew.gift), Convert.ToInt32(callExecutionDataObjectnew.giftQty), 1).ToList() : _dataContext.sp_CallGiftsInsert(salesCallsId, Convert.ToInt32(callExecutionDataObjectnew.gift), 0, 1).ToList();
                    //                                }


                    //                                #endregion

                    //                                #region MacAddress
                    //                                // macaddress = "123.213.163";
                    //                                if (callExecutionDataObjectnew.macaddress != null)
                    //                                {
                    //                                    _nvCollection.Clear();
                    //                                    _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                    //                                    _nvCollection.Add("@EmployesID-int", callExecutionDataObjectnew.employeeId.ToString());
                    //                                    _nvCollection.Add("@macaddress-varchar(50)", callExecutionDataObjectnew.macaddress.ToString());

                    //                                    var mac = _dl.GetData("sp_insert_macaddress", _nvCollection);
                    //                                }
                    //                                #endregion

                    //                                #region Location
                    //                                if (callExecutionDataObjectnew.longitude != null && callExecutionDataObjectnew.latitude != null)
                    //                                {
                    //                                    _nvCollection.Clear();
                    //                                    _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                    //                                    _nvCollection.Add("@long-varchar(100)", callExecutionDataObjectnew.longitude.ToString());
                    //                                    _nvCollection.Add("@lat-varchar(100)", callExecutionDataObjectnew.latitude.ToString());
                    //                                    var ch = _dl.GetData("sp_Insert_Location", _nvCollection);
                    //                                }

                    //                                #endregion

                    //                                #region Fake Users Calls Data

                    //                                try
                    //                                {
                    //                                    if (callExecutionDataObjectnew.flag != null)
                    //                                    {
                    //                                        _nvCollection.Clear();

                    //                                        _nvCollection.Clear();
                    //                                        _nvCollection.Add("@SalesCalID-int", salesCallsId.ToString());
                    //                                        _nvCollection.Add("@Flag-int", ((Convert.ToBoolean(callExecutionDataObjectnew.flag.ToString())) ? "1" : "0"));
                    //                                        _nvCollection.Add("@AppVersion-varchar(100)", callExecutionDataObjectnew.appversion);
                    //                                        _nvCollection.Add("@MacAddress-varchar(100)", callExecutionDataObjectnew.macaddress);
                    //                                        _nvCollection.Add("@ApplicationPackages-text", callExecutionDataObjectnew.applicationpackages);
                    //                                        _nvCollection.Add("@ModelNumber-text", callExecutionDataObjectnew.modelnumber);
                    //                                        var ch = _dl.GetData("sp_fakeUsersData", _nvCollection);


                    //                                    }
                    //                                }
                    //                                catch (Exception)
                    //                                {

                    //                                    //throw;
                    //                                }



                    //                                #endregion

                    //                                #region Range


                    //                                if (range.ToString() != "")
                    //                                {


                    //                                    var rangestatus = _dl.GetData("sp_insertrangestatus", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@RangeStatus-varchar(50)", range.ToString() }, { "@Distance-varchar(100)", distanceInMeters.ToString() } });
                    //                                }
                    //                                else
                    //                                {
                    //                                    var rangestatus = _dl.GetData("sp_insertrangestatus", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@RangeStatus-varchar(50)", "NewTag" }, { "@Distance-varchar(100)", "0.0" } });
                    //                                }

                    //                                #endregion

                    //                                #region Doctortagging

                    //                                string address = "";
                    //                                long doctorid;
                    //                                var dsDoctorTagPermision = _dl.GetData("sp_DoctorTagPermision", new NameValueCollection { { "@DoctorID-INT", doctorId } });
                    //                                if (dsDoctorTagPermision != null)
                    //                                {
                    //                                    if (dsDoctorTagPermision.Tables[0].Rows.Count > 0)
                    //                                    {
                    //                                        doctorid = Convert.ToInt64(dsDoctorTagPermision.Tables[0].Rows[0]["DoctorID"].ToString());
                    //                                        string url = "http://maps.googleapis.com/maps/api/geocode/xml?latlng=" + callExecutionDataObjectnew.latitude.ToString() + "," + callExecutionDataObjectnew.longitude.ToString() + "&sensor=false";
                    //                                        WebRequest request = WebRequest.Create(url);
                    //                                        using (WebResponse response = (HttpWebResponse)request.GetResponse())
                    //                                        {
                    //                                            using (StreamReader reader = new StreamReader(response.GetResponseStream(), Encoding.UTF8))
                    //                                            {
                    //                                                // empid = dt.Rows[i]["EmployeeId"].ToString();
                    //                                                DataSet dsResult = new DataSet();
                    //                                                dsResult.ReadXml(reader);//format in xml
                    //                                                DataTable dtCoordinates = new DataTable();
                    //                                                dtCoordinates.Columns.AddRange(new DataColumn[1] { new DataColumn("AreaAddress", typeof(string)) });

                    //                                                if (dsResult.Tables.Count > 1)
                    //                                                {
                    //                                                    var data = dsResult.Tables[1];
                    //                                                    var add1 = data.Rows[0]["formatted_address"].ToString();
                    //                                                    var add2 = data.Rows[2]["formatted_address"].ToString();
                    //                                                    string split = add1.Split(',')[0];
                    //                                                    address = split + " " + add2;
                    //                                                    // dt.Rows[i]["Address"] = address;
                    //                                                }


                    //                                            }
                    //                                        }
                    //                                    }

                    //                                }

                    //                                #endregion

                    //                                #region Doctor Location
                    //                                if (callExecutionDataObjectnew.longitude != null && callExecutionDataObjectnew.latitude != null)
                    //                                {
                    //                                    _nvCollection.Clear();
                    //                                    _nvCollection.Add("@DoctorID-int", doctorId.ToString());

                    //                                    DataSet dsloccount = _dl.GetData("sp_CountDoctorTagging", _nvCollection);

                    //                                    if (dsloccount.Tables[0].Rows.Count < 1)
                    //                                    {
                    //                                        _nvCollection.Clear();
                    //                                        _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                    //                                        _nvCollection.Add("@DoctorID-int", doctorId.ToString());
                    //                                        _nvCollection.Add("@VisitShift-int", vt);
                    //                                        _nvCollection.Add("@long-varchar(100)", callExecutionDataObjectnew.longitude.ToString());
                    //                                        _nvCollection.Add("@lat-varchar(100)", callExecutionDataObjectnew.latitude.ToString());
                    //                                        _nvCollection.Add("@Address-varchar(MAX)", address.ToString());
                    //                                        var ch = _dl.GetData("sp_Insert_DoctorTagging", _nvCollection);
                    //                                    }

                    //                                }
                    //                                #endregion

                    //                                #region CalculateDistanceForExpenseData

                    //                                _nvCollection.Clear();
                    //                                //_nvCollection.Add("@SalesCallID-int", salesCallsId.ToString());
                    //                                //_nvCollection.Add("@AutoActivityStatus-int", callExecutionDataObject.AutoActivityStart.ToString());
                    //                                _nvCollection.Add("@EmployeeID-int", callExecutionDataObjectnew.employeeId.ToString());
                    //                                _nvCollection.Add("@Salescallid-int", salesCallsId.ToString());
                    //                                _nvCollection.Add("@Month-int", result.Month.ToString());
                    //                                _nvCollection.Add("@Year-int", result.Year.ToString());
                    //                                _nvCollection.Add("@Day-int", result.Day.ToString());

                    //                                DataSet distanceforExpense = _dl.GetData("sp_GetLatLongforCallDistance", _nvCollection);

                    //                                if (distanceforExpense.Tables[0].Rows.Count > 0 && distanceforExpense.Tables[0].Rows[0][0].ToString() != "FIRST CALL" && distanceforExpense.Tables[0].Rows[0][0].ToString() != "ACTIVITY NOT STARTED")
                    //                                {
                    //                                    //double distanceInMeters = new GeoCoordinate(Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][1].ToString()), Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][2].ToString()))
                    //                                    //    .GetDistanceTo(new GeoCoordinate(Convert.ToDouble(callExecutionDataObjectnew.latitude.ToString()), Convert.ToDouble(callExecutionDataObjectnew.longitude.ToString())));
                    //                                    //if (distanceforExpense.Tables[0].Rows[0][1].ToString() != "0.0")
                    //                                    //{
                    //                                    //    string url = "http://www.yournavigation.org/api/1.0/gosmore.php?flat=" + distanceforExpense.Tables[0].Rows[0][1].ToString() + "&flon=" + distanceforExpense.Tables[0].Rows[0][2].ToString() + "&tlat=" + callExecutionDataObjectnew.latitude.ToString() + "&tlon=" + callExecutionDataObjectnew.longitude.ToString() + "&format=geojson" + callExecutionDataObjectnew.latitude.ToString() + "," + callExecutionDataObjectnew.longitude.ToString() + "&sensor=false";
                    //                                    //    WebRequest request = WebRequest.Create(url);
                    //                                    //    using (WebResponse response = (HttpWebResponse)request.GetResponse())
                    //                                    //    {
                    //                                    //        using (StreamReader reader = new StreamReader(response.GetResponseStream(), Encoding.UTF8))
                    //                                    //        {
                    //                                    //            DataSet dsResult = new DataSet();
                    //                                    //            dsResult.ReadXml(reader);//format in xml
                    //                                    //            GetCallDitanceForMobile = Convert.ToDouble(dsResult.Tables[0].Rows[0][2].ToString());
                    //                                    //            //  Flag = "DATABASE";

                    //                                    //            //Commented For Temporary 
                    //                                    //     //       if (GetCallDitanceForMobile == 0)
                    //                                    //     //       {
                    //                                    //     //           GetCallDitanceForMobile = new GeoCoordinate(Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][1].ToString()), Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][2].ToString()))
                    //                                    //     //.GetDistanceTo(new GeoCoordinate(Convert.ToDouble(callExecutionDataObjectnew.latitude.ToString()), Convert.ToDouble(callExecutionDataObjectnew.longitude.ToString())));
                    //                                    //     //           GetCallDitanceForMobile = GetCallDitanceForMobile / 1000;
                    //                                    //     //           //   Flag = "API";
                    //                                    //     //       }
                    //                                    //        }
                    //                                    //    }
                    //                                    //}

                    //                                    //  GetCallDitanceForMobile = distanceInMeters/1000;
                    //                                    Previous_Latitude = distanceforExpense.Tables[0].Rows[0][1].ToString();
                    //                                    Previous_Longitude = distanceforExpense.Tables[0].Rows[0][2].ToString();
                    //                                    Previous_salescallid = Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][0].ToString());
                    //                                    LastDocCity = Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][4].ToString());
                    //                                    LastDocID = Convert.ToInt64(distanceforExpense.Tables[0].Rows[0][5].ToString());
                    //                                    //  startactid = Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][3].ToString());

                    //                                    if ((Previous_Latitude.ToString() == "0" || Previous_Latitude.ToString() == "0") &&
                    //                                       (Previous_Longitude.ToString() == "0" || Previous_Longitude.ToString() == "0"))
                    //                                    {
                    //                                        distanceZero = "Previous Location does not exist";
                    //                                    }
                    //                                    else
                    //                                    {
                    //                                        distanceZero = "";
                    //                                    }

                    //                                    ////GeoCoordinate pin1 = new GeoCoordinate(Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][1].ToString()), Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][2].ToString()));
                    //                                    ////GeoCoordinate pin2 = new GeoCoordinate(Convert.ToDouble(callExecutionDataObject.latitude.ToString()), Convert.ToDouble(callExecutionDataObject.longitude.ToString()));
                    //                                    ////double distanceBetween = pin1.GetDistanceTo(pin2);
                    //                                }
                    //                                else if (distanceforExpense.Tables[0].Rows[0][0].ToString() == "FIRST CALL")
                    //                                {
                    //                                    distanceZero = "FIRST CALL";
                    //                                }
                    //                                else
                    //                                {

                    //                                }
                    //                                #endregion
                    //                            }
                    //                        }

                    //                        #region  Expense Data Deserialization
                    //                        if (callExecutionDataObjectnew.ExpenseDataJson != "[]")
                    //                        {
                    //                            var ExpenseData = JsonConvert.DeserializeObject<ExpenseDataJsonObject[]>(callExecutionDataObjectnew.ExpenseDataJson);
                    //                            try
                    //                            {
                    //                                for (int k = 0; k < ExpenseData.Length; k++)
                    //                                {
                    //                                    var ExpenseDetailData = JsonConvert.DeserializeObject<ExpenseDetailDataJsonObject[]>(ExpenseData[k].expenseData);
                    //                                    for (int l = 0; l < ExpenseDetailData.Length; l++)
                    //                                    {
                    //                                        _nvCollection.Clear();
                    //                                        _nvCollection.Add("@EmployeeID-int", callExecutionDataObjectnew.employeeId.ToString());
                    //                                        _nvCollection.Add("@ActivityId-int", ExpenseDetailData[l].ActivityTypeID.ToString());
                    //                                        _nvCollection.Add("@Month-int", result.Month.ToString());
                    //                                        _nvCollection.Add("@Year-int", result.Year.ToString());
                    //                                        _nvCollection.Add("@Day-int", result.Day.ToString());
                    //                                        DataSet ChkOutBackAndNightStay = _dl.GetData("sp_chkOutBackAndNightStayExecuted", _nvCollection);
                    //                                        if (ChkOutBackAndNightStay.Tables[0].Rows[0][0].ToString() == "Already Executed")
                    //                                        {
                    //                                            //returnString = "Already Activity Executed";
                    //                                            //goto Error;
                    //                                            var getExpenid = _dl.GetData("sp_INSERTExpenseDetailWithCall", new NameValueCollection { 
                    //                                    { "@salesCallId-int", salesCallsId.ToString() }, 
                    //                                    { "@expenseId-int", "NULL" }, 
                    //                                    { "@ExpenseValue-int", "NULL" }, 
                    //                                    { "@CallDitanceForMobile-varchar(250)",(callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString() }, 
                    //                                    { "@CallDitanceForportal-varchar(250)", GetCallDitanceForMobile.ToString() }, 
                    //                                    { "@EmployeeId-Bigint", callExecutionDataObjectnew.employeeId.ToString() }, 
                    //                                    { "@doctorId-int", doctorId.ToString() },
                    //                                    { "@PreviousSalescall-Bigint", Previous_salescallid.ToString() }, 
                    //                                    { "@PreviousLongitude-Bigint", Previous_Longitude.ToString()}, 
                    //                                    { "@PreviousLatitude-Bigint", Previous_Latitude.ToString()},
                    //                                    { "@Systemvariable-Bigint", distanceZero.ToString()}, 
                    //                                    { "@LastDocCity-Bigint", LastDocCity.ToString()},                                                        
                    //                                    { "@startactid-Bigint", Flag.ToString()},
                    //                                    { "@Date-Bigint", result.ToString()},
                    //                                    { "@LastDocID-Bigint", LastDocID.ToString()},
                    //                                    { "@mobexectime-datetime", executedDateTime.ToString()},                                                          
                    //                                });

                    //                                            ForExpenseString = (ForExpenseString == "" ? getExpenid.Tables[0].Rows[0][0].ToString() : ForExpenseString);
                    //                                            Constants.ImagesSuccesLog("Date:-" + System.DateTime.Now.ToString() + "--" + "IMsert In sp_INSERTExpenseDetailWithCall:- " + " SalesCallID : " + salesCallsId.ToString() + " CallDitanceForMobile: " + ((callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString()) + " CallDitanceForportal: " + GetCallDitanceForMobile.ToString() + " EmployeeId: " + callExecutionDataObjectnew.employeeId.ToString() + " doctorId: " + doctorId.ToString());
                    //                                        }
                    //                                        else
                    //                                        {
                    //                                            var getExpenid = _dl.GetData("sp_INSERTExpenseDetailWithCall", new NameValueCollection { 
                    //                                    { "@salesCallId-int", salesCallsId.ToString() }, 
                    //                                    { "@expenseId-int", (ForExpenseString =="")? ExpenseDetailData[l].ActivityTypeID.ToString():"NULL" }, 
                    //                                    { "@ExpenseValue-int", ExpenseDetailData[l].Expense.ToString() }, 
                    //                                    { "@CallDitanceForMobile-varchar(250)", (callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString()  }, 
                    //                                    { "@CallDitanceForportal-varchar(250)", GetCallDitanceForMobile.ToString() }, 
                    //                                    { "@EmployeeId-Bigint", callExecutionDataObjectnew.employeeId.ToString() }, 
                    //                                    { "@doctorId-int", doctorId.ToString() },
                    //                                    { "@PreviousSalescall-Bigint", Previous_salescallid.ToString() }, 
                    //                                    { "@PreviousLongitude-Bigint", Previous_Longitude.ToString()}, 
                    //                                    { "@PreviousLatitude-Bigint", Previous_Latitude.ToString()}, 
                    //                                    { "@Systemvariable-Bigint", distanceZero.ToString()}, 
                    //                                    { "@LastDocCity-Bigint", LastDocCity.ToString()},                                                        
                    //                                    { "@startactid-Bigint", Flag.ToString()},
                    //                                    { "@Date-Bigint", result.ToString()},
                    //                                    { "@LastDocID-Bigint", LastDocID.ToString()},
                    //                                    { "@mobexectime-datetime", executedDateTime.ToString()},
                    //                                });
                    //                                            ForExpenseString = (ForExpenseString == "" ? getExpenid.Tables[0].Rows[0][0].ToString() : ForExpenseString);
                    //                                            Constants.ImagesSuccesLog("Date:-" + System.DateTime.Now.ToString() + "--" + "Insert In sp_INSERTExpenseDetailWithCall:- " + " SalesCallID : " + salesCallsId.ToString() + " expenseId: " + ExpenseDetailData[l].ActivityTypeID.ToString() + " CallDitanceForMobile: " + ((callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString()) + " CallDitanceForportal: " + GetCallDitanceForMobile.ToString() + " EmployeeId: " + callExecutionDataObjectnew.employeeId.ToString() + " doctorId: " + doctorId.ToString());
                    //                                        }
                    //                                    }
                    //                                }
                    //                            }
                    //                            catch (Exception)
                    //                            {

                    //                            }
                    //                        }
                    //                        else if (((callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile) != "0.0" || ((callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile) != "0")
                    //                        {
                    //                            var getExpenid = _dl.GetData("sp_INSERTExpenseDetailWithCall", new NameValueCollection { 
                    //                    { "@salesCallId-int", salesCallsId.ToString() }, 
                    //                    { "@expenseId-int", "NULL" }, 
                    //                    { "@ExpenseValue-int", "NULL" }, 
                    //                    { "@CallDitanceForMobile-varchar(250)", (callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString() }, 
                    //                    { "@CallDitanceForportal-varchar(250)", GetCallDitanceForMobile.ToString() }, 
                    //                    { "@EmployeeId-Bigint", callExecutionDataObjectnew.employeeId.ToString() }, 
                    //                    { "@doctorId-int", doctorId.ToString() },
                    //                    { "@PreviousSalescall-Bigint", Previous_salescallid.ToString() }, 
                    //                    { "@PreviousLongitude-Bigint", Previous_Longitude.ToString()}, 
                    //                    { "@PreviousLatitude-Bigint", Previous_Latitude.ToString()},
                    //                    { "@Systemvariable-Bigint", distanceZero.ToString()}, 
                    //                    { "@LastDocCity-Bigint", LastDocCity.ToString()},
                    //                    { "@Date-Bigint", result.ToString()},
                    //                    { "@startactid-Bigint", Flag.ToString()},
                    //                    { "@LastDocID-Bigint", LastDocID.ToString()},
                    //                    { "@mobexectime-datetime", executedDateTime.ToString()},
                    //                });
                    //                            ForExpenseString = (ForExpenseString == "" ? getExpenid.Tables[0].Rows[0][0].ToString() : ForExpenseString);
                    //                            Constants.ImagesSuccesLog("Date:-" + System.DateTime.Now.ToString() + "--" + "IMsert In sp_INSERTExpenseDetailWithCall:- " + " SalesCallID : " + salesCallsId.ToString() + " CallDitanceForMobile: " + ((callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString()) + " CallDitanceForportal: " + GetCallDitanceForMobile.ToString() + " EmployeeId: " + callExecutionDataObjectnew.employeeId.ToString() + " doctorId: " + doctorId.ToString());
                    //                        }
                    //                        #endregion

                    //                        #region Image Files Data Deserialization
                    //                        try
                    //                        {
                    //                            if (callExecutionDataObjectnew.ExpenseDataJson != "[]")
                    //                            {
                    //                                var ExpenseData = JsonConvert.DeserializeObject<ExpenseDataJsonObject[]>(callExecutionDataObjectnew.ExpenseDataJson);
                    //                                try
                    //                                {
                    //                                    for (int k = 0; k < ExpenseData.Length; k++)
                    //                                    {
                    //                                        expensedata[] ExpenseDetailData = JsonConvert.DeserializeObject<expensedata[]>(ExpenseData[k].expenseData);
                    //                                        foreach (expensedata expenseData in ExpenseDetailData)
                    //                                        {
                    //                                            fileNameObject[] resultfileNameJson = js.Deserialize<fileNameObject[]>(expenseData.File);

                    //                                            for (int j = 0; j < resultfileNameJson.Length; j++)
                    //                                            {
                    //                                                var resultresultfileNameObject = resultfileNameJson[j];
                    //                                                if (resultresultfileNameObject.fileName.ToString() != "+")
                    //                                                {
                    //                                                    _nvCollection.Clear();
                    //                                                    _nvCollection.Add("@ImagePath-varchar(500)", ExpenseExecutionImagesPath + "/" + resultresultfileNameObject.fileName);
                    //                                                    _nvCollection.Add("@isProfile-varchar(200)", "EXPENSE");
                    //                                                    var getsync = _dl.GetData("sp_getsyncimage", _nvCollection);
                    //                                                    string imagePath = ExpenseExecutionImagesPath + "/" + resultresultfileNameObject.fileName;
                    //                                                    Constants.ImagesSuccesLog("Image initial table live count: " + getsync.Tables[0].Rows.Count + " Image Path : " + imagePath);
                    //                                                    if (getsync != null)
                    //                                                    {
                    //                                                        if (getsync.Tables[0].Rows.Count > 0)
                    //                                                        {
                    //                                                            _nvCollection.Clear();
                    //                                                            _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                    //                                                            _nvCollection.Add("@ImagePath-varchar(500)", imagePath);
                    //                                                            _nvCollection.Add("@Activityid-varchar(500)", expenseData.ActivityTypeID.ToString());
                    //                                                            _nvCollection.Add("@system-varchar(500)", "");
                    //                                                            _nvCollection.Add("@isAvailable-bit", "1");
                    //                                                            var ch = _dl.GetData("sp_InsertCallExecutionImages", _nvCollection);

                    //                                                            Constants.ImagesSuccesLog("Image success table live count: " + getsync.Tables[0].Rows.Count + " isAvailable:1 & Image Path : " + imagePath);
                    //                                                        }
                    //                                                        else
                    //                                                        {
                    //                                                            _nvCollection.Clear();
                    //                                                            _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                    //                                                            _nvCollection.Add("@ImagePath-varchar(500)", imagePath);
                    //                                                            _nvCollection.Add("@Activityid-varchar(500)", expenseData.ActivityTypeID.ToString());
                    //                                                            _nvCollection.Add("@system-varchar(500)", "");
                    //                                                            _nvCollection.Add("@isAvailable-bit", "0");
                    //                                                            var callimage = _dl.GetData("sp_InsertCallExecutionImages", _nvCollection);

                    //                                                            Constants.ImagesSuccesLog("Image  table live count : " + getsync.Tables[0].Rows.Count + " isAvailable:0 & Image Path : " + imagePath);
                    //                                                        }
                    //                                                    }
                    //                                                    else
                    //                                                    {
                    //                                                        _nvCollection.Clear();
                    //                                                        _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                    //                                                        _nvCollection.Add("@ImagePath-varchar(500)", imagePath);
                    //                                                        _nvCollection.Add("@Activityid-varchar(500)", expenseData.ActivityTypeID.ToString());
                    //                                                        _nvCollection.Add("@system-varchar(500)", "");
                    //                                                        _nvCollection.Add("@isAvailable-bit", "0");
                    //                                                        var callimage = _dl.GetData("sp_InsertCallExecutionImages", _nvCollection);

                    //                                                        Constants.ImagesSuccesLog("Condition Else Image  table live count : " + getsync.Tables[0].Rows.Count + " isAvailable:0 & Image Path : " + imagePath);
                    //                                                    }

                    //                                                    _nvCollection.Clear();
                    //                                                    _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                    //                                                    _nvCollection.Add("@ImagePath-varchar(500)", imagePath);
                    //                                                    _nvCollection.Add("@Activityid-varchar(500)", expenseData.ActivityTypeID.ToString());
                    //                                                    _nvCollection.Add("@system-varchar(500)", "");
                    //                                                    _nvCollection.Add("@isAvailable-bit", "0");
                    //                                                    var finalcouse = _dl.GetData("sp_InsertCallExecutionImagesFinal", _nvCollection);
                    //                                                }
                    //                                            }
                    //                                        }
                    //                                    }
                    //                                }
                    //                                catch (Exception)
                    //                                {

                    //                                }
                    //                            }
                    //                        }
                    //                        catch (Exception ex)
                    //                        {

                    //                        }
                    //                        #endregion

                    //                        #region EdetailingJson Data Deserialization
                    //                        try
                    //                        {
                    //                            var resultEdetailingJson = JsonConvert.DeserializeObject<EdetailingObject[]>(callExecutionDataObjectnew.EdetailingJson);
                    //                            for (int j = 0; j < resultEdetailingJson.Length; j++)
                    //                            {
                    //                                var resultEdetailingObject = resultEdetailingJson[j];
                    //                                _nvCollection.Clear();
                    //                                _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                    //                                _nvCollection.Add("@PDFId-int", resultEdetailingObject.pdfid);
                    //                                _nvCollection.Add("@PageNumId-int", resultEdetailingObject.pagenumber);
                    //                                _nvCollection.Add("@TimeDuration-varchar(50)", resultEdetailingObject.timeduration);
                    //                                _nvCollection.Add("@Type-int", "1"); //Type ID of PDF
                    //                                var ch = _dl.GetData("sp_InsertPDFCallMonitor", _nvCollection);
                    //                            }
                    //                        }
                    //                        catch (Exception ex)
                    //                        {

                    //                        }
                    //                        #endregion

                    //                        #region VideoEdetailingJson Data Deserialization

                    //                        try
                    //                        {
                    //                            var resultVideoJson = JsonConvert.DeserializeObject<VideoObject[]>(callExecutionDataObjectnew.videosDetailingJson);
                    //                            if (resultVideoJson != null)
                    //                            {
                    //                                for (int j = 0; j < resultVideoJson.Length; j++)
                    //                                {
                    //                                    var resultVideoObject = resultVideoJson[j];
                    //                                    _nvCollection.Clear();
                    //                                    _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                    //                                    _nvCollection.Add("@PDFId-int", resultVideoObject.videoid);
                    //                                    _nvCollection.Add("@PageNumId-int", resultVideoObject.videoduration);
                    //                                    _nvCollection.Add("@TimeDuration-varchar(50)", resultVideoObject.timeduration);
                    //                                    _nvCollection.Add("@Type-int", "2"); //Type ID of Video 
                    //                                    var ch = _dl.GetData("sp_InsertPDFCallMonitor", _nvCollection);
                    //                                }
                    //                            }
                    //                        }
                    //                        catch (Exception ex)
                    //                        {
                    //                            //    Constants.CallErrorLog("Error on Video Detailing Insertion: " + ex.Message);

                    //                        }
                    //                        #endregion

                    //                        #region SurveyJson Data Deserialization

                    //                        var SurveyData = JsonConvert.DeserializeObject<SurveyMainUploadDataObject[]>(callExecutionDataObjectnew.surveyFormJson);
                    //                        for (int k = 0; k < SurveyData.Length; k++)
                    //                        {
                    //                            SurveyMainUploadDataObject var_surveymainupload = SurveyData[i];
                    //                            string Sdate = "";
                    //                            string SuerveyId = "";

                    //                            Sdate = var_surveymainupload.SurveyDateTime;
                    //                            if (!DateTime.TryParse(Sdate, out result))
                    //                            {
                    //                                returnString = "Survey DateTime Format Is invalid";
                    //                            }

                    //                            var getAllQuestions = JsonConvert.DeserializeObject<List<SurveyDataUploadDataObject>>(var_surveymainupload.QuestionObject);

                    //                            var getsurveyid = _dl.GetData("sp_InserSurveyMain", new NameValueCollection { { "@FormId-int", var_surveymainupload.formid.ToString() }, { "@EmpId-INT", var_surveymainupload.EmpId.ToString() }, { "@CustId-int", var_surveymainupload.CustId.ToString() }, { "@SalescallId-bigint", salesCallsId.ToString() }, { "@SurveyName-varchar(100)", var_surveymainupload.SurveyName }, { "@Description-varchar(250)", var_surveymainupload.Description }, { "@SurveyDateTime-DateTime", Sdate.ToString() } });
                    //                            if (getsurveyid.Tables[0].Rows.Count > 0)
                    //                            {
                    //                                SuerveyId = getsurveyid.Tables[0].Rows[0][0].ToString();
                    //                            }

                    //                            for (int j = 0; j < getAllQuestions.Count; j++)
                    //                            {
                    //                                var data = getAllQuestions[j];

                    //                                var getsurveycount = _dl.GetData("sp_insertSurveyData", new NameValueCollection { { "@SurveyId-int", SuerveyId }, { "@QuestionId-INT", data.QuestionId }, { "@AnswerId-int", data.AnswerId }, { "@Other-varchar(250)", data.Other } });

                    //                            }



                    //                        }
                    //                        #endregion

                    //                        returnString = "CallSaved";
                    //                        goto DoneExecution;
                    //                    }
                    //                    else
                    //                    {
                    //                        returnString = "Executed Previous Call";
                    //                    }
                    //                }
                    //                else
                    //                {
                    //                    returnString = "Something Error";
                    //                }
                    //            }
                    //        }
                    //    }
                    //    #endregion
                    //}
                }
                catch (Exception exception)
                {

                    returnString = exception.Message;
                    Constants.ErrorLog("Exception Raising From MobileService.svc.cs UploadCallsData_New | " + exception.Message + " | Stack Trace | " + exception.StackTrace + ";");
                    goto Error;
                }

            Error:
            DoneExecution:
                {
                    CallExecutionResponseObject callExecutionResponseObject = new CallExecutionResponseObject();
                    callExecutionResponseObject.CallNo = i;
                    callExecutionResponseObject.isExecutedSuccessfully = (returnString == "CallSaved") ? true : false;
                    callExecutionResponseObject.CallResponseMessage = returnString + "," + ForExpenseString;
                    CallExecutionResponse.Add(callExecutionResponseObject);
                }

            }
            return js.Serialize(CallExecutionResponse);
        }

        public string UploadCallsData_New(string fileName, Stream stream)
        {
            List<CallExecutionResponseObjectForVoiceRecording> CallExecutionResponse = new List<CallExecutionResponseObjectForVoiceRecording>();
            string CreateFilePath = Path.Combine(HostingEnvironment.MapPath("~/Uploads/Files"));
            try
            {
                if (!Directory.Exists(CreateFilePath))
                {
                    Directory.CreateDirectory(CreateFilePath);
                }
            }
            catch (Exception exception)
            {
                Console.Out.WriteLine(exception.Message);
            }

            string FilePath = Path.Combine(CreateFilePath, fileName);
            int length = 0;
            string returnString = null;
            using (FileStream writer = new FileStream(FilePath, FileMode.Create))
            {
                int readCount;
                var buffer = new byte[8192];
                while ((readCount = stream.Read(buffer, 0, buffer.Length)) != 0)
                {
                    writer.Write(buffer, 0, readCount);
                    length += readCount;
                }
            }
            JavaScriptSerializer js = new JavaScriptSerializer();
            string jsondata = System.IO.File.ReadAllText(FilePath);
            var CallsData = js.Deserialize<List<CallExecutionDataObjectnew>>(jsondata);
            for (int i = 0; i < CallsData.Count; i++)
            {
                CallExecutionDataObjectnew callExecutionDataObjectnew = CallsData[i];

                string date = "";
                string level1 = null, level2 = null, level3 = null, level4 = null, level5 = null, level6 = null;
                var doctorId = "";
                string classId = "", specialityId = "", qulificationId = "";
                int month = 0;
                int year = 0;
                long salesCallsId = 0;
                long iSPlannedAsUnplanned = 0;
                double GetCallDitanceForMobile = 0.0;
                double Previous_salescallid = 0;
                double Flag = 0;
                string Previous_Longitude = "";
                string Previous_Latitude = "";
                string distanceZero = "";
                double LastDocCity = 0;
                long LastDocID = 0;
                string ForExpenseString = "";
                string range = "";
                double distanceInMeters = 0;
                int CallsNo = 0;
                bool allowexecution = false;

                NameValueCollection _nvCollection = new NameValueCollection();

                #region Application Version Check


                try
                {
                    string allowedApplicationVersions = Constants.GetAllowedApplicationVersions();
                    if (allowedApplicationVersions.ToLower() == "all")
                    {
                        allowexecution = true;
                    }
                    else
                    {
                        string[] allowedapps = allowedApplicationVersions.Split(',');
                        for (int j = 0; j < allowedapps.Length; j++)
                        {
                            if (allowedapps[j] == callExecutionDataObjectnew.appversion)
                            {
                                allowexecution = true;
                                break;
                            }
                        }
                    }
                }
                catch (Exception ex)
                {
                    throw ex;
                }

                if (!allowexecution)
                {
                    returnString = "Application version not allowed to excute the calls";
                    goto Error;
                }

                #endregion

                #region Unique Device ID and Session Restriction
                allowexecution = false;
                try
                {
                    string executionrestrictionflag = Constants.GetExecutionRestrictionFlag();
                    if (executionrestrictionflag.ToLower() == "false")
                    {
                        allowexecution = true;
                    }
                    else
                    {
                        var dsData = _dl.GetData("sp_CheckEmployeeDeviceAndSessionStatus_IMEI", new NameValueCollection {
                            { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } ,
                               { "@IMEIAddress-VARCHAR", callExecutionDataObjectnew.IMEIAddress } ,
                            { "@MacAddress-VARCHAR", callExecutionDataObjectnew.macaddress } ,
                            { "@Type-VARCHAR", "ExecutionApp" }
                        });
                        if (dsData != null)
                        {
                            if (dsData.Tables[0].Rows.Count > 0)
                            {
                                if (dsData.Tables[0].Rows[0][0].ToString() == "OK")
                                {
                                    allowexecution = true;
                                }
                                else
                                {
                                    returnString = dsData.Tables[0].Rows[0][0].ToString();
                                }
                            }
                        }
                    }
                }
                catch (Exception ex)
                {
                    throw ex;
                }

                if (!allowexecution)
                {

                    returnString = (returnString == "") ? "ServerError" : returnString;
                    goto Error;

                }



                #endregion

                try
                {
                    //DateTime executedDateTime1 = DateTime.ParseExact(callExecutionDataObjectnew.executionDateTime, "dd/MM/yyyy HH:mm:ss", CultureInfo.InvariantCulture);
                    //DateTime CheckDate = DateTime.ParseExact("30/08/2021 23:59:59", "dd/MM/yyyy HH:mm:ss", CultureInfo.InvariantCulture);

                    //if ((callExecutionDataObjectnew.appversion == "2.0.0" || callExecutionDataObjectnew.appversion == "2.0.1") && executedDateTime1 <= CheckDate)
                    //{
                    #region CheckLeave
                    DataSet set0 = _dl.GetData("sp_check_ZSM_MIO_leave", new NameValueCollection { { "@Startdate-date", callExecutionDataObjectnew.date }, { "@Enddate-date", callExecutionDataObjectnew.date }, { "@employeeid-INT", callExecutionDataObjectnew.employeeId } });
                    if (set0.Tables[0].Rows.Count > 0)
                    {
                        returnString = set0.Tables[0].Rows[0][0].ToString() == "Available" ? "Meetingandleave" : "";
                        if (returnString == "Meetingandleave")
                        {
                            goto Error;
                        }
                        else
                        {
                            date = callExecutionDataObjectnew.date + " " + callExecutionDataObjectnew.startTime;
                            DateTime result;
                            if (!DateTime.TryParse(date, out result))
                            {
                                returnString = "DateTime Format Is invalid";
                                goto Error;
                            }
                            DateTime executedDateTime = DateTime.ParseExact(callExecutionDataObjectnew.executionDateTime, "dd/MM/yyyy HH:mm:ss", CultureInfo.InvariantCulture);

                            string rectype = "S";
                            month = result.Month;
                            year = result.Year;
                            var smsmonth = Convert.ToInt32(result.Month);
                            var smsyear = Convert.ToInt32(result.Year);

                            var getatt = _dl.GetData("sp_CheckAttLeave_New", new NameValueCollection { { "@empid-int", callExecutionDataObjectnew.employeeId.ToString() }, { "@MDateTime-datetime", date.ToString() } });
                            if (getatt.Tables[0].Rows[0][0].ToString() == "alreadyLeave")
                            {
                                returnString = "leaveMarked";
                                goto Error;
                            }
                            else if (getatt.Tables[0].Rows[0][0].ToString() == "alreadySPM")
                            {
                                returnString = "SPMMarked";
                                goto Error;
                            }
                            else
                            {
                                #region preedays work
                                //if ((callExecutionDataObjectnew.isLive == "1" || callExecutionDataObjectnew.isLive == "0") && Convert.ToDateTime(executedDateTime.ToString("MM/dd/yyyy")) == Convert.ToDateTime(System.DateTime.Now.ToString("MM/dd/yyyy")))
                                if ((callExecutionDataObjectnew.isLive == "1" || callExecutionDataObjectnew.isLive == "0"))
                                {
                                    string dt_temp = "";
                                    string pree_day = "0";
                                    int aloowsDays = 24;

                                    dt_temp = Convert.ToString(result).ToString();

                                    _nvCollection.Clear();
                                    _nvCollection.Add("@EmployeeId-bigint", callExecutionDataObjectnew.employeeId.ToString());

                                    DataSet ds_p = _dl.GetData("sp_SelectEmployeePree_days_withEmpID", _nvCollection);
                                    if (ds_p != null)
                                    {
                                        if (ds_p.Tables[0].Rows.Count > 0)
                                        {
                                            pree_day = ds_p.Tables[0].Rows[0]["pree_days"].ToString();

                                            if (pree_day == "")
                                            {
                                                pree_day = "0";
                                            }
                                            else if (ds_p.Tables[0].Rows[0]["pree_days"] == null)
                                            {
                                                pree_day = "0";
                                            }

                                        }
                                    }

                                    //if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) <= Convert.ToDateTime(System.DateTime.Now.ToString("MM/dd/yyyy")))
                                    //{
                                    //    if (DATEDIFFForHours("Hours", Convert.ToDateTime(dt_temp), Convert.ToDateTime(System.DateTime.Now)) > 24)
                                    //    {
                                    //        if (DATEDIFFForHours("Hours", Convert.ToDateTime(dt_temp), Convert.ToDateTime(System.DateTime.Now)) > ((Convert.ToInt32(pree_day) * aloowsDays) + 0))
                                    //        {
                                    //            returnString = "PreeDays";
                                    //            goto Error;
                                    //        }
                                    //    }
                                    //}
                                    if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) <= Convert.ToDateTime(System.DateTime.Now.ToString("MM/dd/yyyy")))
                                    {
                                        if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) != Convert.ToDateTime(executedDateTime.ToString("MM/dd/yyyy")))
                                        {
                                            if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) <= Convert.ToDateTime(executedDateTime.ToString("MM/dd/yyyy")))
                                            {
                                                if (DATEDIFF("Days", Convert.ToDateTime(dt_temp), Convert.ToDateTime(executedDateTime)) > Convert.ToInt32(pree_day))
                                                {
                                                    returnString = "PreeDays";
                                                    goto Error;
                                                }
                                            }
                                            else
                                            {
                                                returnString = "Not Allowed";
                                                goto Error;
                                            }
                                        }
                                    }
                                    else
                                    {
                                        returnString = "Not Allowed";
                                        goto Error;
                                    }
                                }

                                #endregion

                                #region Employee Information
                                var dsEmployeeMemberShipInfo = _dl.GetData("sp_EmployeeMembershipSelectByEmployee",
                                    new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
                                if (dsEmployeeMemberShipInfo != null)
                                {
                                    var dsEmployeeHierarchy = _dl.GetData("sp_EmplyeeHierarchySelect",
                                        new NameValueCollection { { "@SystemUserID-BIGINT", dsEmployeeMemberShipInfo.Tables[0].Rows[0]["SystemUserID"].ToString() } });
                                    if (dsEmployeeHierarchy != null)
                                    {
                                        level1 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId1"].ToString();
                                        level2 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId2"].ToString();
                                        level3 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId3"].ToString();
                                        level4 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId4"].ToString();
                                        level5 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId5"].ToString();
                                        level6 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId6"].ToString();
                                    }
                                }
                                else
                                {
                                    returnString = "Employee Not Found";
                                    goto Error;
                                }
                                #endregion

                                var doctorCodeArray = callExecutionDataObjectnew.docDetail.Split(',');
                                for (int k = 0; k < doctorCodeArray.Length; k++)
                                {

                                    #region Get Doctor Details
                                    var doctorCode = doctorCodeArray[k];
                                    //var dsGetMrDoctorDetails = _dl.GetData("sp_MRDoctorSelectByCode", new NameValueCollection { { "@EmployeeId-bigint", employeeId }, { "@Code-nvarchar-20", doctorCode } });+
                                    var dsGetMrDoctorDetails = _dl.GetData("sp_MRDoctorSelectByCode_new", new NameValueCollection { { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@Code-nvarchar-20", doctorCode }, { "@month-int", month.ToString() }, { "@year-int", year.ToString() } });
                                    if (dsGetMrDoctorDetails != null)
                                    {
                                        if (dsGetMrDoctorDetails.Tables[0].Rows.Count > 0)
                                        {
                                            doctorId = dsGetMrDoctorDetails.Tables[0].Rows[0]["DoctorId"].ToString();

                                            #region InRange /OutRange
                                            _nvCollection.Clear();
                                            _nvCollection.Add("@DoctorID-int", doctorId.ToString());
                                            _nvCollection.Add("@Address-varchar(Max)", callExecutionDataObjectnew.Doc_Address.ToString());
                                            DataSet dslastlatlng = _dl.GetData("sp_Doctorlatlng", _nvCollection);
                                            string zero_lat = (dslastlatlng.Tables[0].Rows[0][0].ToString());
                                            string zero_long = (dslastlatlng.Tables[0].Rows[0][1].ToString());
                                            string getrange = ConfigurationManager.AppSettings["Range"].ToString();

                                               // distanceInMeters = new GeoCoordinate(Convert.ToDouble(dslastlatlng.Tables[0].Rows[0][0].ToString()), Convert.ToDouble(dslastlatlng.Tables[0].Rows[0][1].ToString()))
                                               // .GetDistanceTo(new GeoCoordinate(Convert.ToDouble(callExecutionDataObjectnew.latitude.ToString()), Convert.ToDouble(callExecutionDataObjectnew.longitude.ToString())));


                                            // Create GeoCoordinate objects for the doctor's location and the current location For Testing 
                                            GeoCoordinate doctorLocation = new GeoCoordinate(Convert.ToDouble(zero_lat), Convert.ToDouble(zero_long));
                                            GeoCoordinate currentLocation = new GeoCoordinate(Convert.ToDouble(callExecutionDataObjectnew.latitude.ToString()), Convert.ToDouble(callExecutionDataObjectnew.longitude.ToString()));

                                            // Calculate the distance in meters
                                            distanceInMeters = doctorLocation.GetDistanceTo(currentLocation);





                                            if (distanceInMeters <= Convert.ToDouble(getrange))
                                            {
                                                range = "InRange";
                                            }

                                            else if (zero_lat == "0" && zero_long == "0")
                                            {
                                                range = "InRange";
                                            }

                                            else
                                            {
                                                range = "OutRange";
                                                ForExpenseString = "OutrangeWithoutExpense";
                                                if (GeoFencingForExecution == "1")
                                                {
                                                    returnString = range;
                                                    goto Error;
                                                }
                                            }

                                            #endregion
                                            #region Get Class Of Doctor

                                            //var doctorClassDetail = _dl.GetData("sp_ClassOfDoctorSelect",
                                            //    new NameValueCollection { { "@DoctorId-bigint", doctorId } });
                                            var doctorClassDetail = _dl.GetData("sp_ClassOfDoctorOfSPOSelect",
                                     new NameValueCollection { { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@DoctorId-bigint", doctorId }, { "@month-int", month.ToString() }, { "@year-int", year.ToString() } });
                                            if (doctorClassDetail != null)
                                                if (doctorClassDetail.Tables[0].Rows.Count > 0)
                                                {
                                                    classId = doctorClassDetail.Tables[0].Rows[0]["ClassId"].ToString();
                                                }
                                                else
                                                {
                                                    returnString = "Class Of Doctor Not Found";
                                                    if (callExecutionDataObjectnew.callType == "0") goto Error;
                                                }

                                            #endregion

                                            #region Get Speciality Of Doctor

                                            var doctorspecialitydetail = _dl.GetData("sp_doctorspecialityselectbydoctor",
                                                new NameValueCollection { { "@doctorid-bigint", doctorId } });
                                            if (doctorspecialitydetail != null)
                                                if (doctorspecialitydetail.Tables[0].Rows.Count > 0)
                                                {
                                                    specialityId = doctorspecialitydetail.Tables[0].Rows[0]["specialityid"].ToString();
                                                }
                                                else
                                                {
                                                    returnString = "speciality of doctor not found";
                                                    if (callExecutionDataObjectnew.callType == "0") goto Error;
                                                }

                                            #endregion

                                            #region Get Qualification Of Doctor

                                            var doctorQualificationDetail = _dl.GetData("sp_QualificationsOfDoctorsSelectByDoctor",
                                                new NameValueCollection { { "@DoctorId-BIGINT", doctorId } });
                                            if (doctorQualificationDetail != null)
                                                if (doctorQualificationDetail.Tables[0].Rows.Count > 0)
                                                {
                                                    qulificationId = doctorQualificationDetail.Tables[0].Rows[0]["QulificationId"].ToString();
                                                }
                                                else
                                                {
                                                    returnString = "Qualification Of Doctor Not Found";
                                                    if (callExecutionDataObjectnew.callType == "0") goto Error;
                                                }

                                            #endregion
                                        }
                                    }
                                    else
                                    {
                                        returnString = "Doctor Not Found in Doctor List Of MIO";
                                        if (callExecutionDataObjectnew.callType == "0") goto Error;
                                    }

                                    #endregion

                                    #region Get Visit Shift

                                    var hour = Convert.ToInt32(result.ToString("HH"));

                                    string vt  = callExecutionDataObjectnew.VisitShift.ToString();


                                    //if (hour >= 0 && hour < 12)
                                    //{
                                    //    vt = "1";
                                    //}
                                    //else if (hour < 17)
                                    //{
                                    //    vt = "1";
                                    //}
                                    //else
                                    //{
                                    //    vt = "2";
                                    //}



                                    #endregion

                                    #region PreSalesCallInsert

                                    var getcountstand = _dl.GetData("getcountryStandardtime", new NameValueCollection { { "@employeeid-int", callExecutionDataObjectnew.employeeId } });
                                    var inTimeZone = TimeZoneInfo.FindSystemTimeZoneById(getcountstand.Tables[0].Rows[0][0].ToString());
                                    DateTime inTime = TimeZoneInfo.ConvertTime(DateTime.Now, TimeZoneInfo.Local, inTimeZone);
                                    DataSet set = _dl.GetData("sp_check_call_execute", new NameValueCollection { { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QualificationId-int,", qulificationId }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@IsPlanned-VARCHAR-50", callExecutionDataObjectnew.isPlanned == "No" ? "NULL" : callExecutionDataObjectnew.isPlanned }, { "@visitdate-datetime", result.ToString() }, });
                                    if (set.Tables[0].Rows.Count > 0)
                                    {
                                        returnString = "Already Executed";
                                        if (callExecutionDataObjectnew.callType == "0") goto Error;
                                    }
                                    else
                                    {
                                        if (callExecutionDataObjectnew.isPlanned == "No")
                                        {
                                            DataSet set2 = _dl.GetData("sp_check_CallExecuteForUnplanned", new NameValueCollection { { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@visitdate-datetime", result.ToString() }, });
                                            if (set2.Tables[0].Rows.Count > 0)
                                            {
                                                iSPlannedAsUnplanned = Convert.ToInt64(set2.Tables[0].Rows[0]["pk_CPI_CallPlannerMIOLevelID"].ToString());
                                                var dsPreSalesCalls = _dl.GetData("sp_PreSalesCallsInsert2", new NameValueCollection { { "@VisitDateTime-datetime", result.ToString() }, { "@Level1LevelId-int,", level1 }, { "@Level2LevelId-int,", level2 }, { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QulificationId-int,", qulificationId }, { "@CreationDateTime-datetime", inTime.ToString() }, { "@CallTypeId-int", "1" }, { "@VisitShift-int,", vt }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@InboundId-bigint", "NULL" }, { "@DocCode-INT", doctorCode }, { "@IsPlanned-VARCHAR-50", callExecutionDataObjectnew.isPlanned == "No" ? iSPlannedAsUnplanned.ToString() : callExecutionDataObjectnew.isPlanned }, { "@ActivityID-INT", callExecutionDataObjectnew.activity }, { "@ReasonID-INT", callExecutionDataObjectnew.reason } });
                                                if (dsPreSalesCalls != null)
                                                {
                                                    if (dsPreSalesCalls.Tables[0].Rows.Count > 0)
                                                    {
                                                        if (dsPreSalesCalls.Tables[0].Rows[0][0].ToString() == "alreadyexecuted")
                                                        {
                                                            returnString = "Already Executed";
                                                            return returnString;
                                                        }
                                                        else
                                                        {
                                                            salesCallsId = Convert.ToInt64(dsPreSalesCalls.Tables[0].Rows[0]["SalesCallId"].ToString());
                                                        }
                                                    }
                                                    else
                                                    {
                                                        returnString = "Error In Saving In PreSalesCalls";
                                                        if (callExecutionDataObjectnew.callType == "0") goto Error;
                                                    }
                                                }
                                                else
                                                {
                                                    returnString = "Error In Saving In PreSalesCalls";
                                                    if (callExecutionDataObjectnew.callType == "0") goto Error;
                                                }
                                            }
                                            else
                                            {
                                                var dsPreSalesCalls = _dl.GetData("sp_PreSalesCallsInsert2", new NameValueCollection { { "@VisitDateTime-datetime", result.ToString() }, { "@Level1LevelId-int,", level1 }, { "@Level2LevelId-int,", level2 }, { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QulificationId-int,", qulificationId }, { "@CreationDateTime-datetime", inTime.ToString() }, { "@CallTypeId-int", "1" }, { "@VisitShift-int,", vt }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@InboundId-bigint", "NULL" }, { "@DocCode-INT", doctorCode }, { "@IsPlanned-VARCHAR-50", callExecutionDataObjectnew.isPlanned == "No" ? "NULL" : callExecutionDataObjectnew.isPlanned }, { "@ActivityID-INT", callExecutionDataObjectnew.activity }, { "@ReasonID-INT", callExecutionDataObjectnew.reason } });
                                                if (dsPreSalesCalls != null)
                                                {
                                                    if (dsPreSalesCalls.Tables[0].Rows.Count > 0)
                                                    {
                                                        salesCallsId = Convert.ToInt64(dsPreSalesCalls.Tables[0].Rows[0]["SalesCallId"].ToString());
                                                    }
                                                    else
                                                    {
                                                        returnString = "Error In Saving In PreSalesCalls";
                                                        if (callExecutionDataObjectnew.callType == "0") goto Error;
                                                    }
                                                }
                                                else
                                                {
                                                    returnString = "Error In Saving In PreSalesCalls";
                                                    if (callExecutionDataObjectnew.callType == "0") goto Error;
                                                }
                                            }
                                        }
                                        else
                                        {
                                            var dsPreSalesCalls = _dl.GetData("sp_PreSalesCallsInsert2", new NameValueCollection { { "@VisitDateTime-datetime", result.ToString() }, { "@Level1LevelId-int,", level1 }, { "@Level2LevelId-int,", level2 }, { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QulificationId-int,", qulificationId }, { "@CreationDateTime-datetime", inTime.ToString() }, { "@CallTypeId-int", "1" }, { "@VisitShift-int,", vt }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnew.employeeId }, { "@InboundId-bigint", "NULL" }, { "@DocCode-INT", doctorCode }, { "@IsPlanned-VARCHAR-50", callExecutionDataObjectnew.isPlanned == "No" ? "NULL" : callExecutionDataObjectnew.isPlanned }, { "@ActivityID-INT", callExecutionDataObjectnew.activity }, { "@ReasonID-INT", callExecutionDataObjectnew.reason } });
                                            if (dsPreSalesCalls != null)
                                            {
                                                if (dsPreSalesCalls.Tables[0].Rows.Count > 0)
                                                {
                                                    salesCallsId = Convert.ToInt64(dsPreSalesCalls.Tables[0].Rows[0]["SalesCallId"].ToString());
                                                }
                                                else
                                                {
                                                    returnString = "Error In Saving In PreSalesCalls";
                                                    if (callExecutionDataObjectnew.callType == "0") goto Error;
                                                }
                                            }
                                            else
                                            {
                                                returnString = "Error In Saving In PreSalesCalls";
                                                if (callExecutionDataObjectnew.callType == "0") goto Error;
                                            }
                                        }
                                    }
                                    #endregion

                                    if (salesCallsId != 0)
                                    {
                                        #region Mobile Exec Time
                                        if (callExecutionDataObjectnew.executionDateTime != null)
                                        {
                                            DateTime result1 = Convert.ToDateTime(result.ToShortDateString());
                                            DateTime executedDateTime1 = Convert.ToDateTime(executedDateTime.ToShortDateString());

                                            if (result1 < executedDateTime1)
                                            {
                                                executedDateTime = result;
                                            }

                                            _nvCollection.Clear();
                                            _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                            _nvCollection.Add("@mobexectime-datetime", executedDateTime.ToString());

                                            var mac = _dl.GetData("sp_Insert_MobExecutionTime", _nvCollection);
                                        }
                                        #endregion

                                        #region CallDoctors


                                        // ReSharper disable once UnusedVariable
                                        if (_dataContext != null)
                                        {
                                            var insertCallDoctors = _dataContext.sp_CallDoctorsInsert(salesCallsId, Convert.ToInt64(doctorId)).ToList();
                                        }

                                        #endregion

                                        #region CallVisitors
                                        if (!Convert.ToBoolean(callExecutionDataObjectnew.coaching))
                                        {
                                            // ReSharper disable once UnusedVariable
                                            var dsIsCoaching = _dl.InserData("sp_InsertCallCoaching", new NameValueCollection {
                                                    {"@SalesCallId-INT", salesCallsId.ToString()},
                                                    {"@IsCoaching-VARCHAR-50", "0"}
                                            });
                                        }
                                        else
                                        {
                                            // ReSharper disable once UnusedVariable
                                            var dsIsCoaching = _dl.InserData("sp_InsertCallCoaching", new NameValueCollection {
                                                {"@SalesCallId-INT", salesCallsId.ToString()},
                                                {"@IsCoaching-VARCHAR-50", "1"}
                                            });
                                        }
                                        long jvflma = 0;
                                        long jvslma = 0;
                                        long jvftma = callExecutionDataObjectnew.jvftm == "true" ? 1 : 0;
                                        //NSM
                                        long jvbuha = 0;
                                        //GM
                                        long jvgma = 0;
                                        long jvcooa = callExecutionDataObjectnew.jvcoo == "true" ? 1 : 0;
                                        long jvcda = callExecutionDataObjectnew.jvcd == "true" ? 1 : 0;
                                        long jvpma = callExecutionDataObjectnew.jvpm == "true" ? 1 : 0;
                                        if (Convert.ToBoolean(callExecutionDataObjectnew.jvflm))
                                        {
                                            var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
                                            if (dsFlm != null)
                                            {
                                                if (dsFlm.Tables[0].Rows.Count > 0)
                                                {
                                                    jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
                                                }
                                            }
                                        }
                                        if (Convert.ToBoolean(callExecutionDataObjectnew.jvslm))
                                        {
                                            var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
                                            if (dsFlm != null)
                                            {
                                                if (dsFlm.Tables[0].Rows.Count > 0)
                                                {
                                                    jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
                                                    var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(jvflma) } });
                                                    if (dsSlm != null)
                                                    {
                                                        if (dsSlm.Tables[0].Rows.Count > 0)
                                                        {
                                                            jvslma = Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString());
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        //Check if Joint Visit is with NSM
                                        if (Convert.ToBoolean(callExecutionDataObjectnew.jvbuh))
                                        {
                                            var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
                                            if (dsFlm != null)
                                            {
                                                if (dsFlm.Tables[0].Rows.Count > 0)
                                                {
                                                    jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
                                                    //var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(jvflma) } });
                                                    var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });
                                                    if (dsSlm != null)
                                                    {
                                                        if (dsSlm.Tables[0].Rows.Count > 0)
                                                        {
                                                            jvslma = Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString());
                                                            var dsBuh = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });

                                                            if (dsBuh != null)
                                                            {
                                                                if (dsBuh.Tables[0].Rows.Count > 0)
                                                                {
                                                                    jvbuha = Convert.ToInt64(dsBuh.Tables[0].Rows[0]["ManagerId"].ToString());
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        //Check if Joint Visit is with GM
                                        if (Convert.ToBoolean(callExecutionDataObjectnew.jvgm))
                                        {
                                            var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnew.employeeId } });
                                            if (dsFlm != null)
                                            {
                                                if (dsFlm.Tables[0].Rows.Count > 0)
                                                {
                                                    jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
                                                    //var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(jvflma) } });
                                                    var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });
                                                    if (dsSlm != null)
                                                    {
                                                        if (dsSlm.Tables[0].Rows.Count > 0)
                                                        {
                                                            jvslma = Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString());
                                                            var dsBuh = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });

                                                            if (dsBuh != null)
                                                            {
                                                                if (dsBuh.Tables[0].Rows.Count > 0)
                                                                {
                                                                    jvbuha = Convert.ToInt64(dsBuh.Tables[0].Rows[0]["ManagerId"].ToString());
                                                                    var dsGm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsBuh.Tables[0].Rows[0]["ManagerId"].ToString())) } });
                                                                    if (dsGm != null)
                                                                    {
                                                                        if (dsGm.Tables[0].Rows.Count > 0)
                                                                        {
                                                                            jvgma = Convert.ToInt64((dsGm.Tables[0].Rows[0]["ManagerId"].ToString() == "" ? "1" : dsGm.Tables[0].Rows[0]["ManagerId"].ToString()));
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        jvflma = callExecutionDataObjectnew.jvflm == "true" ? jvflma : 0;
                                        jvslma = callExecutionDataObjectnew.jvslm == "true" ? jvslma : 0;
                                        jvbuha = callExecutionDataObjectnew.jvbuh == "true" ? jvbuha : 0;
                                        jvgma = callExecutionDataObjectnew.jvgm == "true" ? jvgma : 0;

                                        //if (Convert.ToBoolean(callExecutionDataObject.jvho1))
                                        //{
                                        //    jvHO1 = 1;
                                        //}
                                        //if (Convert.ToBoolean(callExecutionDataObject.jvho2))
                                        //{
                                        //    jvHO2 = 1;
                                        //}
                                        //// ReSharper disable once UnusedVariable
                                        long? nullable = null;
                                        if (_dataContext != null)
                                        {
                                            /* var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew(salesCallsId, Convert.ToInt64(callExecutionDataObject.employeeId),
                                                 ((jvflma == 0) ? nullable : jvflma),
                                                 ((jvslma == 0) ? nullable : jvslma),
                                                 ((jvHO1 == 0) ? nullable : jvHO1),
                                                 ((jvHO2 == 0) ? nullable : jvHO2)).ToList();*/
                                            var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew_withjv8(salesCallsId,
                                                Convert.ToInt64(callExecutionDataObjectnew.employeeId),
                                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvflm)) ? nullable : jvflma),
                                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvslm)) ? nullable : jvslma),
                                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvftm)) ? nullable : jvftma),
                                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvbuh)) ? nullable : jvbuha),
                                                //ye parameter sahih lgane hain filhal temporary lgaye hen 
                                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvgm)) ? nullable : jvgma),
                                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvcoo)) ? nullable : jvcooa),
                                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvcd)) ? nullable : jvcda),
                                                (!(Convert.ToBoolean(callExecutionDataObjectnew.jvpm)) ? nullable : jvpma)
                                            ).ToList();

                                            /*if (jvflma == 0 && jvslma == 0)
                                            {
                                                var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew(salesCallsId, Convert.ToInt64(callExecutionDataObject.employeeId), null, null, null, null).ToList();
                                            }
                                            else
                                            {
                                                var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew(salesCallsId, Convert.ToInt64(callExecutionDataObject.employeeId), jvflma, jvslma, 0, 0).ToList();
                                            }*/

                                        }

                                        #endregion

                                        #region VisitFeedBack

                                        if (_dataContext != null)
                                        {
                                            // ReSharper disable once UnusedVariable
                                            var insertFeedBack = _dataContext.sp_VisitFeedBackInsert(salesCallsId, callExecutionDataObjectnew.callNotes).ToList();
                                        }

                                        #endregion

                                        #region CallProducts

                                        // ReSharper disable once NotAccessedVariable
                                        List<CallProduct> insertCallProduct;

                                        if (callExecutionDataObjectnew.product1 != "-1")
                                        {
                                            if (_dataContext != null)
                                            {
                                                // ReSharper disable once RedundantAssignment
                                                //insertCallProduct =
                                                //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product1), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product1), 1).ToList();
                                                insertCallProduct =
                                                    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnew.product1), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnew.product1), 1).ToList();

                                                if (callExecutionDataObjectnew.p1Notes != "" && insertCallProduct.Count > 0)
                                                {
                                                    var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
                                                        new NameValueCollection {
                                                { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() },
                                                { "@Comment-varchar(max),", callExecutionDataObjectnew.p1Notes}
                                            });
                                                }
                                            }


                                        }


                                        if (callExecutionDataObjectnew.product2 != "-1")
                                        {
                                            if (_dataContext != null)
                                            {
                                                // ReSharper disable once RedundantAssignment
                                                //insertCallProduct =
                                                //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product2), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product1), 2).ToList();
                                                insertCallProduct =
                                                    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnew.product2), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnew.product2), 2).ToList();

                                                if (callExecutionDataObjectnew.p2Notes != "" && insertCallProduct.Count > 0)
                                                {
                                                    var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
                                                        new NameValueCollection {
                                                { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() },
                                                { "@Comment-varchar(max),", callExecutionDataObjectnew.p2Notes}
                                            });
                                                }

                                            }
                                        }

                                        if (callExecutionDataObjectnew.product3 != "-1")
                                        {
                                            if (_dataContext != null)
                                            {
                                                // ReSharper disable once RedundantAssignment
                                                //insertCallProduct =
                                                //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product3), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product3), 3).ToList();
                                                insertCallProduct =
                                                    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnew.product3), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnew.product3), 3).ToList();

                                                if (callExecutionDataObjectnew.p3Notes != "" && insertCallProduct.Count > 0)
                                                {
                                                    var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
                                                        new NameValueCollection {
                                                { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() },
                                                { "@Comment-varchar(max),", callExecutionDataObjectnew.p3Notes}
                                            });
                                                }
                                            }
                                        }

                                        if (callExecutionDataObjectnew.product4 != "-1")
                                        {
                                            if (_dataContext != null)
                                            {
                                                // ReSharper disable once RedundantAssignment
                                                //insertCallProduct =
                                                //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product4), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product4), 4).ToList();
                                                insertCallProduct =
                                                    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnew.product4), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnew.product4), 4).ToList();

                                                if (callExecutionDataObjectnew.p4Notes != "" && insertCallProduct.Count > 0)
                                                {
                                                    var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
                                                        new NameValueCollection {
                                                { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() },
                                                { "@Comment-varchar(max),", callExecutionDataObjectnew.p4Notes}
                                            });
                                                }
                                            }

                                        }



                                        #endregion

                                        #region CallProductSamples

                                        if (callExecutionDataObjectnew.sample1 != "-1" && callExecutionDataObjectnew.sampleQty1 != "")
                                        {

                                            // var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample1 } });

                                            // int SampleProdID1 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());


                                            var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObjectnew.sample1 } });

                                            int SampleProdID1 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
                                            _nvCollection.Clear();
                                            _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
                                            _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample1.ToString());
                                            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                                            _nvCollection.Add("@month-int", smsmonth.ToString());
                                            _nvCollection.Add("@year-int", smsyear.ToString());
                                            var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
                                            if (checkSample1Balance.Tables[0].Rows.Count > 0)
                                            {
                                                int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
                                                int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
                                                int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

                                                if (balnc >= (qty + opening))
                                                {

                                                }
                                                else if ((Convert.ToInt32(callExecutionDataObjectnew.sampleQty1) + balnc) > (qty + opening))
                                                {

                                                }
                                                else
                                                {
                                                    var newbalance = Convert.ToInt32(callExecutionDataObjectnew.sampleQty1) + balnc;
                                                    _nvCollection.Clear();
                                                    _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
                                                    _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample1.ToString());
                                                    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                                                    _nvCollection.Add("@Qty-int", newbalance.ToString());
                                                    _nvCollection.Add("@month-int", smsmonth.ToString());
                                                    _nvCollection.Add("@year-int", smsyear.ToString());
                                                    var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

                                                    _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID1, Convert.ToInt32(callExecutionDataObjectnew.sample1), Convert.ToInt32(callExecutionDataObjectnew.sampleQty1), 1).ToList();
                                                }
                                            }

                                        }

                                        if (callExecutionDataObjectnew.sample2 != "-1" && callExecutionDataObjectnew.sampleQty2 != "")
                                        {
                                            // var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample2 } });

                                            // int SampleProdID2 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

                                            // _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID2, Convert.ToInt32(callExecutionDataObject.sample2), Convert.ToInt32(callExecutionDataObject.sampleQty2), 2).ToList();


                                            var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObjectnew.sample2 } });

                                            int SampleProdID2 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
                                            // int SampleProdID2 = Convert.ToInt32(sample2);
                                            _nvCollection.Clear();
                                            _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
                                            _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample2.ToString());
                                            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                                            _nvCollection.Add("@month-int", smsmonth.ToString());
                                            _nvCollection.Add("@year-int", smsyear.ToString());
                                            var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
                                            if (checkSample1Balance.Tables[0].Rows.Count > 0)
                                            {
                                                int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
                                                int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
                                                int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

                                                if (balnc >= (qty + opening))
                                                {

                                                }
                                                else if ((Convert.ToInt32(callExecutionDataObjectnew.sampleQty2) + balnc) > (qty + opening))
                                                {

                                                }
                                                else
                                                {
                                                    var newbalance = Convert.ToInt32(callExecutionDataObjectnew.sampleQty2) + balnc;
                                                    _nvCollection.Clear();
                                                    _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
                                                    _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample2.ToString());
                                                    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                                                    _nvCollection.Add("@Qty-int", newbalance.ToString());
                                                    _nvCollection.Add("@month-int", smsmonth.ToString());
                                                    _nvCollection.Add("@year-int", smsyear.ToString());
                                                    var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

                                                    _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID2, Convert.ToInt32(callExecutionDataObjectnew.sample2), Convert.ToInt32(callExecutionDataObjectnew.sampleQty2), 2).ToList();
                                                }
                                            }

                                        }

                                        if (callExecutionDataObjectnew.sample3 != "-1" && callExecutionDataObjectnew.sampleQty3 != "")
                                        {

                                            // var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample3 } });

                                            //   int SampleProdID3 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

                                            //   _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID3, Convert.ToInt32(callExecutionDataObject.sample3), Convert.ToInt32(callExecutionDataObject.sampleQty3), 3).ToList();

                                            var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObjectnew.sample3 } });

                                            int SampleProdID3 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
                                            //  int SampleProdID3 = Convert.ToInt32(sample3);
                                            _nvCollection.Clear();
                                            _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
                                            _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample3.ToString());
                                            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                                            _nvCollection.Add("@month-int", smsmonth.ToString());
                                            _nvCollection.Add("@year-int", smsyear.ToString());
                                            var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
                                            if (checkSample1Balance.Tables[0].Rows.Count > 0)
                                            {
                                                int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
                                                int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
                                                int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

                                                if (balnc >= (qty + opening))
                                                {

                                                }
                                                else if ((Convert.ToInt32(callExecutionDataObjectnew.sampleQty3) + balnc) > (qty + opening))
                                                {

                                                }
                                                else
                                                {
                                                    var newbalance = Convert.ToInt32(callExecutionDataObjectnew.sampleQty3) + balnc;
                                                    _nvCollection.Clear();
                                                    _nvCollection.Add("@mioid-int", callExecutionDataObjectnew.employeeId.ToString());
                                                    _nvCollection.Add("@sample_id-int", callExecutionDataObjectnew.sample3.ToString());
                                                    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                                                    _nvCollection.Add("@Qty-int", newbalance.ToString());
                                                    _nvCollection.Add("@month-int", smsmonth.ToString());
                                                    _nvCollection.Add("@year-int", smsyear.ToString());
                                                    var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

                                                    _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID3, Convert.ToInt32(callExecutionDataObjectnew.sample3), Convert.ToInt32(callExecutionDataObjectnew.sampleQty3), 3).ToList();
                                                }
                                            }

                                        }


                                        //if (callExecutionDataObject.sample4 != "-1" && callExecutionDataObject.sampleQty4 != "")
                                        //{

                                        //  //  var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample4 } });

                                        // //   int SampleProdID4 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

                                        //  //  _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID4, Convert.ToInt32(callExecutionDataObject.sample4), Convert.ToInt32(callExecutionDataObject.sampleQty4), 4).ToList();

                                        //    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample4 } });

                                        //    int SampleProdID4 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
                                        //    //int SampleProdID4 = Convert.ToInt32(sample4);
                                        //    _nvCollection.Clear();
                                        //    _nvCollection.Add("@mioid-int", callExecutionDataObject.employeeId.ToString());
                                        //    _nvCollection.Add("@sample_id-int", callExecutionDataObject.sample4.ToString());
                                        //    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                                        //    _nvCollection.Add("@month-int", smsmonth.ToString());
                                        //    _nvCollection.Add("@year-int", smsyear.ToString());
                                        //    var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
                                        //    if (checkSample1Balance.Tables[0].Rows.Count > 0)
                                        //    {
                                        //        int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
                                        //        int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
                                        //        int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

                                        //        if (balnc >= (qty + opening))
                                        //        {

                                        //        }
                                        //        else if ((Convert.ToInt32(callExecutionDataObject.sampleQty4) + balnc) > (qty + opening))
                                        //        {

                                        //        }
                                        //        else
                                        //        {
                                        //            var newbalance = Convert.ToInt32(callExecutionDataObject.sampleQty4) + balnc;
                                        //            _nvCollection.Clear();
                                        //            _nvCollection.Add("@mioid-int", callExecutionDataObject.employeeId.ToString());
                                        //            _nvCollection.Add("@sample_id-int", callExecutionDataObject.sample1.ToString());
                                        //            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                                        //            _nvCollection.Add("@Qty-int", newbalance.ToString());
                                        //            _nvCollection.Add("@month-int", smsmonth.ToString());
                                        //            _nvCollection.Add("@year-int", smsyear.ToString());
                                        //            var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

                                        //            _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID4, Convert.ToInt32(callExecutionDataObject.sample4), Convert.ToInt32(callExecutionDataObject.sampleQty4), 4).ToList();
                                        //        }
                                        //    }

                                        //}

                                        //if (callExecutionDataObject.sample5 != "-1" && callExecutionDataObject.sampleQty5 != "")
                                        //{

                                        //    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample5 } });

                                        //    int SampleProdID5 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

                                        //    _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID5, Convert.ToInt32(callExecutionDataObject.sample5), Convert.ToInt32(callExecutionDataObject.sampleQty5), 5).ToList();

                                        //}

                                        #endregion

                                        #region CallReminder

                                        if (callExecutionDataObjectnew.reminder1 != "-1")
                                        {
                                            _dl.InserData("sp_CallReminderInsert", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@DetailReminder-int", callExecutionDataObjectnew.reminder1 }, { "@OrderBy-int", "1" } });
                                        }

                                        if (callExecutionDataObjectnew.reminder2 != "-1")
                                        {
                                            _dl.InserData("sp_CallReminderInsert", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@DetailReminder-int", callExecutionDataObjectnew.reminder2 }, { "@OrderBy-int", "2" } });
                                        }

                                        if (callExecutionDataObjectnew.reminder3 != "-1")
                                        {
                                            _dl.InserData("sp_CallReminderInsert", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@DetailReminder-int", callExecutionDataObjectnew.reminder3 }, { "@OrderBy-int", "3" } });
                                        }


                                        #endregion

                                        #region CallGifts

                                        // ReSharper disable once NotAccessedVariable
                                        List<CallGift> insertCallGift;

                                        if (callExecutionDataObjectnew.gift != "-1")
                                        {
                                            // ReSharper disable once RedundantAssignment
                                            insertCallGift = callExecutionDataObjectnew.giftQty != "" ? _dataContext.sp_CallGiftsInsert(salesCallsId, Convert.ToInt32(callExecutionDataObjectnew.gift), Convert.ToInt32(callExecutionDataObjectnew.giftQty), 1).ToList() : _dataContext.sp_CallGiftsInsert(salesCallsId, Convert.ToInt32(callExecutionDataObjectnew.gift), 0, 1).ToList();
                                        }


                                        #endregion

                                        #region MacAddress
                                        // macaddress = "123.213.163";
                                        if (callExecutionDataObjectnew.macaddress != null)
                                        {
                                            _nvCollection.Clear();
                                            _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                            _nvCollection.Add("@EmployesID-int", callExecutionDataObjectnew.employeeId.ToString());
                                            _nvCollection.Add("@macaddress-varchar(50)", callExecutionDataObjectnew.macaddress.ToString());

                                            var mac = _dl.GetData("sp_insert_macaddress", _nvCollection);
                                        }
                                        #endregion

                                        #region Location
                                        if (callExecutionDataObjectnew.longitude != null && callExecutionDataObjectnew.latitude != null)
                                        {
                                            _nvCollection.Clear();
                                            _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                            _nvCollection.Add("@long-varchar(100)", callExecutionDataObjectnew.longitude.ToString());
                                            _nvCollection.Add("@lat-varchar(100)", callExecutionDataObjectnew.latitude.ToString());
                                            var ch = _dl.GetData("sp_Insert_Location", _nvCollection);
                                        }

                                        #endregion

                                        #region Fake Users Calls Data

                                        try
                                        {
                                            if (callExecutionDataObjectnew.flag != null)
                                            {
                                                _nvCollection.Clear();

                                                _nvCollection.Clear();
                                                _nvCollection.Add("@SalesCalID-int", salesCallsId.ToString());
                                                _nvCollection.Add("@Flag-int", ((Convert.ToBoolean(callExecutionDataObjectnew.flag.ToString())) ? "1" : "0"));
                                                _nvCollection.Add("@AppVersion-varchar(100)", callExecutionDataObjectnew.appversion);
                                                _nvCollection.Add("@MacAddress-varchar(100)", callExecutionDataObjectnew.macaddress);
                                                _nvCollection.Add("@ApplicationPackages-text", callExecutionDataObjectnew.applicationpackages);
                                                _nvCollection.Add("@ModelNumber-text", callExecutionDataObjectnew.modelnumber);
                                                var ch = _dl.GetData("sp_fakeUsersData", _nvCollection);


                                            }
                                        }
                                        catch (Exception)
                                        {

                                            //throw;
                                        }



                                        #endregion

                                        #region Range


                                        if (range.ToString() != "")
                                        {


                                            var rangestatus = _dl.GetData("sp_insertrangestatus", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@RangeStatus-varchar(50)", range.ToString() }, { "@Distance-varchar(100)", distanceInMeters.ToString() } });
                                        }
                                        else
                                        {
                                            var rangestatus = _dl.GetData("sp_insertrangestatus", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@RangeStatus-varchar(50)", "NewTag" }, { "@Distance-varchar(100)", "0.0" } });
                                        }

                                        #endregion

                                        #region Doctortagging Old 

                                        //string address = "";
                                        //long doctorid;
                                        //var dsDoctorTagPermision = _dl.GetData("sp_DoctorTagPermision", new NameValueCollection { { "@DoctorID-INT", doctorId } });
                                        //if (dsDoctorTagPermision != null)
                                        //{
                                        //    if (dsDoctorTagPermision.Tables[0].Rows.Count > 0)
                                        //    {
                                        //        doctorid = Convert.ToInt64(dsDoctorTagPermision.Tables[0].Rows[0]["DoctorID"].ToString());
                                        //        string url = "http://maps.googleapis.com/maps/api/geocode/xml?latlng=" + callExecutionDataObjectnew.latitude.ToString() + "," + callExecutionDataObjectnew.longitude.ToString() + "&sensor=false";
                                        //        WebRequest request = WebRequest.Create(url);
                                        //        using (WebResponse response = (HttpWebResponse)request.GetResponse())
                                        //        {
                                        //            using (StreamReader reader = new StreamReader(response.GetResponseStream(), Encoding.UTF8))
                                        //            {
                                        //                // empid = dt.Rows[i]["EmployeeId"].ToString();
                                        //                DataSet dsResult = new DataSet();
                                        //                dsResult.ReadXml(reader);//format in xml
                                        //                DataTable dtCoordinates = new DataTable();
                                        //                dtCoordinates.Columns.AddRange(new DataColumn[1] { new DataColumn("AreaAddress", typeof(string)) });

                                        //                if (dsResult.Tables.Count > 1)
                                        //                {
                                        //                    var data = dsResult.Tables[1];
                                        //                    var add1 = data.Rows[0]["formatted_address"].ToString();
                                        //                    var add2 = data.Rows[2]["formatted_address"].ToString();
                                        //                    string split = add1.Split(',')[0];
                                        //                    address = split + " " + add2;
                                        //                    // dt.Rows[i]["Address"] = address;
                                        //                }


                                        //            }
                                        //        }
                                        //    }

                                        //}

                                        #endregion
                                        #region Doctor Location Old 
                                        //if (callExecutionDataObjectnew.longitude != null && callExecutionDataObjectnew.latitude != null)
                                        //{
                                        //    _nvCollection.Clear();
                                        //    _nvCollection.Add("@DoctorID-int", doctorId.ToString());

                                        //    DataSet dsloccount = _dl.GetData("sp_CountDoctorTagging", _nvCollection);

                                        //    if (dsloccount.Tables[0].Rows.Count < 1)
                                        //    {
                                        //        _nvCollection.Clear();
                                        //        _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                        //        _nvCollection.Add("@DoctorID-int", doctorId.ToString());
                                        //        _nvCollection.Add("@VisitShift-int", vt);
                                        //        _nvCollection.Add("@long-varchar(100)", callExecutionDataObjectnew.longitude.ToString());
                                        //        _nvCollection.Add("@lat-varchar(100)", callExecutionDataObjectnew.latitude.ToString());
                                        //        _nvCollection.Add("@Address-varchar(MAX)", address.ToString());
                                        //        var ch = _dl.GetData("sp_Insert_DoctorTagging", _nvCollection);
                                        //    }

                                        //}
                                        #endregion

    //-------------------------------------------------------------------------------------- Long Lat acc to wilson -----------------------------------------------//

                                        #region Doctortagging New 06/09/2023

                                        string address = "";
                                       
                                        //string apiKey = MapApiKey();
                                        //string url = string.Format("https://eu1.locationiq.com/v1/reverse.php?key={0}&lat={1}&lon={2}&format=xml", apiKey, callExecutionDataObjectnew.latitude.ToString(), callExecutionDataObjectnew.longitude.ToString());

                                        string url = "http://maps.googleapis.com/maps/api/geocode/xml?latlng=" + callExecutionDataObjectnew.latitude.ToString() + "," + callExecutionDataObjectnew.longitude.ToString() + "&sensor=false";
                                        //        WebRequest request = WebRequest.Create(url);
                                        //        using (WebResponse response = (HttpWebResponse)request.GetResponse())

                                        try
                                        {


                                            WebRequest request = WebRequest.Create(url);
                                            using (WebResponse response = (HttpWebResponse)request.GetResponse())
                                            {
                                                using (StreamReader reader = new StreamReader(response.GetResponseStream(), Encoding.UTF8))
                                                {
                                                    DataSet dsResult = new DataSet();
                                                    dsResult.ReadXml(reader);//format in xml
                                                    DataTable dtCoordinates = new DataTable();
                                                    dtCoordinates.Columns.AddRange(new DataColumn[1] { new DataColumn("AreaAddress", typeof(string)) });

                                                    if (dsResult.Tables.Count > 1)
                                                    {
                                                        var data = dsResult.Tables[1];
                                                        var add1 = data.Rows[0]["result_text"].ToString();
                                                        address = add1;
                                                    }

                                                }
                                            }


                                        }
                                        catch (Exception)
                                        {


                                        }

                                        #endregion

                                        #region Doctor Location New 

                                        if (callExecutionDataObjectnew.longitude != null && callExecutionDataObjectnew.latitude != null)
                                        {
                                            
                                            _nvCollection.Clear();
                                            _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                            _nvCollection.Add("@DoctorID-int", doctorId.ToString());
                                            //_nvCollection.Add("@VisitShift-int", vt);
                                            _nvCollection.Add("@VisitShift-varchar(250)", callExecutionDataObjectnew.VisitShift.ToString());
                                            _nvCollection.Add("@lat-varchar(100)", callExecutionDataObjectnew.latitude.ToString());
                                            _nvCollection.Add("@long-varchar(100)", callExecutionDataObjectnew.longitude.ToString());
                                            _nvCollection.Add("@Address-varchar(MAX)", callExecutionDataObjectnew.Doc_Address);
                                            var ch = _dl.GetData("sp_Insert_DoctorTaggingwithmultipleaddress", _nvCollection);
                                            //var ch = _dl.GetData("sp_Insert_DoctorTagging", _nvCollection);
                                            //}

                                        }
                                        #endregion

                                        //--------------------------------------------- End ----------------------------------------------------//

                                        #region CalculateDistanceForExpenseData

                                        _nvCollection.Clear();
                                        //_nvCollection.Add("@SalesCallID-int", salesCallsId.ToString());
                                        //_nvCollection.Add("@AutoActivityStatus-int", callExecutionDataObject.AutoActivityStart.ToString());
                                        _nvCollection.Add("@EmployeeID-int", callExecutionDataObjectnew.employeeId.ToString());
                                        _nvCollection.Add("@Salescallid-int", salesCallsId.ToString());
                                        _nvCollection.Add("@Month-int", result.Month.ToString());
                                        _nvCollection.Add("@Year-int", result.Year.ToString());
                                        _nvCollection.Add("@Day-int", result.Day.ToString());

                                        DataSet distanceforExpense = _dl.GetData("sp_GetLatLongforCallDistance", _nvCollection);

                                        if (distanceforExpense.Tables[0].Rows.Count > 0 && distanceforExpense.Tables[0].Rows[0][0].ToString() != "FIRST CALL" && distanceforExpense.Tables[0].Rows[0][0].ToString() != "ACTIVITY NOT STARTED")
                                        {
                                            //double distanceInMeters = new GeoCoordinate(Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][1].ToString()), Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][2].ToString()))
                                            //    .GetDistanceTo(new GeoCoordinate(Convert.ToDouble(callExecutionDataObjectnew.latitude.ToString()), Convert.ToDouble(callExecutionDataObjectnew.longitude.ToString())));
                                            //if (distanceforExpense.Tables[0].Rows[0][1].ToString() != "0.0")
                                            //{
                                            //    string url = "http://www.yournavigation.org/api/1.0/gosmore.php?flat=" + distanceforExpense.Tables[0].Rows[0][1].ToString() + "&flon=" + distanceforExpense.Tables[0].Rows[0][2].ToString() + "&tlat=" + callExecutionDataObjectnew.latitude.ToString() + "&tlon=" + callExecutionDataObjectnew.longitude.ToString() + "&format=geojson" + callExecutionDataObjectnew.latitude.ToString() + "," + callExecutionDataObjectnew.longitude.ToString() + "&sensor=false";
                                            //    WebRequest request = WebRequest.Create(url);
                                            //    using (WebResponse response = (HttpWebResponse)request.GetResponse())
                                            //    {
                                            //        using (StreamReader reader = new StreamReader(response.GetResponseStream(), Encoding.UTF8))
                                            //        {
                                            //            DataSet dsResult = new DataSet();
                                            //            dsResult.ReadXml(reader);//format in xml
                                            //            GetCallDitanceForMobile = Convert.ToDouble(dsResult.Tables[0].Rows[0][2].ToString());
                                            //            //  Flag = "DATABASE";

                                            //            //Commented For Temporary 
                                            //     //       if (GetCallDitanceForMobile == 0)
                                            //     //       {
                                            //     //           GetCallDitanceForMobile = new GeoCoordinate(Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][1].ToString()), Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][2].ToString()))
                                            //     //.GetDistanceTo(new GeoCoordinate(Convert.ToDouble(callExecutionDataObjectnew.latitude.ToString()), Convert.ToDouble(callExecutionDataObjectnew.longitude.ToString())));
                                            //     //           GetCallDitanceForMobile = GetCallDitanceForMobile / 1000;
                                            //     //           //   Flag = "API";
                                            //     //       }
                                            //        }
                                            //    }
                                            //}

                                            //  GetCallDitanceForMobile = distanceInMeters/1000;
                                            Previous_Latitude = distanceforExpense.Tables[0].Rows[0][1].ToString();
                                            Previous_Longitude = distanceforExpense.Tables[0].Rows[0][2].ToString();
                                            Previous_salescallid = Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][0].ToString());
                                            LastDocCity = Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][4].ToString());
                                            LastDocID = Convert.ToInt64(distanceforExpense.Tables[0].Rows[0][5].ToString());
                                            //  startactid = Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][3].ToString());

                                            if ((Previous_Latitude.ToString() == "0" || Previous_Latitude.ToString() == "0") &&
                                               (Previous_Longitude.ToString() == "0" || Previous_Longitude.ToString() == "0"))
                                            {
                                                distanceZero = "Previous Location does not exist";
                                            }
                                            else
                                            {
                                                distanceZero = "";
                                            }

                                            ////GeoCoordinate pin1 = new GeoCoordinate(Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][1].ToString()), Convert.ToDouble(distanceforExpense.Tables[0].Rows[0][2].ToString()));
                                            ////GeoCoordinate pin2 = new GeoCoordinate(Convert.ToDouble(callExecutionDataObject.latitude.ToString()), Convert.ToDouble(callExecutionDataObject.longitude.ToString()));
                                            ////double distanceBetween = pin1.GetDistanceTo(pin2);
                                        }
                                        else if (distanceforExpense.Tables[0].Rows[0][0].ToString() == "FIRST CALL")
                                        {
                                            distanceZero = "FIRST CALL";
                                        }
                                        else
                                        {

                                        }
                                        #endregion
                                    }
                                }

                                #region Expense Data Deserialization
                                if (callExecutionDataObjectnew.ExpenseDataJson != "[]")
                                {
                                    var ExpenseData = JsonConvert.DeserializeObject<ExpenseDataJsonObject[]>(callExecutionDataObjectnew.ExpenseDataJson);
                                    try
                                    {
                                        for (int k = 0; k < ExpenseData.Length; k++)
                                        {
                                            var ExpenseDetailData = JsonConvert.DeserializeObject<ExpenseDetailDataJsonObject[]>(ExpenseData[k].expenseData);
                                            for (int l = 0; l < ExpenseDetailData.Length; l++)
                                            {
                                                _nvCollection.Clear();
                                                _nvCollection.Add("@EmployeeID-int", callExecutionDataObjectnew.employeeId.ToString());
                                                _nvCollection.Add("@ActivityId-int", ExpenseDetailData[l].ActivityTypeID.ToString());
                                                _nvCollection.Add("@Month-int", result.Month.ToString());
                                                _nvCollection.Add("@Year-int", result.Year.ToString());
                                                _nvCollection.Add("@Day-int", result.Day.ToString());
                                                DataSet ChkOutBackAndNightStay = _dl.GetData("sp_chkOutBackAndNightStayExecuted", _nvCollection);
                                                if (ChkOutBackAndNightStay.Tables[0].Rows[0][0].ToString() == "Already Executed")
                                                {
                                                    //returnString = "Already Activity Executed";
                                                    //goto Error;
                                                    var getExpenid = _dl.GetData("sp_INSERTExpenseDetailWithCall", new NameValueCollection {
                                                        { "@salesCallId-int", salesCallsId.ToString() },
                                                        { "@expenseId-int", "NULL" },
                                                        { "@ExpenseValue-int", "NULL" },
                                                        { "@CallDitanceForMobile-varchar(250)",(callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString() },
                                                        { "@CallDitanceForportal-varchar(250)", GetCallDitanceForMobile.ToString() },
                                                        { "@EmployeeId-Bigint", callExecutionDataObjectnew.employeeId.ToString() },
                                                        { "@doctorId-int", doctorId.ToString() },
                                                        { "@PreviousSalescall-Bigint", Previous_salescallid.ToString() },
                                                        { "@PreviousLongitude-Bigint", Previous_Longitude.ToString()},
                                                        { "@PreviousLatitude-Bigint", Previous_Latitude.ToString()},
                                                        { "@Systemvariable-Bigint", distanceZero.ToString()},
                                                        { "@LastDocCity-Bigint", LastDocCity.ToString()},
                                                        { "@startactid-Bigint", Flag.ToString()},
                                                        { "@Date-Bigint", result.ToString()},
                                                        { "@LastDocID-Bigint", LastDocID.ToString()},
                                                        { "@mobexectime-datetime", executedDateTime.ToString()},
                                                    });

                                                    ForExpenseString = (ForExpenseString == "" ? getExpenid.Tables[0].Rows[0][0].ToString() : ForExpenseString);
                                                    Constants.ImagesSuccesLog("Date:-" + System.DateTime.Now.ToString() + "--" + "IMsert In sp_INSERTExpenseDetailWithCall:- " + " SalesCallID : " + salesCallsId.ToString() + " CallDitanceForMobile: " + ((callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString()) + " CallDitanceForportal: " + GetCallDitanceForMobile.ToString() + " EmployeeId: " + callExecutionDataObjectnew.employeeId.ToString() + " doctorId: " + doctorId.ToString());
                                                }
                                                else
                                                {
                                                    var getExpenid = _dl.GetData("sp_INSERTExpenseDetailWithCall", new NameValueCollection {
                                                        { "@salesCallId-int", salesCallsId.ToString() },
                                                        { "@expenseId-int", (ForExpenseString =="")? ExpenseDetailData[l].ActivityTypeID.ToString():"NULL" },
                                                        { "@ExpenseValue-int", ExpenseDetailData[l].Expense.ToString() },
                                                        { "@CallDitanceForMobile-varchar(250)", (callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString()  },
                                                        { "@CallDitanceForportal-varchar(250)", GetCallDitanceForMobile.ToString() },
                                                        { "@EmployeeId-Bigint", callExecutionDataObjectnew.employeeId.ToString() },
                                                        { "@doctorId-int", doctorId.ToString() },
                                                        { "@PreviousSalescall-Bigint", Previous_salescallid.ToString() },
                                                        { "@PreviousLongitude-Bigint", Previous_Longitude.ToString()},
                                                        { "@PreviousLatitude-Bigint", Previous_Latitude.ToString()},
                                                        { "@Systemvariable-Bigint", distanceZero.ToString()},
                                                        { "@LastDocCity-Bigint", LastDocCity.ToString()},
                                                        { "@startactid-Bigint", Flag.ToString()},
                                                        { "@Date-Bigint", result.ToString()},
                                                        { "@LastDocID-Bigint", LastDocID.ToString()},
                                                        { "@mobexectime-datetime", executedDateTime.ToString()},
                                                    });
                                                    ForExpenseString = (ForExpenseString == "" ? getExpenid.Tables[0].Rows[0][0].ToString() : ForExpenseString);
                                                    Constants.ImagesSuccesLog("Date:-" + System.DateTime.Now.ToString() + "--" + "Insert In sp_INSERTExpenseDetailWithCall:- " + " SalesCallID : " + salesCallsId.ToString() + " expenseId: " + ExpenseDetailData[l].ActivityTypeID.ToString() + " CallDitanceForMobile: " + ((callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString()) + " CallDitanceForportal: " + GetCallDitanceForMobile.ToString() + " EmployeeId: " + callExecutionDataObjectnew.employeeId.ToString() + " doctorId: " + doctorId.ToString());
                                                }
                                            }
                                        }
                                    }
                                    catch (Exception)
                                    {

                                    }
                                }
                                else if (((callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile) != "0.0" || ((callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile) != "0")
                                {
                                    var getExpenid = _dl.GetData("sp_INSERTExpenseDetailWithCall", new NameValueCollection {
                                        { "@salesCallId-int", salesCallsId.ToString() },
                                        { "@expenseId-int", "NULL" },
                                        { "@ExpenseValue-int", "NULL" },
                                        { "@CallDitanceForMobile-varchar(250)", (callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString() },
                                        { "@CallDitanceForportal-varchar(250)", GetCallDitanceForMobile.ToString() },
                                        { "@EmployeeId-Bigint", callExecutionDataObjectnew.employeeId.ToString() },
                                        { "@doctorId-int", doctorId.ToString() },
                                        { "@PreviousSalescall-Bigint", Previous_salescallid.ToString() },
                                        { "@PreviousLongitude-Bigint", Previous_Longitude.ToString()},
                                        { "@PreviousLatitude-Bigint", Previous_Latitude.ToString()},
                                        { "@Systemvariable-Bigint", distanceZero.ToString()},
                                        { "@LastDocCity-Bigint", LastDocCity.ToString()},
                                        { "@Date-Bigint", result.ToString()},
                                        { "@startactid-Bigint", Flag.ToString()},
                                        { "@LastDocID-Bigint", LastDocID.ToString()},
                                        { "@mobexectime-datetime", executedDateTime.ToString()},
                                    });
                                    ForExpenseString = (ForExpenseString == "" ? getExpenid.Tables[0].Rows[0][0].ToString() : ForExpenseString);
                                    Constants.ImagesSuccesLog("Date:-" + System.DateTime.Now.ToString() + "--" + "IMsert In sp_INSERTExpenseDetailWithCall:- " + " SalesCallID : " + salesCallsId.ToString() + " CallDitanceForMobile: " + ((callExecutionDataObjectnew.CallDitanceForMobile == null) ? "0" : callExecutionDataObjectnew.CallDitanceForMobile.ToString()) + " CallDitanceForportal: " + GetCallDitanceForMobile.ToString() + " EmployeeId: " + callExecutionDataObjectnew.employeeId.ToString() + " doctorId: " + doctorId.ToString());
                                }
                                #endregion

                                #region Image Files Data Deserialization
                                try
                                {
                                    if (callExecutionDataObjectnew.ExpenseDataJson != "[]")
                                    {
                                        var ExpenseData = JsonConvert.DeserializeObject<ExpenseDataJsonObject[]>(callExecutionDataObjectnew.ExpenseDataJson);
                                        try
                                        {
                                            for (int k = 0; k < ExpenseData.Length; k++)
                                            {
                                                expensedata[] ExpenseDetailData = JsonConvert.DeserializeObject<expensedata[]>(ExpenseData[k].expenseData);
                                                foreach (expensedata expenseData in ExpenseDetailData)
                                                {
                                                    fileNameObject[] resultfileNameJson = js.Deserialize<fileNameObject[]>(expenseData.File);

                                                    for (int j = 0; j < resultfileNameJson.Length; j++)
                                                    {
                                                        var resultresultfileNameObject = resultfileNameJson[j];
                                                        if (resultresultfileNameObject.fileName.ToString() != "+")
                                                        {
                                                            _nvCollection.Clear();
                                                            _nvCollection.Add("@ImagePath-varchar(500)", ExpenseExecutionImagesPath + "/" + resultresultfileNameObject.fileName);
                                                            _nvCollection.Add("@isProfile-varchar(200)", "EXPENSE");
                                                            var getsync = _dl.GetData("sp_getsyncimage", _nvCollection);
                                                            string imagePath = ExpenseExecutionImagesPath + "/" + resultresultfileNameObject.fileName;
                                                            Constants.ImagesSuccesLog("Image initial table live count: " + getsync.Tables[0].Rows.Count + " Image Path : " + imagePath);
                                                            if (getsync != null)
                                                            {
                                                                if (getsync.Tables[0].Rows.Count > 0)
                                                                {
                                                                    _nvCollection.Clear();
                                                                    _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                                                    _nvCollection.Add("@ImagePath-varchar(500)", imagePath);
                                                                    _nvCollection.Add("@Activityid-varchar(500)", expenseData.ActivityTypeID.ToString());
                                                                    _nvCollection.Add("@system-varchar(500)", "");
                                                                    _nvCollection.Add("@isAvailable-bit", "1");
                                                                    var ch = _dl.GetData("sp_InsertCallExecutionImages", _nvCollection);

                                                                    Constants.ImagesSuccesLog("Image success table live count: " + getsync.Tables[0].Rows.Count + " isAvailable:1 & Image Path : " + imagePath);
                                                                }
                                                                else
                                                                {
                                                                    _nvCollection.Clear();
                                                                    _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                                                    _nvCollection.Add("@ImagePath-varchar(500)", imagePath);
                                                                    _nvCollection.Add("@Activityid-varchar(500)", expenseData.ActivityTypeID.ToString());
                                                                    _nvCollection.Add("@system-varchar(500)", "");
                                                                    _nvCollection.Add("@isAvailable-bit", "0");
                                                                    var callimage = _dl.GetData("sp_InsertCallExecutionImages", _nvCollection);

                                                                    Constants.ImagesSuccesLog("Image  table live count : " + getsync.Tables[0].Rows.Count + " isAvailable:0 & Image Path : " + imagePath);
                                                                }
                                                            }
                                                            else
                                                            {
                                                                _nvCollection.Clear();
                                                                _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                                                _nvCollection.Add("@ImagePath-varchar(500)", imagePath);
                                                                _nvCollection.Add("@Activityid-varchar(500)", expenseData.ActivityTypeID.ToString());
                                                                _nvCollection.Add("@system-varchar(500)", "");
                                                                _nvCollection.Add("@isAvailable-bit", "0");
                                                                var callimage = _dl.GetData("sp_InsertCallExecutionImages", _nvCollection);

                                                                Constants.ImagesSuccesLog("Condition Else Image  table live count : " + getsync.Tables[0].Rows.Count + " isAvailable:0 & Image Path : " + imagePath);
                                                            }

                                                            _nvCollection.Clear();
                                                            _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                                            _nvCollection.Add("@ImagePath-varchar(500)", imagePath);
                                                            _nvCollection.Add("@Activityid-varchar(500)", expenseData.ActivityTypeID.ToString());
                                                            _nvCollection.Add("@system-varchar(500)", "");
                                                            _nvCollection.Add("@isAvailable-bit", "0");
                                                            var finalcouse = _dl.GetData("sp_InsertCallExecutionImagesFinal", _nvCollection);
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        catch (Exception)
                                        {

                                        }
                                    }
                                }
                                catch (Exception ex)
                                {

                                }
                                #endregion

                                #region EdetailingJson Data Deserialization
                                try
                                {
                                    var resultEdetailingJson = JsonConvert.DeserializeObject<EdetailingObject[]>(callExecutionDataObjectnew.EdetailingJson);
                                    for (int j = 0; j < resultEdetailingJson.Length; j++)
                                    {
                                        var resultEdetailingObject = resultEdetailingJson[j];
                                        _nvCollection.Clear();
                                        _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                        _nvCollection.Add("@PDFId-int", resultEdetailingObject.pdfid);
                                        _nvCollection.Add("@PageNumId-int", resultEdetailingObject.pagenumber);
                                        _nvCollection.Add("@TimeDuration-varchar(50)", resultEdetailingObject.timeduration);
                                        _nvCollection.Add("@Type-int", "1"); //Type ID of PDF
                                        var ch = _dl.GetData("sp_InsertPDFCallMonitor", _nvCollection);
                                    }
                                }
                                catch (Exception ex)
                                {

                                }
                                #endregion

                                #region VideoEdetailingJson Data Deserialization

                                try
                                {
                                    var resultVideoJson = JsonConvert.DeserializeObject<VideoObject[]>(callExecutionDataObjectnew.videosDetailingJson);
                                    if (resultVideoJson != null)
                                    {
                                        for (int j = 0; j < resultVideoJson.Length; j++)
                                        {
                                            var resultVideoObject = resultVideoJson[j];
                                            _nvCollection.Clear();
                                            _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                            _nvCollection.Add("@PDFId-int", resultVideoObject.videoid);
                                            _nvCollection.Add("@PageNumId-int", resultVideoObject.videoduration);
                                            _nvCollection.Add("@TimeDuration-varchar(50)", resultVideoObject.timeduration);
                                            _nvCollection.Add("@Type-int", "2"); //Type ID of Video 
                                            var ch = _dl.GetData("sp_InsertPDFCallMonitor", _nvCollection);
                                        }
                                    }
                                }
                                catch (Exception ex)
                                {
                                    //    Constants.CallErrorLog("Error on Video Detailing Insertion: " + ex.Message);

                                }
                                #endregion

                                #region SurveyJson Data Deserialization

                                var SurveyData = JsonConvert.DeserializeObject<SurveyMainUploadDataObject[]>(callExecutionDataObjectnew.surveyFormJson);
                                for (int k = 0; k < SurveyData.Length; k++)
                                {
                                    SurveyMainUploadDataObject var_surveymainupload = SurveyData[i];
                                    string Sdate = "";
                                    string SuerveyId = "";

                                    Sdate = var_surveymainupload.SurveyDateTime;
                                    if (!DateTime.TryParse(Sdate, out result))
                                    {
                                        returnString = "Survey DateTime Format Is invalid";
                                    }

                                    var getAllQuestions = JsonConvert.DeserializeObject<List<SurveyDataUploadDataObject>>(var_surveymainupload.QuestionObject);

                                    var getsurveyid = _dl.GetData("sp_InserSurveyMain", new NameValueCollection { { "@FormId-int", var_surveymainupload.formid.ToString() }, { "@EmpId-INT", var_surveymainupload.EmpId.ToString() }, { "@CustId-int", var_surveymainupload.CustId.ToString() }, { "@SalescallId-bigint", salesCallsId.ToString() }, { "@SurveyName-varchar(100)", var_surveymainupload.SurveyName }, { "@Description-varchar(250)", var_surveymainupload.Description }, { "@SurveyDateTime-DateTime", Sdate.ToString() } });
                                    if (getsurveyid.Tables[0].Rows.Count > 0)
                                    {
                                        SuerveyId = getsurveyid.Tables[0].Rows[0][0].ToString();
                                    }

                                    for (int j = 0; j < getAllQuestions.Count; j++)
                                    {
                                        var data = getAllQuestions[j];

                                        var getsurveycount = _dl.GetData("sp_insertSurveyData", new NameValueCollection { { "@SurveyId-int", SuerveyId }, { "@QuestionId-INT", data.QuestionId }, { "@AnswerId-int", data.AnswerId }, { "@Other-varchar(250)", data.Other } });

                                    }



                                }
                                #endregion

                                returnString = "CallSaved";
                                goto DoneExecution;
                            }
                        }
                    }
                    #endregion

                }
                catch (Exception exception)
                {

                    returnString = exception.Message;
                    Constants.ErrorLog("Exception Raising From MobileService.svc.cs UploadCallsData_New | " + exception.Message + " | Stack Trace | " + exception.StackTrace + ";");
                    goto Error;
                }

            Error:
            DoneExecution:
                {
                    CallExecutionResponseObjectForVoiceRecording callExecutionResponseObject = new CallExecutionResponseObjectForVoiceRecording();
                    callExecutionResponseObject.CallNo = i;
                    callExecutionResponseObject.isExecutedSuccessfully = (returnString == "CallSaved") ? true : false;
                    callExecutionResponseObject.CallResponseMessage = returnString + "," + ForExpenseString;
                    callExecutionResponseObject.SalesCallId = salesCallsId;
                    CallExecutionResponse.Add(callExecutionResponseObject);
                }

            }
            return js.Serialize(CallExecutionResponse);




        }

        public string UploadCallsData_DSM(string fileName, Stream stream)
        {
            List<CallExecutionResponseObject> CallExecutionResponse = new List<CallExecutionResponseObject>();
            string CreateFilePath = Path.Combine(HostingEnvironment.MapPath("~/Uploads/FilesForZSM"));
            try
            {
                if (!Directory.Exists(CreateFilePath))
                {
                    Directory.CreateDirectory(CreateFilePath);
                }
            }
            catch (Exception exception)
            {
                Console.Out.WriteLine(exception.Message);
            }

            string FilePath = Path.Combine(CreateFilePath, fileName);
            int length = 0;
            string returnString = null;
            using (FileStream writer = new FileStream(FilePath, FileMode.Create))
            {
                int readCount;
                var buffer = new byte[8192];
                while ((readCount = stream.Read(buffer, 0, buffer.Length)) != 0)
                {
                    writer.Write(buffer, 0, readCount);
                    length += readCount;
                }
            }
            JavaScriptSerializer js = new JavaScriptSerializer();
            string jsondata = System.IO.File.ReadAllText(FilePath);
            var CallsData = js.Deserialize<List<CallExecutionDataObjectnewZSM>>(jsondata);
            for (int i = 0; i < CallsData.Count; i++)
            {

                CallExecutionDataObjectnewZSM callExecutionDataObjectnewZSM = CallsData[i];

                string date = "";
                string level1 = null, level2 = null, level3 = null, level4 = null, level5 = null, level6 = null;
                var doctorId = "";
                string classId = "", specialityId = "", qulificationId = "";
                int month = 0;
                int year = 0;
                long salesCallsId = 0;
                long iSPlannedAsUnplanned = 0;
                //double GetCallDitanceForMobile = 0.0;
                //double Previous_salescallid = 0;
                //double Flag = 0;
                //string Previous_Longitude = "";
                //string Previous_Latitude = "";
                //string distanceZero = "";
                //double LastDocCity = 0;
                //long LastDocID = 0;
                string ForExpenseString = "";
                string range = "";
                double distanceInMeters = 0;
                //int CallsNo = 0;
                bool allowexecution = false;

                NameValueCollection _nvCollection = new NameValueCollection();

                #region Application Version Check


                try
                {
                    string allowedApplicationVersions = Constants.GetAllowedApplicationVersions();
                    if (allowedApplicationVersions.ToLower() == "all")
                    {
                        allowexecution = true;
                    }
                    else
                    {
                        string[] allowedapps = allowedApplicationVersions.Split(',');
                        for (int j = 0; j < allowedapps.Length; j++)
                        {
                            if (allowedapps[j] == callExecutionDataObjectnewZSM.appversion)
                            {
                                allowexecution = true;
                                break;
                            }
                        }
                    }
                }
                catch (Exception ex)
                {
                    throw ex;
                }

                if (!allowexecution)
                {
                    returnString = "Application version not allowed to excute the calls";
                    goto Error;
                }

                #endregion

                #region Unique Device ID and Session Restriction
                allowexecution = false;
                try
                {
                    string executionrestrictionflag = Constants.GetExecutionRestrictionFlag();
                    if (executionrestrictionflag.ToLower() == "false")
                    {
                        allowexecution = true;
                    }
                    else
                    {
                        var dsData = _dl.GetData("sp_CheckEmployeeDeviceAndSessionStatus_IMEI", new NameValueCollection {
                            { "@EmployeeId-BIGINT", callExecutionDataObjectnewZSM.employeeId } ,
                               { "@IMEIAddress-VARCHAR", callExecutionDataObjectnewZSM.IMEIAddress } ,
                            { "@MacAddress-VARCHAR", callExecutionDataObjectnewZSM.macaddress } ,
                            { "@Type-VARCHAR", "ExecutionApp" }
                        });
                        if (dsData != null)
                        {
                            if (dsData.Tables[0].Rows.Count > 0)
                            {
                                if (dsData.Tables[0].Rows[0][0].ToString() == "OK")
                                {
                                    allowexecution = true;
                                }
                                else
                                {
                                    returnString = dsData.Tables[0].Rows[0][0].ToString();
                                }
                            }
                        }
                    }
                }
                catch (Exception ex)
                {
                    throw ex;
                }

                if (!allowexecution)
                {

                    returnString = (returnString == "") ? "ServerError" : returnString;
                    goto Error;

                }



                #endregion

                try
                {
                    //DateTime executedDateTime1 = DateTime.ParseExact(callExecutionDataObjectnewZSM.executionDateTime, "dd/MM/yyyy HH:mm:ss", CultureInfo.InvariantCulture);
                    //DateTime CheckDate = DateTime.ParseExact("30/08/2021 23:59:59", "dd/MM/yyyy HH:mm:ss", CultureInfo.InvariantCulture);

                    //if ((callExecutionDataObjectnewZSM.appversion == "2.0.0" || callExecutionDataObjectnewZSM.appversion == "2.0.1") && executedDateTime1 <= CheckDate)
                    //{
                    #region CheckLeave
                    DataSet set0 = _dl.GetData("sp_check_ZSM_MIO_leave", new NameValueCollection { { "@Startdate-date", callExecutionDataObjectnewZSM.date }, { "@Enddate-date", callExecutionDataObjectnewZSM.date }, { "@employeeid-INT", callExecutionDataObjectnewZSM.employeeId } });
                    if (set0.Tables[0].Rows.Count > 0)
                    {
                        returnString = set0.Tables[0].Rows[0][0].ToString() == "Available" ? "Meetingandleave" : "";
                        if (returnString == "Meetingandleave")
                        {
                            goto Error;
                        }
                        else
                        {
                            date = callExecutionDataObjectnewZSM.date + " " + callExecutionDataObjectnewZSM.startTime;
                            DateTime result;
                            if (!DateTime.TryParse(date, out result))
                            {
                                returnString = "DateTime Format Is invalid";
                                goto Error;
                            }
                            DateTime executedDateTime = DateTime.ParseExact(callExecutionDataObjectnewZSM.executionDateTime, "dd/MM/yyyy HH:mm:ss", CultureInfo.InvariantCulture);

                            string rectype = "S";
                            month = result.Month;
                            year = result.Year;
                            var smsmonth = Convert.ToInt32(result.Month);
                            var smsyear = Convert.ToInt32(result.Year);

                            var getatt = _dl.GetData("sp_CheckAttLeave_New", new NameValueCollection { { "@empid-int", callExecutionDataObjectnewZSM.employeeId.ToString() }, { "@MDateTime-datetime", date.ToString() } });
                            if (getatt.Tables[0].Rows[0][0].ToString() == "alreadyLeave")
                            {
                                returnString = "leaveMarked";
                                goto Error;
                            }
                            else if (getatt.Tables[0].Rows[0][0].ToString() == "alreadySPM")
                            {
                                returnString = "SPMMarked";
                                goto Error;
                            }
                            else
                            {
                                #region preedays work
                                //if ((callExecutionDataObjectnewZSM.isLive == "1" || callExecutionDataObjectnewZSM.isLive == "0") && Convert.ToDateTime(executedDateTime.ToString("MM/dd/yyyy")) == Convert.ToDateTime(System.DateTime.Now.ToString("MM/dd/yyyy")))
                                if ((callExecutionDataObjectnewZSM.isLive == "1" || callExecutionDataObjectnewZSM.isLive == "0"))
                                {
                                    string dt_temp = "";
                                    string pree_day = "0";
                                    int aloowsDays = 24;

                                    dt_temp = Convert.ToString(result).ToString();

                                    _nvCollection.Clear();
                                    _nvCollection.Add("@EmployeeId-bigint", callExecutionDataObjectnewZSM.employeeId.ToString());

                                    DataSet ds_p = _dl.GetData("sp_SelectEmployeePree_days_withEmpID", _nvCollection);
                                    if (ds_p != null)
                                    {
                                        if (ds_p.Tables[0].Rows.Count > 0)
                                        {
                                            pree_day = ds_p.Tables[0].Rows[0]["pree_days"].ToString();

                                            if (pree_day == "")
                                            {
                                                pree_day = "0";
                                            }
                                            else if (ds_p.Tables[0].Rows[0]["pree_days"] == null)
                                            {
                                                pree_day = "0";
                                            }

                                        }
                                    }

                                    //if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) <= Convert.ToDateTime(System.DateTime.Now.ToString("MM/dd/yyyy")))
                                    //{
                                    //    if (DATEDIFFForHours("Hours", Convert.ToDateTime(dt_temp), Convert.ToDateTime(System.DateTime.Now)) > 24)
                                    //    {
                                    //        if (DATEDIFFForHours("Hours", Convert.ToDateTime(dt_temp), Convert.ToDateTime(System.DateTime.Now)) > ((Convert.ToInt32(pree_day) * aloowsDays) + 0))
                                    //        {
                                    //            returnString = "PreeDays";
                                    //            goto Error;
                                    //        }
                                    //    }
                                    //}
                                    if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) <= Convert.ToDateTime(System.DateTime.Now.ToString("MM/dd/yyyy")))
                                    {
                                        if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) != Convert.ToDateTime(executedDateTime.ToString("MM/dd/yyyy")))
                                        {
                                            if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) <= Convert.ToDateTime(executedDateTime.ToString("MM/dd/yyyy")))
                                            {
                                                if (DATEDIFF("Days", Convert.ToDateTime(dt_temp), Convert.ToDateTime(executedDateTime)) > Convert.ToInt32(pree_day))
                                                {
                                                    returnString = "PreeDays";
                                                    goto Error;
                                                }
                                            }
                                            else
                                            {
                                                returnString = "Not Allowed";
                                                goto Error;
                                            }
                                        }
                                    }
                                    else
                                    {
                                        returnString = "Not Allowed";
                                        goto Error;
                                    }
                                }
                                #endregion

                                #region Employee Information
                                var dsEmployeeMemberShipInfo = _dl.GetData("sp_EmployeeMembershipSelectByEmployee",
                                    new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnewZSM.employeeId } });
                                if (dsEmployeeMemberShipInfo != null)
                                {
                                    var dsEmployeeHierarchy = _dl.GetData("sp_EmplyeeHierarchySelect",
                                        new NameValueCollection { { "@SystemUserID-BIGINT", dsEmployeeMemberShipInfo.Tables[0].Rows[0]["SystemUserID"].ToString() } });
                                    if (dsEmployeeHierarchy != null)
                                    {
                                        level1 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId1"].ToString();
                                        level2 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId2"].ToString();
                                        level3 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId3"].ToString();
                                        level4 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId4"].ToString();
                                        level5 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId5"].ToString();
                                        level6 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId6"].ToString();
                                    }
                                }
                                else
                                {
                                    returnString = "Employee Not Found";
                                    goto Error;
                                }
                                #endregion

                                var doctorCodeArray = callExecutionDataObjectnewZSM.docDetail.Split(',');
                                for (int k = 0; k < doctorCodeArray.Length; k++)
                                {

                                    #region Get Doctor Details
                                    var doctorCode = doctorCodeArray[k];
                                    //var dsGetMrDoctorDetails = _dl.GetData("sp_MRDoctorSelectByCode", new NameValueCollection { { "@EmployeeId-bigint", employeeId }, { "@Code-nvarchar-20", doctorCode } });+
                                    var dsGetMrDoctorDetails = _dl.GetData("sp_MRDoctorSelectByCodezsm_ZSM", new NameValueCollection { { "@EmployeeId-bigint", callExecutionDataObjectnewZSM.employeeId }, { "@Code-nvarchar-20", doctorCode }, { "@month-int", month.ToString() }, { "@year-int", year.ToString() } });
                                    if (dsGetMrDoctorDetails != null)
                                    {
                                        if (dsGetMrDoctorDetails.Tables[0].Rows.Count > 0)
                                        {
                                            doctorId = dsGetMrDoctorDetails.Tables[0].Rows[0]["DoctorId"].ToString();
                                            #region InRange /OutRange
                                            _nvCollection.Clear();
                                            _nvCollection.Add("@DoctorID-int", doctorId.ToString());
                                            _nvCollection.Add("@Address-varchar(Max)", callExecutionDataObjectnewZSM.Doc_Address.ToString());
                                            DataSet dslastlatlng = _dl.GetData("sp_Doctorlatlng", _nvCollection);
                                            string zero_lat = (dslastlatlng.Tables[0].Rows[0][0].ToString());
                                            string zero_long = (dslastlatlng.Tables[0].Rows[0][1].ToString());
                                            string getrange = ConfigurationManager.AppSettings["Range"].ToString();
                                         //   distanceInMeters = new GeoCoordinate(Convert.ToDouble(dslastlatlng.Tables[0].Rows[0][0].ToString()), Convert.ToDouble(dslastlatlng.Tables[0].Rows[0][1].ToString()))
                                          //.GetDistanceTo(new GeoCoordinate(Convert.ToDouble(callExecutionDataObjectnewZSM.latitude.ToString()), Convert.ToDouble(callExecutionDataObjectnewZSM.longitude.ToString())));

                                            GeoCoordinate doctorLocation = new GeoCoordinate(Convert.ToDouble(zero_lat), Convert.ToDouble(zero_long));
                                            GeoCoordinate currentLocation = new GeoCoordinate(Convert.ToDouble(callExecutionDataObjectnewZSM.latitude.ToString()), Convert.ToDouble(callExecutionDataObjectnewZSM.longitude.ToString()));


                                            distanceInMeters = doctorLocation.GetDistanceTo(currentLocation);

                                            if (distanceInMeters <= Convert.ToDouble(getrange))
                                            {
                                                range = "InRange";
                                            }

                                            else if (zero_lat == "0" && zero_long == "0")
                                            {
                                                range = "InRange";
                                            }
                                            else
                                            {
                                                range = "OutRange";
                                                ForExpenseString = "OutrangeWithoutExpense";
                                                if (GeoFencingForExecution == "1")
                                                {
                                                    returnString = range;
                                                    goto Error;
                                                }
                                            }







                                            #endregion
                                            #region Get Class Of Doctor

                                            var doctorClassDetail = _dl.GetData("sp_ClassOfDoctorSelect",
                                                new NameValueCollection { { "@DoctorId-bigint", doctorId } });
                                            // var doctorClassDetail = _dl.GetData("sp_ClassOfDoctorOfSPOSelect",
                                            //new NameValueCollection { { "@EmployeeId-bigint", callExecutionDataObjectnewZSM.employeeId }, { "@DoctorId-bigint", doctorId }, { "@month-int", month.ToString() }, { "@year-int", year.ToString() } });
                                            if (doctorClassDetail != null)
                                                if (doctorClassDetail.Tables[0].Rows.Count > 0)
                                                {
                                                    classId = doctorClassDetail.Tables[0].Rows[0]["ClassId"].ToString();
                                                }
                                                else
                                                {
                                                    returnString = "Class Of Doctor Not Found";
                                                    if (callExecutionDataObjectnewZSM.callType == "0") goto Error;
                                                }

                                            #endregion

                                            #region Get Speciality Of Doctor

                                            var doctorspecialitydetail = _dl.GetData("sp_doctorspecialityselectbydoctor",
                                                new NameValueCollection { { "@doctorid-bigint", doctorId } });
                                            if (doctorspecialitydetail != null)
                                                if (doctorspecialitydetail.Tables[0].Rows.Count > 0)
                                                {
                                                    specialityId = doctorspecialitydetail.Tables[0].Rows[0]["specialityid"].ToString();
                                                }
                                                else
                                                {
                                                    returnString = "speciality of doctor not found";
                                                    if (callExecutionDataObjectnewZSM.callType == "0") goto Error;
                                                }

                                            #endregion

                                            #region Get Qualification Of Doctor

                                            var doctorQualificationDetail = _dl.GetData("sp_QualificationsOfDoctorsSelectByDoctor",
                                                new NameValueCollection { { "@DoctorId-BIGINT", doctorId } });
                                            if (doctorQualificationDetail != null)
                                                if (doctorQualificationDetail.Tables[0].Rows.Count > 0)
                                                {
                                                    qulificationId = doctorQualificationDetail.Tables[0].Rows[0]["QulificationId"].ToString();
                                                }
                                                else
                                                {
                                                    returnString = "Qualification Of Doctor Not Found";
                                                    if (callExecutionDataObjectnewZSM.callType == "0") goto Error;
                                                }

                                            #endregion
                                        }
                                    }
                                    else
                                    {
                                        returnString = "Doctor Not Found in Doctor List Of MIO";
                                        if (callExecutionDataObjectnewZSM.callType == "0") goto Error;
                                    }

                                    #endregion

                                    #region Get Visit Shift

                                    var hour = Convert.ToInt32(result.ToString("HH"));

                                    string vt = callExecutionDataObjectnewZSM.VisitShift.ToString();

                                    //if (hour >= 0 && hour < 12)
                                    //{
                                    //    vt = "1";
                                    //}
                                    //else if (hour < 17)
                                    //{
                                    //    vt = "1";
                                    //}
                                    //else
                                    //{
                                    //    vt = "2";
                                    //}



                                    #endregion

                                    #region PreSalesCallInsert

                                    var getcountstand = _dl.GetData("getcountryStandardtime", new NameValueCollection { { "@employeeid-int", callExecutionDataObjectnewZSM.employeeId } });
                                    var inTimeZone = TimeZoneInfo.FindSystemTimeZoneById(getcountstand.Tables[0].Rows[0][0].ToString());
                                    DateTime inTime = TimeZoneInfo.ConvertTime(DateTime.Now, TimeZoneInfo.Local, inTimeZone);
                                    DataSet set = _dl.GetData("sp_check_call_execute_ZSM", new NameValueCollection {{ "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QualificationId-int,", qulificationId }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnewZSM.employeeId }, { "@IsPlanned-VARCHAR-50", callExecutionDataObjectnewZSM.isPlannedZSM == "No" ? "NULL" : callExecutionDataObjectnewZSM.isPlannedZSM }, { "@visitdate-datetime", result.ToString() }, });


                                    if (set != null)
                                    {


                                        if (set.Tables[0].Rows.Count > 0)
                                        {
                                            returnString = "Already Executed";
                                            if (callExecutionDataObjectnewZSM.callType == "0") goto Error;
                                        }

                                        else
                                        {
                                            if (callExecutionDataObjectnewZSM.isPlannedZSM == "No")
                                            {

                                                DataSet set2 = _dl.GetData("sp_check_CallExecuteForUnplanned_ZSM", new NameValueCollection { { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnewZSM.employeeId }, { "@visitdate-datetime", result.ToString() }, });
                                                if (set2.Tables[0].Rows.Count > 0)
                                                {
                                                    iSPlannedAsUnplanned = Convert.ToInt64(set2.Tables[0].Rows[0]["pk_CPI_CallPlannerZSMLevelID"].ToString());
                                                    var dsPreSalesCalls = _dl.GetData("sp_PreSalesCallsInsertZSM", new NameValueCollection { { "@VisitDateTime-datetime", result.ToString() }, { "@Level1LevelId-int,", level1 }, { "@Level2LevelId-int,", level2 }, { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QulificationId-int,", qulificationId }, { "@CreationDateTime-datetime", inTime.ToString() }, { "@CallTypeId-int", "1" }, { "@VisitShift-int,", vt }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnewZSM.employeeId }, { "@InboundId-bigint", "NULL" }, { "@DocCode-INT", doctorCode }, { "@IsPlannedZSM-VARCHAR-50", callExecutionDataObjectnewZSM.isPlannedZSM == "No" ? iSPlannedAsUnplanned.ToString() : callExecutionDataObjectnewZSM.isPlannedZSM }, { "@ActivityID-INT", callExecutionDataObjectnewZSM.activity }, { "@ReasonID-INT", callExecutionDataObjectnewZSM.reason } });
                                                    if (dsPreSalesCalls != null)
                                                    {
                                                        if (dsPreSalesCalls.Tables[0].Rows.Count > 0)
                                                        {
                                                            if (dsPreSalesCalls.Tables[0].Rows[0][0].ToString() == "alreadyexecuted")
                                                            {
                                                                returnString = "Already Executed";
                                                                return returnString;
                                                            }
                                                            else
                                                            {
                                                                salesCallsId = Convert.ToInt64(dsPreSalesCalls.Tables[0].Rows[0]["SalesCallId"].ToString());
                                                            }
                                                        }
                                                        else
                                                        {
                                                            returnString = "Error In Saving In PreSalesCalls";
                                                            if (callExecutionDataObjectnewZSM.callType == "0") goto Error;
                                                        }
                                                    }
                                                    else
                                                    {
                                                        returnString = "Error In Saving In PreSalesCalls";
                                                        if (callExecutionDataObjectnewZSM.callType == "0") goto Error;
                                                    }
                                                }
                                                else
                                                {
                                                    var dsPreSalesCalls = _dl.GetData("sp_PreSalesCallsInsertZSM", new NameValueCollection { { "@VisitDateTime-datetime", result.ToString() }, { "@Level1LevelId-int,", level1 }, { "@Level2LevelId-int,", level2 }, { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QulificationId-int,", qulificationId }, { "@CreationDateTime-datetime", inTime.ToString() }, { "@CallTypeId-int", "1" }, { "@VisitShift-int,", vt }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnewZSM.employeeId }, { "@InboundId-bigint", "NULL" }, { "@DocCode-INT", doctorCode }, { "@IsPlannedZSM-VARCHAR-50", callExecutionDataObjectnewZSM.isPlannedZSM == "No" ? "NULL" : callExecutionDataObjectnewZSM.isPlannedZSM }, { "@ActivityID-INT", callExecutionDataObjectnewZSM.activity }, { "@ReasonID-INT", callExecutionDataObjectnewZSM.reason } });
                                                    if (dsPreSalesCalls != null)
                                                    {
                                                        if (dsPreSalesCalls.Tables[0].Rows.Count > 0)
                                                        {
                                                            salesCallsId = Convert.ToInt64(dsPreSalesCalls.Tables[0].Rows[0]["SalesCallId"].ToString());
                                                        }
                                                        else
                                                        {
                                                            returnString = "Error In Saving In PreSalesCalls";
                                                            if (callExecutionDataObjectnewZSM.callType == "0") goto Error;
                                                        }
                                                    }
                                                    else
                                                    {
                                                        returnString = "Error In Saving In PreSalesCalls";
                                                        if (callExecutionDataObjectnewZSM.callType == "0") goto Error;
                                                    }
                                                }
                                            }
                                            else
                                            {
                                                var dsPreSalesCalls = _dl.GetData("sp_PreSalesCallsInsertZSM", new NameValueCollection { { "@VisitDateTime-datetime", result.ToString() }, { "@Level1LevelId-int,", level1 }, { "@Level2LevelId-int,", level2 }, { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QulificationId-int,", qulificationId }, { "@CreationDateTime-datetime", inTime.ToString() }, { "@CallTypeId-int", "1" }, { "@VisitShift-int,", vt }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnewZSM.employeeId }, { "@InboundId-bigint", "NULL" }, { "@DocCode-INT", doctorCode }, { "@IsPlannedZSM-VARCHAR-50", callExecutionDataObjectnewZSM.isPlannedZSM == "No" ? "NULL" : callExecutionDataObjectnewZSM.isPlannedZSM }, { "@ActivityID-INT", callExecutionDataObjectnewZSM.activity }, { "@ReasonID-INT", callExecutionDataObjectnewZSM.reason } });
                                                if (dsPreSalesCalls != null)
                                                {
                                                    if (dsPreSalesCalls.Tables[0].Rows.Count > 0)
                                                    {
                                                        salesCallsId = Convert.ToInt64(dsPreSalesCalls.Tables[0].Rows[0]["SalesCallId"].ToString());
                                                    }
                                                    else
                                                    {
                                                        returnString = "Error In Saving In PreSalesCalls";
                                                        if (callExecutionDataObjectnewZSM.callType == "0") goto Error;
                                                    }
                                                }
                                                else
                                                {
                                                    returnString = "Error In Saving In PreSalesCalls";
                                                    if (callExecutionDataObjectnewZSM.callType == "0") goto Error;
                                                }
                                            }
                                        }

                                    }

                                    else
                                    {
                                        if (callExecutionDataObjectnewZSM.isPlannedZSM == "No")
                                        {

                                            DataSet set2 = _dl.GetData("sp_check_CallExecuteForUnplanned_ZSM", new NameValueCollection { { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnewZSM.employeeId }, { "@visitdate-datetime", result.ToString() }, });
                                            if (set2.Tables[0].Rows.Count > 0)
                                            {
                                                iSPlannedAsUnplanned = Convert.ToInt64(set2.Tables[0].Rows[0]["pk_CPI_CallPlannerZSMLevelID"].ToString());
                                                var dsPreSalesCalls = _dl.GetData("sp_PreSalesCallsInsertZSM", new NameValueCollection { { "@VisitDateTime-datetime", result.ToString() }, { "@Level1LevelId-int,", level1 }, { "@Level2LevelId-int,", level2 }, { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QulificationId-int,", qulificationId }, { "@CreationDateTime-datetime", inTime.ToString() }, { "@CallTypeId-int", "1" }, { "@VisitShift-int,", vt }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnewZSM.employeeId }, { "@InboundId-bigint", "NULL" }, { "@DocCode-INT", doctorCode }, { "@IsPlannedZSM-VARCHAR-50", callExecutionDataObjectnewZSM.isPlannedZSM == "No" ? iSPlannedAsUnplanned.ToString() : callExecutionDataObjectnewZSM.isPlannedZSM }, { "@ActivityID-INT", callExecutionDataObjectnewZSM.activity }, { "@ReasonID-INT", callExecutionDataObjectnewZSM.reason } });
                                                if (dsPreSalesCalls != null)
                                                {
                                                    if (dsPreSalesCalls.Tables[0].Rows.Count > 0)
                                                    {
                                                        if (dsPreSalesCalls.Tables[0].Rows[0][0].ToString() == "alreadyexecuted")
                                                        {
                                                            returnString = "Already Executed";
                                                            return returnString;
                                                        }
                                                        else
                                                        {
                                                            salesCallsId = Convert.ToInt64(dsPreSalesCalls.Tables[0].Rows[0]["SalesCallId"].ToString());
                                                        }
                                                    }
                                                    else
                                                    {
                                                        returnString = "Error In Saving In PreSalesCalls";
                                                        if (callExecutionDataObjectnewZSM.callType == "0") goto Error;
                                                    }
                                                }
                                                else
                                                {
                                                    returnString = "Error In Saving In PreSalesCalls";
                                                    if (callExecutionDataObjectnewZSM.callType == "0") goto Error;
                                                }
                                            }
                                            else
                                            {
                                                var dsPreSalesCalls = _dl.GetData("sp_PreSalesCallsInsertZSM", new NameValueCollection { { "@VisitDateTime-datetime", result.ToString() }, { "@Level1LevelId-int,", level1 }, { "@Level2LevelId-int,", level2 }, { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QulificationId-int,", qulificationId }, { "@CreationDateTime-datetime", inTime.ToString() }, { "@CallTypeId-int", "1" }, { "@VisitShift-int,", vt }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnewZSM.employeeId }, { "@InboundId-bigint", "NULL" }, { "@DocCode-INT", doctorCode }, { "@IsPlannedZSM-VARCHAR-50", callExecutionDataObjectnewZSM.isPlannedZSM == "No" ? "NULL" : callExecutionDataObjectnewZSM.isPlannedZSM }, { "@ActivityID-INT", callExecutionDataObjectnewZSM.activity }, { "@ReasonID-INT", callExecutionDataObjectnewZSM.reason } });
                                                if (dsPreSalesCalls != null)
                                                {
                                                    if (dsPreSalesCalls.Tables[0].Rows.Count > 0)
                                                    {
                                                        salesCallsId = Convert.ToInt64(dsPreSalesCalls.Tables[0].Rows[0]["SalesCallId"].ToString());
                                                    }
                                                    else
                                                    {
                                                        returnString = "Error In Saving In PreSalesCalls";
                                                        if (callExecutionDataObjectnewZSM.callType == "0") goto Error;
                                                    }
                                                }
                                                else
                                                {
                                                    returnString = "Error In Saving In PreSalesCalls";
                                                    if (callExecutionDataObjectnewZSM.callType == "0") goto Error;
                                                }
                                            }
                                        }
                                        else
                                        {
                                            var dsPreSalesCalls = _dl.GetData("sp_PreSalesCallsInsertZSM", new NameValueCollection { { "@VisitDateTime-datetime", result.ToString() }, { "@Level1LevelId-int,", level1 }, { "@Level2LevelId-int,", level2 }, { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QulificationId-int,", qulificationId }, { "@CreationDateTime-datetime", inTime.ToString() }, { "@CallTypeId-int", "1" }, { "@VisitShift-int,", vt }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnewZSM.employeeId }, { "@InboundId-bigint", "NULL" }, { "@DocCode-INT", doctorCode }, { "@IsPlannedZSM-VARCHAR-50", callExecutionDataObjectnewZSM.isPlannedZSM == "No" ? "NULL" : callExecutionDataObjectnewZSM.isPlannedZSM }, { "@ActivityID-INT", callExecutionDataObjectnewZSM.activity }, { "@ReasonID-INT", callExecutionDataObjectnewZSM.reason } });
                                            if (dsPreSalesCalls != null)
                                            {
                                                if (dsPreSalesCalls.Tables[0].Rows.Count > 0)
                                                {
                                                    salesCallsId = Convert.ToInt64(dsPreSalesCalls.Tables[0].Rows[0]["SalesCallId"].ToString());
                                                }
                                                else
                                                {
                                                    returnString = "Error In Saving In PreSalesCalls";
                                                    if (callExecutionDataObjectnewZSM.callType == "0") goto Error;
                                                }
                                            }
                                            else
                                            {
                                                returnString = "Error In Saving In PreSalesCalls";
                                                if (callExecutionDataObjectnewZSM.callType == "0") goto Error;
                                            }
                                        }
                                    }


                                    #endregion

                                    if (salesCallsId != 0)
                                    {
                                        #region Mobile Exec Time
                                        if (callExecutionDataObjectnewZSM.executionDateTime != null)
                                        {
                                            DateTime result1 = Convert.ToDateTime(result.ToShortDateString());
                                            DateTime executedDateTime1 = Convert.ToDateTime(executedDateTime.ToShortDateString());

                                            if (result1 < executedDateTime1)
                                            {
                                                executedDateTime = result;
                                            }

                                            _nvCollection.Clear();
                                            _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                            _nvCollection.Add("@mobexectime-datetime", executedDateTime.ToString());

                                            var mac = _dl.GetData("sp_Insert_MobExecutionTime", _nvCollection);
                                        }
                                        #endregion

                                        #region CallDoctors


                                        // ReSharper disable once UnusedVariable
                                        if (_dataContext != null)
                                        {
                                            var insertCallDoctors = _dataContext.sp_CallDoctorsInsert(salesCallsId, Convert.ToInt64(doctorId)).ToList();
                                        }

                                        #endregion

                                        #region CallVisitors
                                        if (!Convert.ToBoolean(callExecutionDataObjectnewZSM.coaching))
                                        {
                                            // ReSharper disable once UnusedVariable
                                            var dsIsCoaching = _dl.InserData("sp_InsertCallCoaching", new NameValueCollection {
                                                    {"@SalesCallId-INT", salesCallsId.ToString()},
                                                    {"@IsCoaching-VARCHAR-50", "0"}
                                            });
                                        }
                                        else
                                        {
                                            // ReSharper disable once UnusedVariable
                                            var dsIsCoaching = _dl.InserData("sp_InsertCallCoaching", new NameValueCollection {
                                                {"@SalesCallId-INT", salesCallsId.ToString()},
                                                {"@IsCoaching-VARCHAR-50", "1"}
                                            });
                                        }
                                        long jvflma = 0;
                                        long jvslma = 0;
                                        long jvftma = callExecutionDataObjectnewZSM.jvftm == "true" ? 1 : 0;
                                        //NSM
                                        long jvbuha = 0;
                                        //GM
                                        long jvgma = 0;
                                        long jvcooa = callExecutionDataObjectnewZSM.jvcoo == "true" ? 1 : 0;
                                        long jvcda = callExecutionDataObjectnewZSM.jvcd == "true" ? 1 : 0;
                                        long jvpma = callExecutionDataObjectnewZSM.jvpm == "true" ? 1 : 0;
                                        if (Convert.ToBoolean(callExecutionDataObjectnewZSM.jvflm))
                                        {
                                            var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnewZSM.employeeId } });
                                            if (dsFlm != null)
                                            {
                                                if (dsFlm.Tables[0].Rows.Count > 0)
                                                {
                                                    jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
                                                }
                                            }
                                        }
                                        if (Convert.ToBoolean(callExecutionDataObjectnewZSM.jvslm))
                                        {
                                            var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnewZSM.employeeId } });
                                            if (dsFlm != null)
                                            {
                                                if (dsFlm.Tables[0].Rows.Count > 0)
                                                {
                                                    jvslma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
                                                    //jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
                                                    //var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(jvflma) } });
                                                    //if (dsSlm != null)
                                                    //{
                                                    //    if (dsSlm.Tables[0].Rows.Count > 0)
                                                    //    {
                                                    //        jvslma = Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString());
                                                    //    }
                                                    //}
                                                }
                                            }
                                        }
                                        //Check if Joint Visit is with NSM
                                        if (Convert.ToBoolean(callExecutionDataObjectnewZSM.jvbuh))
                                        {
                                            var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnewZSM.employeeId } });
                                            if (dsFlm != null)
                                            {
                                                if (dsFlm.Tables[0].Rows.Count > 0)
                                                {
                                                    jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
                                                    //var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(jvflma) } });
                                                    var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });
                                                    if (dsSlm != null)
                                                    {
                                                        if (dsSlm.Tables[0].Rows.Count > 0)
                                                        {
                                                            jvslma = Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString());
                                                            var dsBuh = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });

                                                            if (dsBuh != null)
                                                            {
                                                                if (dsBuh.Tables[0].Rows.Count > 0)
                                                                {
                                                                    jvbuha = Convert.ToInt64(dsBuh.Tables[0].Rows[0]["ManagerId"].ToString());
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        //Check if Joint Visit is with GM
                                        if (Convert.ToBoolean(callExecutionDataObjectnewZSM.jvgm))
                                        {
                                            var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnewZSM.employeeId } });
                                            if (dsFlm != null)
                                            {
                                                if (dsFlm.Tables[0].Rows.Count > 0)
                                                {
                                                    jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
                                                    //var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(jvflma) } });
                                                    var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });
                                                    if (dsSlm != null)
                                                    {
                                                        if (dsSlm.Tables[0].Rows.Count > 0)
                                                        {
                                                            jvslma = Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString());
                                                            var dsBuh = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });

                                                            if (dsBuh != null)
                                                            {
                                                                if (dsBuh.Tables[0].Rows.Count > 0)
                                                                {
                                                                    jvbuha = Convert.ToInt64(dsBuh.Tables[0].Rows[0]["ManagerId"].ToString());
                                                                    var dsGm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsBuh.Tables[0].Rows[0]["ManagerId"].ToString())) } });
                                                                    if (dsGm != null)
                                                                    {
                                                                        if (dsGm.Tables[0].Rows.Count > 0)
                                                                        {
                                                                            jvgma = Convert.ToInt64((dsGm.Tables[0].Rows[0]["ManagerId"].ToString() == "" ? "1" : dsGm.Tables[0].Rows[0]["ManagerId"].ToString()));
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        jvflma = callExecutionDataObjectnewZSM.jvflm == "true" ? jvflma : 0;
                                        jvslma = callExecutionDataObjectnewZSM.jvslm == "true" ? jvslma : 0;
                                        jvbuha = callExecutionDataObjectnewZSM.jvbuh == "true" ? jvbuha : 0;
                                        jvgma = callExecutionDataObjectnewZSM.jvgm == "true" ? jvgma : 0;

                                        //if (Convert.ToBoolean(callExecutionDataObject.jvho1))
                                        //{
                                        //    jvHO1 = 1;
                                        //}
                                        //if (Convert.ToBoolean(callExecutionDataObject.jvho2))
                                        //{
                                        //    jvHO2 = 1;
                                        //}
                                        //// ReSharper disable once UnusedVariable
                                        long? nullable = null;
                                        if (_dataContext != null)
                                        {
                                            /* var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew(salesCallsId, Convert.ToInt64(callExecutionDataObject.employeeId),
                                                 ((jvflma == 0) ? nullable : jvflma),
                                                 ((jvslma == 0) ? nullable : jvslma),
                                                 ((jvHO1 == 0) ? nullable : jvHO1),
                                                 ((jvHO2 == 0) ? nullable : jvHO2)).ToList();*/
                                            var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew_withjv8(salesCallsId,
                                                Convert.ToInt64(callExecutionDataObjectnewZSM.employeeId),
                                                (!(Convert.ToBoolean(callExecutionDataObjectnewZSM.jvflm)) ? nullable : jvflma),
                                                (!(Convert.ToBoolean(callExecutionDataObjectnewZSM.jvslm)) ? nullable : jvslma),
                                                (!(Convert.ToBoolean(callExecutionDataObjectnewZSM.jvftm)) ? nullable : jvftma),
                                                (!(Convert.ToBoolean(callExecutionDataObjectnewZSM.jvbuh)) ? nullable : jvbuha),
                                                //ye parameter sahih lgane hain filhal temporary lgaye hen 
                                                (!(Convert.ToBoolean(callExecutionDataObjectnewZSM.jvgm)) ? nullable : jvgma),
                                                (!(Convert.ToBoolean(callExecutionDataObjectnewZSM.jvcoo)) ? nullable : jvcooa),
                                                (!(Convert.ToBoolean(callExecutionDataObjectnewZSM.jvcd)) ? nullable : jvcda),
                                                (!(Convert.ToBoolean(callExecutionDataObjectnewZSM.jvpm)) ? nullable : jvpma)
                                            ).ToList();

                                            /*if (jvflma == 0 && jvslma == 0)
                                            {
                                                var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew(salesCallsId, Convert.ToInt64(callExecutionDataObject.employeeId), null, null, null, null).ToList();
                                            }
                                            else
                                            {
                                                var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew(salesCallsId, Convert.ToInt64(callExecutionDataObject.employeeId), jvflma, jvslma, 0, 0).ToList();
                                            }*/

                                        }

                                        #endregion

                                        #region VisitFeedBack

                                        if (_dataContext != null)
                                        {
                                            // ReSharper disable once UnusedVariable
                                            var insertFeedBack = _dataContext.sp_VisitFeedBackInsert(salesCallsId, callExecutionDataObjectnewZSM.callNotes).ToList();
                                        }

                                        #endregion

                                        #region CallProducts

                                        // ReSharper disable once NotAccessedVariable
                                        List<CallProduct> insertCallProduct;

                                        if (callExecutionDataObjectnewZSM.product1 != "-1")
                                        {
                                            if (_dataContext != null)
                                            {
                                                // ReSharper disable once RedundantAssignment
                                                //insertCallProduct =
                                                //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product1), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product1), 1).ToList();
                                                insertCallProduct =
                                                    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnewZSM.product1), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnewZSM.product1), 1).ToList();

                                                if (callExecutionDataObjectnewZSM.p1Notes != "" && insertCallProduct.Count > 0)
                                                {
                                                    var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
                                                        new NameValueCollection {
                                                { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() },
                                                { "@Comment-varchar(max),", callExecutionDataObjectnewZSM.p1Notes}
                                            });
                                                }
                                            }


                                        }


                                        if (callExecutionDataObjectnewZSM.product2 != "-1")
                                        {
                                            if (_dataContext != null)
                                            {
                                                // ReSharper disable once RedundantAssignment
                                                //insertCallProduct =
                                                //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product2), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product1), 2).ToList();
                                                insertCallProduct =
                                                    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnewZSM.product2), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnewZSM.product2), 2).ToList();

                                                if (callExecutionDataObjectnewZSM.p2Notes != "" && insertCallProduct.Count > 0)
                                                {
                                                    var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
                                                        new NameValueCollection {
                                                { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() },
                                                { "@Comment-varchar(max),", callExecutionDataObjectnewZSM.p2Notes}
                                            });
                                                }

                                            }
                                        }

                                        if (callExecutionDataObjectnewZSM.product3 != "-1")
                                        {
                                            if (_dataContext != null)
                                            {
                                                // ReSharper disable once RedundantAssignment
                                                //insertCallProduct =
                                                //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product3), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product3), 3).ToList();
                                                insertCallProduct =
                                                    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnewZSM.product3), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnewZSM.product3), 3).ToList();

                                                if (callExecutionDataObjectnewZSM.p3Notes != "" && insertCallProduct.Count > 0)
                                                {
                                                    var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
                                                        new NameValueCollection {
                                                { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() },
                                                { "@Comment-varchar(max),", callExecutionDataObjectnewZSM.p3Notes}
                                            });
                                                }
                                            }
                                        }

                                        if (callExecutionDataObjectnewZSM.product4 != "-1")
                                        {
                                            if (_dataContext != null)
                                            {
                                                // ReSharper disable once RedundantAssignment
                                                //insertCallProduct =
                                                //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product4), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product4), 4).ToList();
                                                insertCallProduct =
                                                    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnewZSM.product4), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnewZSM.product4), 4).ToList();

                                                if (callExecutionDataObjectnewZSM.p4Notes != "" && insertCallProduct.Count > 0)
                                                {
                                                    var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
                                                        new NameValueCollection {
                                                { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() },
                                                { "@Comment-varchar(max),", callExecutionDataObjectnewZSM.p4Notes}
                                            });
                                                }
                                            }

                                        }



                                        #endregion

                                        #region CallProductSamples

                                        if (callExecutionDataObjectnewZSM.sample1 != "-1" && callExecutionDataObjectnewZSM.sampleQty1 != "")
                                        {

                                            // var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample1 } });

                                            // int SampleProdID1 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());


                                            var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObjectnewZSM.sample1 } });

                                            int SampleProdID1 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
                                            _nvCollection.Clear();
                                            _nvCollection.Add("@mioid-int", callExecutionDataObjectnewZSM.employeeId.ToString());
                                            _nvCollection.Add("@sample_id-int", callExecutionDataObjectnewZSM.sample1.ToString());
                                            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                                            _nvCollection.Add("@month-int", smsmonth.ToString());
                                            _nvCollection.Add("@year-int", smsyear.ToString());
                                            var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
                                            if (checkSample1Balance.Tables[0].Rows.Count > 0)
                                            {
                                                int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
                                                int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
                                                int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

                                                if (balnc >= (qty + opening))
                                                {

                                                }
                                                else if ((Convert.ToInt32(callExecutionDataObjectnewZSM.sampleQty1) + balnc) > (qty + opening))
                                                {

                                                }
                                                else
                                                {
                                                    var newbalance = Convert.ToInt32(callExecutionDataObjectnewZSM.sampleQty1) + balnc;
                                                    _nvCollection.Clear();
                                                    _nvCollection.Add("@mioid-int", callExecutionDataObjectnewZSM.employeeId.ToString());
                                                    _nvCollection.Add("@sample_id-int", callExecutionDataObjectnewZSM.sample1.ToString());
                                                    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                                                    _nvCollection.Add("@Qty-int", newbalance.ToString());
                                                    _nvCollection.Add("@month-int", smsmonth.ToString());
                                                    _nvCollection.Add("@year-int", smsyear.ToString());
                                                    var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

                                                    _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID1, Convert.ToInt32(callExecutionDataObjectnewZSM.sample1), Convert.ToInt32(callExecutionDataObjectnewZSM.sampleQty1), 1).ToList();
                                                }
                                            }

                                        }

                                        if (callExecutionDataObjectnewZSM.sample2 != "-1" && callExecutionDataObjectnewZSM.sampleQty2 != "")
                                        {
                                            // var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample2 } });

                                            // int SampleProdID2 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

                                            // _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID2, Convert.ToInt32(callExecutionDataObject.sample2), Convert.ToInt32(callExecutionDataObject.sampleQty2), 2).ToList();


                                            var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObjectnewZSM.sample2 } });

                                            int SampleProdID2 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
                                            // int SampleProdID2 = Convert.ToInt32(sample2);
                                            _nvCollection.Clear();
                                            _nvCollection.Add("@mioid-int", callExecutionDataObjectnewZSM.employeeId.ToString());
                                            _nvCollection.Add("@sample_id-int", callExecutionDataObjectnewZSM.sample2.ToString());
                                            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                                            _nvCollection.Add("@month-int", smsmonth.ToString());
                                            _nvCollection.Add("@year-int", smsyear.ToString());
                                            var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
                                            if (checkSample1Balance.Tables[0].Rows.Count > 0)
                                            {
                                                int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
                                                int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
                                                int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

                                                if (balnc >= (qty + opening))
                                                {

                                                }
                                                else if ((Convert.ToInt32(callExecutionDataObjectnewZSM.sampleQty2) + balnc) > (qty + opening))
                                                {

                                                }
                                                else
                                                {
                                                    var newbalance = Convert.ToInt32(callExecutionDataObjectnewZSM.sampleQty2) + balnc;
                                                    _nvCollection.Clear();
                                                    _nvCollection.Add("@mioid-int", callExecutionDataObjectnewZSM.employeeId.ToString());
                                                    _nvCollection.Add("@sample_id-int", callExecutionDataObjectnewZSM.sample2.ToString());
                                                    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                                                    _nvCollection.Add("@Qty-int", newbalance.ToString());
                                                    _nvCollection.Add("@month-int", smsmonth.ToString());
                                                    _nvCollection.Add("@year-int", smsyear.ToString());
                                                    var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

                                                    _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID2, Convert.ToInt32(callExecutionDataObjectnewZSM.sample2), Convert.ToInt32(callExecutionDataObjectnewZSM.sampleQty2), 2).ToList();
                                                }
                                            }

                                        }

                                        if (callExecutionDataObjectnewZSM.sample3 != "-1" && callExecutionDataObjectnewZSM.sampleQty3 != "")
                                        {

                                            // var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample3 } });

                                            //   int SampleProdID3 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

                                            //   _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID3, Convert.ToInt32(callExecutionDataObject.sample3), Convert.ToInt32(callExecutionDataObject.sampleQty3), 3).ToList();

                                            var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObjectnewZSM.sample3 } });

                                            int SampleProdID3 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
                                            //  int SampleProdID3 = Convert.ToInt32(sample3);
                                            _nvCollection.Clear();
                                            _nvCollection.Add("@mioid-int", callExecutionDataObjectnewZSM.employeeId.ToString());
                                            _nvCollection.Add("@sample_id-int", callExecutionDataObjectnewZSM.sample3.ToString());
                                            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                                            _nvCollection.Add("@month-int", smsmonth.ToString());
                                            _nvCollection.Add("@year-int", smsyear.ToString());
                                            var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
                                            if (checkSample1Balance.Tables[0].Rows.Count > 0)
                                            {
                                                int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
                                                int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
                                                int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

                                                if (balnc >= (qty + opening))
                                                {

                                                }
                                                else if ((Convert.ToInt32(callExecutionDataObjectnewZSM.sampleQty3) + balnc) > (qty + opening))
                                                {

                                                }
                                                else
                                                {
                                                    var newbalance = Convert.ToInt32(callExecutionDataObjectnewZSM.sampleQty3) + balnc;
                                                    _nvCollection.Clear();
                                                    _nvCollection.Add("@mioid-int", callExecutionDataObjectnewZSM.employeeId.ToString());
                                                    _nvCollection.Add("@sample_id-int", callExecutionDataObjectnewZSM.sample3.ToString());
                                                    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                                                    _nvCollection.Add("@Qty-int", newbalance.ToString());
                                                    _nvCollection.Add("@month-int", smsmonth.ToString());
                                                    _nvCollection.Add("@year-int", smsyear.ToString());
                                                    var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

                                                    _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID3, Convert.ToInt32(callExecutionDataObjectnewZSM.sample3), Convert.ToInt32(callExecutionDataObjectnewZSM.sampleQty3), 3).ToList();
                                                }
                                            }

                                        }


                                        //if (callExecutionDataObject.sample4 != "-1" && callExecutionDataObject.sampleQty4 != "")
                                        //{

                                        //  //  var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample4 } });

                                        // //   int SampleProdID4 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

                                        //  //  _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID4, Convert.ToInt32(callExecutionDataObject.sample4), Convert.ToInt32(callExecutionDataObject.sampleQty4), 4).ToList();

                                        //    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample4 } });

                                        //    int SampleProdID4 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
                                        //    //int SampleProdID4 = Convert.ToInt32(sample4);
                                        //    _nvCollection.Clear();
                                        //    _nvCollection.Add("@mioid-int", callExecutionDataObject.employeeId.ToString());
                                        //    _nvCollection.Add("@sample_id-int", callExecutionDataObject.sample4.ToString());
                                        //    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                                        //    _nvCollection.Add("@month-int", smsmonth.ToString());
                                        //    _nvCollection.Add("@year-int", smsyear.ToString());
                                        //    var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
                                        //    if (checkSample1Balance.Tables[0].Rows.Count > 0)
                                        //    {
                                        //        int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
                                        //        int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
                                        //        int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

                                        //        if (balnc >= (qty + opening))
                                        //        {

                                        //        }
                                        //        else if ((Convert.ToInt32(callExecutionDataObject.sampleQty4) + balnc) > (qty + opening))
                                        //        {

                                        //        }
                                        //        else
                                        //        {
                                        //            var newbalance = Convert.ToInt32(callExecutionDataObject.sampleQty4) + balnc;
                                        //            _nvCollection.Clear();
                                        //            _nvCollection.Add("@mioid-int", callExecutionDataObject.employeeId.ToString());
                                        //            _nvCollection.Add("@sample_id-int", callExecutionDataObject.sample1.ToString());
                                        //            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                                        //            _nvCollection.Add("@Qty-int", newbalance.ToString());
                                        //            _nvCollection.Add("@month-int", smsmonth.ToString());
                                        //            _nvCollection.Add("@year-int", smsyear.ToString());
                                        //            var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

                                        //            _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID4, Convert.ToInt32(callExecutionDataObject.sample4), Convert.ToInt32(callExecutionDataObject.sampleQty4), 4).ToList();
                                        //        }
                                        //    }

                                        //}

                                        //if (callExecutionDataObject.sample5 != "-1" && callExecutionDataObject.sampleQty5 != "")
                                        //{

                                        //    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample5 } });

                                        //    int SampleProdID5 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

                                        //    _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID5, Convert.ToInt32(callExecutionDataObject.sample5), Convert.ToInt32(callExecutionDataObject.sampleQty5), 5).ToList();

                                        //}

                                        #endregion

                                        #region CallReminder

                                        if (callExecutionDataObjectnewZSM.reminder1 != "-1")
                                        {
                                            _dl.InserData("sp_CallReminderInsert", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@DetailReminder-int", callExecutionDataObjectnewZSM.reminder1 }, { "@OrderBy-int", "1" } });
                                        }

                                        if (callExecutionDataObjectnewZSM.reminder2 != "-1")
                                        {
                                            _dl.InserData("sp_CallReminderInsert", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@DetailReminder-int", callExecutionDataObjectnewZSM.reminder2 }, { "@OrderBy-int", "2" } });
                                        }

                                        if (callExecutionDataObjectnewZSM.reminder3 != "-1")
                                        {
                                            _dl.InserData("sp_CallReminderInsert", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@DetailReminder-int", callExecutionDataObjectnewZSM.reminder3 }, { "@OrderBy-int", "3" } });
                                        }


                                        #endregion

                                        #region CallGifts

                                        // ReSharper disable once NotAccessedVariable
                                        List<CallGift> insertCallGift;

                                        if (callExecutionDataObjectnewZSM.gift != "-1")
                                        {
                                            // ReSharper disable once RedundantAssignment
                                            insertCallGift = callExecutionDataObjectnewZSM.giftQty != "" ? _dataContext.sp_CallGiftsInsert(salesCallsId, Convert.ToInt32(callExecutionDataObjectnewZSM.gift), Convert.ToInt32(callExecutionDataObjectnewZSM.giftQty), 1).ToList() : _dataContext.sp_CallGiftsInsert(salesCallsId, Convert.ToInt32(callExecutionDataObjectnewZSM.gift), 0, 1).ToList();
                                        }


                                        #endregion

                                        #region MacAddress
                                        // macaddress = "123.213.163";
                                        if (callExecutionDataObjectnewZSM.macaddress != null)
                                        {
                                            _nvCollection.Clear();
                                            _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                            _nvCollection.Add("@EmployesID-int", callExecutionDataObjectnewZSM.employeeId.ToString());
                                            _nvCollection.Add("@macaddress-varchar(50)", callExecutionDataObjectnewZSM.macaddress.ToString());

                                            var mac = _dl.GetData("sp_insert_macaddress", _nvCollection);
                                        }
                                        #endregion

                                        #region Location
                                        if (callExecutionDataObjectnewZSM.longitude != null && callExecutionDataObjectnewZSM.latitude != null)
                                        {
                                            _nvCollection.Clear();
                                            _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                            _nvCollection.Add("@long-varchar(100)", callExecutionDataObjectnewZSM.longitude.ToString());
                                            _nvCollection.Add("@lat-varchar(100)", callExecutionDataObjectnewZSM.latitude.ToString());
                                            var ch = _dl.GetData("sp_Insert_Location", _nvCollection);
                                        }

                                        #endregion

                                        #region Fake Users Calls Data

                                        try
                                        {
                                            if (callExecutionDataObjectnewZSM.flag != null)
                                            {
                                                _nvCollection.Clear();

                                                _nvCollection.Clear();
                                                _nvCollection.Add("@SalesCalID-int", salesCallsId.ToString());
                                                _nvCollection.Add("@Flag-int", ((Convert.ToBoolean(callExecutionDataObjectnewZSM.flag.ToString())) ? "1" : "0"));
                                                _nvCollection.Add("@AppVersion-varchar(100)", callExecutionDataObjectnewZSM.appversion);
                                                _nvCollection.Add("@MacAddress-varchar(100)", callExecutionDataObjectnewZSM.macaddress);
                                                _nvCollection.Add("@ApplicationPackages-text", callExecutionDataObjectnewZSM.applicationpackages);
                                                _nvCollection.Add("@ModelNumber-text", callExecutionDataObjectnewZSM.modelnumber);
                                                var ch = _dl.GetData("sp_fakeUsersData", _nvCollection);


                                            }
                                        }
                                        catch (Exception)
                                        {

                                            //throw;
                                        }



                                        #endregion

                                        #region Range


                                        if (range.ToString() != "")
                                        {


                                            var rangestatus = _dl.GetData("sp_insertrangestatus", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@RangeStatus-varchar(50)", range.ToString() }, { "@Distance-varchar(100)", distanceInMeters.ToString() } });
                                        }
                                        else
                                        {
                                            var rangestatus = _dl.GetData("sp_insertrangestatus", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@RangeStatus-varchar(50)", "NewTag" }, { "@Distance-varchar(100)", "0.0" } });
                                        }

                                        #endregion

                                        #region Doctortagging Old

                                        //string address = "";
                                        //long doctorid;
                                        //var dsDoctorTagPermision = _dl.GetData("sp_DoctorTagPermision", new NameValueCollection { { "@DoctorID-INT", doctorId } });
                                        //if (dsDoctorTagPermision != null)
                                        //{
                                        //    if (dsDoctorTagPermision.Tables[0].Rows.Count > 0)
                                        //    {
                                        //        doctorid = Convert.ToInt64(dsDoctorTagPermision.Tables[0].Rows[0]["DoctorID"].ToString());
                                        //        string url = "http://maps.googleapis.com/maps/api/geocode/xml?latlng=" + callExecutionDataObjectnewZSM.latitude.ToString() + "," + callExecutionDataObjectnewZSM.longitude.ToString() + "&sensor=false";
                                        //        WebRequest request = WebRequest.Create(url);
                                        //        using (WebResponse response = (HttpWebResponse)request.GetResponse())
                                        //        {
                                        //            using (StreamReader reader = new StreamReader(response.GetResponseStream(), Encoding.UTF8))
                                        //            {
                                        //                // empid = dt.Rows[i]["EmployeeId"].ToString();
                                        //                DataSet dsResult = new DataSet();
                                        //                dsResult.ReadXml(reader);//format in xml
                                        //                DataTable dtCoordinates = new DataTable();
                                        //                dtCoordinates.Columns.AddRange(new DataColumn[1] { new DataColumn("AreaAddress", typeof(string)) });

                                        //                if (dsResult.Tables.Count > 1)
                                        //                {
                                        //                    var data = dsResult.Tables[1];
                                        //                    var add1 = data.Rows[0]["formatted_address"].ToString();
                                        //                    var add2 = data.Rows[2]["formatted_address"].ToString();
                                        //                    string split = add1.Split(',')[0];
                                        //                    address = split + " " + add2;
                                        //                    // dt.Rows[i]["Address"] = address;
                                        //                }


                                        //            }
                                        //        }
                                        //    }

                                        //}

                                        #endregion

                                        #region Doctor Location Old

                                        //if (callExecutionDataObjectnewZSM.longitude != null && callExecutionDataObjectnewZSM.latitude != null)
                                        //{
                                        //    _nvCollection.Clear();
                                        //    _nvCollection.Add("@DoctorID-int", doctorId.ToString());

                                        //    DataSet dsloccount = _dl.GetData("sp_CountDoctorTagging", _nvCollection);

                                        //    if (dsloccount.Tables[0].Rows.Count < 1)
                                        //    {
                                        //        _nvCollection.Clear();
                                        //        _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                        //        _nvCollection.Add("@DoctorID-int", doctorId.ToString());
                                        //        _nvCollection.Add("@VisitShift-int", vt);
                                        //        _nvCollection.Add("@long-varchar(100)", callExecutionDataObjectnewZSM.longitude.ToString());
                                        //        _nvCollection.Add("@lat-varchar(100)", callExecutionDataObjectnewZSM.latitude.ToString());
                                        //        _nvCollection.Add("@Address-varchar(MAX)", address.ToString());
                                        //        var ch = _dl.GetData("sp_Insert_DoctorTagging", _nvCollection);
                                        //    }

                                        //}

                                        #endregion

                                        //-------------------------------------------------------------------------------------- Long Lat acc to wilson -----------------------------------------------//

                                        #region Doctortagging New 06/09/2023

                                         string address = "";

                                        //string apiKey = MapApiKey();
                                        //string url = string.Format("https://eu1.locationiq.com/v1/reverse.php?key={0}&lat={1}&lon={2}&format=xml", apiKey, callExecutionDataObjectnew.latitude.ToString(), callExecutionDataObjectnew.longitude.ToString());

                                        string url = "http://maps.googleapis.com/maps/api/geocode/xml?latlng=" + callExecutionDataObjectnewZSM.latitude.ToString() + "," + callExecutionDataObjectnewZSM.longitude.ToString() + "&sensor=false";
                                        //        WebRequest request = WebRequest.Create(url);
                                        //        using (WebResponse response = (HttpWebResponse)request.GetResponse())

                                        try
                                        {


                                            WebRequest request = WebRequest.Create(url);
                                            using (WebResponse response = (HttpWebResponse)request.GetResponse())
                                            {
                                                using (StreamReader reader = new StreamReader(response.GetResponseStream(), Encoding.UTF8))
                                                {
                                                    DataSet dsResult = new DataSet();
                                                    dsResult.ReadXml(reader);//format in xml
                                                    DataTable dtCoordinates = new DataTable();
                                                    dtCoordinates.Columns.AddRange(new DataColumn[1] { new DataColumn("AreaAddress", typeof(string)) });

                                                    if (dsResult.Tables.Count > 1)
                                                    {
                                                        var data = dsResult.Tables[1];
                                                        var add1 = data.Rows[0]["result_text"].ToString();
                                                        address = add1;
                                                    }

                                                }
                                            }


                                        }
                                        catch (Exception)
                                        {


                                        }

                                        #endregion

                                        #region Doctor Location New 

                                        if (callExecutionDataObjectnewZSM.longitude != null && callExecutionDataObjectnewZSM.latitude != null)
                                        {

                                            _nvCollection.Clear();
                                            _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                            _nvCollection.Add("@DoctorID-int", doctorId.ToString());
                                            //_nvCollection.Add("@VisitShift-int", vt);
                                            _nvCollection.Add("@VisitShift-varchar(250)", callExecutionDataObjectnewZSM.VisitShift.ToString());
                                            _nvCollection.Add("@lat-varchar(100)", callExecutionDataObjectnewZSM.latitude.ToString());
                                            _nvCollection.Add("@long-varchar(100)", callExecutionDataObjectnewZSM.longitude.ToString());
                                            _nvCollection.Add("@Address-varchar(MAX)", callExecutionDataObjectnewZSM.Doc_Address);
                                            var ch = _dl.GetData("sp_Insert_DoctorTaggingwithmultipleaddress", _nvCollection);
                                            //var ch = _dl.GetData("sp_Insert_DoctorTagging", _nvCollection);
                                            //}

                                        }
                                        #endregion

                                        //--------------------------------------------- End ----------------------------------------------------//


                                    }
                                }


                                #region EdetailingJson Data Deserialization
                                try
                                {
                                    var resultEdetailingJson = JsonConvert.DeserializeObject<EdetailingObject[]>(callExecutionDataObjectnewZSM.EdetailingJson);
                                    for (int j = 0; j < resultEdetailingJson.Length; j++)
                                    {
                                        var resultEdetailingObject = resultEdetailingJson[j];
                                        _nvCollection.Clear();
                                        _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                        _nvCollection.Add("@PDFId-int", resultEdetailingObject.pdfid);
                                        _nvCollection.Add("@PageNumId-int", resultEdetailingObject.pagenumber);
                                        _nvCollection.Add("@TimeDuration-varchar(50)", resultEdetailingObject.timeduration);
                                        _nvCollection.Add("@Type-int", "1"); //Type ID of PDF
                                        var ch = _dl.GetData("sp_InsertPDFCallMonitor", _nvCollection);
                                    }
                                }
                                catch (Exception ex)
                                {

                                }
                                #endregion

                                #region VideoEdetailingJson Data Deserialization

                                try
                                {
                                    var resultVideoJson = JsonConvert.DeserializeObject<VideoObject[]>(callExecutionDataObjectnewZSM.videosDetailingJson);
                                    if (resultVideoJson != null)
                                    {
                                        for (int j = 0; j < resultVideoJson.Length; j++)
                                        {
                                            var resultVideoObject = resultVideoJson[j];
                                            _nvCollection.Clear();
                                            _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                            _nvCollection.Add("@PDFId-int", resultVideoObject.videoid);
                                            _nvCollection.Add("@PageNumId-int", resultVideoObject.videoduration);
                                            _nvCollection.Add("@TimeDuration-varchar(50)", resultVideoObject.timeduration);
                                            _nvCollection.Add("@Type-int", "2"); //Type ID of Video 
                                            var ch = _dl.GetData("sp_InsertPDFCallMonitor", _nvCollection);
                                        }
                                    }
                                }
                                catch (Exception ex)
                                {
                                    //    Constants.CallErrorLog("Error on Video Detailing Insertion: " + ex.Message);

                                }
                                #endregion

                                #region SurveyJson Data Deserialization

                                var SurveyData = JsonConvert.DeserializeObject<SurveyMainUploadDataObject[]>(callExecutionDataObjectnewZSM.surveyFormJson);
                                for (int k = 0; k < SurveyData.Length; k++)
                                {
                                    SurveyMainUploadDataObject var_surveymainupload = SurveyData[i];
                                    string Sdate = "";
                                    string SuerveyId = "";

                                    Sdate = var_surveymainupload.SurveyDateTime;
                                    if (!DateTime.TryParse(Sdate, out result))
                                    {
                                        returnString = "Survey DateTime Format Is invalid";
                                    }

                                    var getAllQuestions = JsonConvert.DeserializeObject<List<SurveyDataUploadDataObject>>(var_surveymainupload.QuestionObject);

                                    var getsurveyid = _dl.GetData("sp_InserSurveyMain", new NameValueCollection { { "@FormId-int", var_surveymainupload.formid.ToString() }, { "@EmpId-INT", var_surveymainupload.EmpId.ToString() }, { "@CustId-int", var_surveymainupload.CustId.ToString() }, { "@SalescallId-bigint", salesCallsId.ToString() }, { "@SurveyName-varchar(100)", var_surveymainupload.SurveyName }, { "@Description-varchar(250)", var_surveymainupload.Description }, { "@SurveyDateTime-DateTime", Sdate.ToString() } });
                                    if (getsurveyid.Tables[0].Rows.Count > 0)
                                    {
                                        SuerveyId = getsurveyid.Tables[0].Rows[0][0].ToString();
                                    }

                                    for (int j = 0; j < getAllQuestions.Count; j++)
                                    {
                                        var data = getAllQuestions[j];

                                        var getsurveycount = _dl.GetData("sp_insertSurveyData", new NameValueCollection { { "@SurveyId-int", SuerveyId }, { "@QuestionId-INT", data.QuestionId }, { "@AnswerId-int", data.AnswerId }, { "@Other-varchar(250)", data.Other } });

                                    }



                                }
                                #endregion

                                returnString = "CallSaved";
                                goto DoneExecution;
                            }
                        }
                    }
                    #endregion

                }
                catch (Exception exception)
                {

                    returnString = exception.Message;
                    Constants.ErrorLog("Exception Raising From MobileService.svc.cs UploadCallsData_DSM | " + exception.Message + " | Stack Trace | " + exception.StackTrace + ";");
                    goto Error;
                }

            Error:
            DoneExecution:
                {
                    CallExecutionResponseObject callExecutionResponseObject = new CallExecutionResponseObject();
                    callExecutionResponseObject.CallNo = i;
                    callExecutionResponseObject.isExecutedSuccessfully = (returnString == "CallSaved") ? true : false;
                    callExecutionResponseObject.CallResponseMessage = returnString + "," + ForExpenseString;
                    CallExecutionResponse.Add(callExecutionResponseObject);
                }

            }
            return js.Serialize(CallExecutionResponse);
        }

        public string UploadCallsData_RSM(string fileName, Stream stream)
        {
            List<CallExecutionResponseObject> CallExecutionResponse = new List<CallExecutionResponseObject>();
            string CreateFilePath = Path.Combine(HostingEnvironment.MapPath("~/Uploads/FilesForRSM"));
            try
            {
                if (!Directory.Exists(CreateFilePath))
                {
                    Directory.CreateDirectory(CreateFilePath);
                }
            }
            catch (Exception exception)
            {
                Console.Out.WriteLine(exception.Message);
            }

            string FilePath = Path.Combine(CreateFilePath, fileName);
            int length = 0;
            string returnString = null;
            using (FileStream writer = new FileStream(FilePath, FileMode.Create))
            {
                int readCount;
                var buffer = new byte[8192];
                while ((readCount = stream.Read(buffer, 0, buffer.Length)) != 0)
                {
                    writer.Write(buffer, 0, readCount);
                    length += readCount;
                }
            }
            JavaScriptSerializer js = new JavaScriptSerializer();
            string jsondata = System.IO.File.ReadAllText(FilePath);
            var CallsData = js.Deserialize<List<CallExecutionDataObjectnewRSM>>(jsondata);
            for (int i = 0; i < CallsData.Count; i++)
            {
                CallExecutionDataObjectnewRSM callExecutionDataObjectnewRSM = CallsData[i];

                string date = "";
                string level1 = null, level2 = null, level3 = null, level4 = null, level5 = null, level6 = null;
                var doctorId = "";
                string classId = "", specialityId = "", qulificationId = "";
                int month = 0;
                int year = 0;
                long salesCallsId = 0;
                long iSPlannedAsUnplanned = 0;
                //double GetCallDitanceForMobile = 0.0;
                //double Previous_salescallid = 0;
                //double Flag = 0;
                //string Previous_Longitude = "";
                //string Previous_Latitude = "";
                //string distanceZero = "";
                //double LastDocCity = 0;
                //long LastDocID = 0;
                string ForExpenseString = "";
                string range = "";
                double distanceInMeters = 0;
                //int CallsNo = 0;
                bool allowexecution = false;

                NameValueCollection _nvCollection = new NameValueCollection();

                #region Application Version Check


                try
                {
                    string allowedApplicationVersions = Constants.GetAllowedApplicationVersions();
                    if (allowedApplicationVersions.ToLower() == "all")
                    {
                        allowexecution = true;
                    }
                    else
                    {
                        string[] allowedapps = allowedApplicationVersions.Split(',');
                        for (int j = 0; j < allowedapps.Length; j++)
                        {
                            if (allowedapps[j] == callExecutionDataObjectnewRSM.appversion)
                            {
                                allowexecution = true;
                                break;
                            }
                        }
                    }
                }
                catch (Exception ex)
                {
                    throw ex;
                }

                if (!allowexecution)
                {
                    returnString = "Application version not allowed to excute the calls";
                    goto Error;
                }

                #endregion

                #region Unique Device ID and Session Restriction
                allowexecution = false;
                try
                {
                    string executionrestrictionflag = Constants.GetExecutionRestrictionFlag();
                    if (executionrestrictionflag.ToLower() == "false")
                    {
                        allowexecution = true;
                    }
                    else
                    {
                        var dsData = _dl.GetData("sp_CheckEmployeeDeviceAndSessionStatus_IMEI", new NameValueCollection {
                            { "@EmployeeId-BIGINT", callExecutionDataObjectnewRSM.employeeId } ,
                               { "@IMEIAddress-VARCHAR", callExecutionDataObjectnewRSM.IMEIAddress } ,
                            { "@MacAddress-VARCHAR", callExecutionDataObjectnewRSM.macaddress } ,
                            { "@Type-VARCHAR", "ExecutionApp" }
                        });
                        if (dsData != null)
                        {
                            if (dsData.Tables[0].Rows.Count > 0)
                            {
                                if (dsData.Tables[0].Rows[0][0].ToString() == "OK")
                                {
                                    allowexecution = true;
                                }
                                else
                                {
                                    returnString = dsData.Tables[0].Rows[0][0].ToString();
                                }
                            }
                        }
                    }
                }
                catch (Exception ex)
                {
                    throw ex;
                }

                if (!allowexecution)
                {

                    returnString = (returnString == "") ? "ServerError" : returnString;
                    goto Error;

                }



                #endregion

                try
                {
                    //DateTime executedDateTime1 = DateTime.ParseExact(callExecutionDataObjectnewRSM.executionDateTime, "dd/MM/yyyy HH:mm:ss", CultureInfo.InvariantCulture);
                    //DateTime CheckDate = DateTime.ParseExact("30/08/2021 23:59:59", "dd/MM/yyyy HH:mm:ss", CultureInfo.InvariantCulture);

                    //if ((callExecutionDataObjectnewRSM.appversion == "2.0.0" || callExecutionDataObjectnewRSM.appversion == "2.0.1") && executedDateTime1 <= CheckDate)
                    //{
                    #region CheckLeave
                    DataSet set0 = _dl.GetData("sp_check_ZSM_MIO_leave", new NameValueCollection { { "@Startdate-date", callExecutionDataObjectnewRSM.date }, { "@Enddate-date", callExecutionDataObjectnewRSM.date }, { "@employeeid-INT", callExecutionDataObjectnewRSM.employeeId } });
                    if (set0.Tables[0].Rows.Count > 0)
                    {
                        returnString = set0.Tables[0].Rows[0][0].ToString() == "Available" ? "Meetingandleave" : "";
                        if (returnString == "Meetingandleave")
                        {
                            goto Error;
                        }
                        else
                        {
                            date = callExecutionDataObjectnewRSM.date + " " + callExecutionDataObjectnewRSM.startTime;
                            DateTime result;
                            if (!DateTime.TryParse(date, out result))
                            {
                                returnString = "DateTime Format Is invalid";
                                goto Error;
                            }
                            DateTime executedDateTime = DateTime.ParseExact(callExecutionDataObjectnewRSM.executionDateTime, "dd/MM/yyyy HH:mm:ss", CultureInfo.InvariantCulture);

                            string rectype = "S";
                            month = result.Month;
                            year = result.Year;
                            var smsmonth = Convert.ToInt32(result.Month);
                            var smsyear = Convert.ToInt32(result.Year);

                            var getatt = _dl.GetData("sp_CheckAttLeave_New", new NameValueCollection { { "@empid-int", callExecutionDataObjectnewRSM.employeeId.ToString() }, { "@MDateTime-datetime", date.ToString() } });
                            if (getatt.Tables[0].Rows[0][0].ToString() == "alreadyLeave")
                            {
                                returnString = "leaveMarked";
                                goto Error;
                            }
                            else if (getatt.Tables[0].Rows[0][0].ToString() == "alreadySPM")
                            {
                                returnString = "SPMMarked";
                                goto Error;
                            }
                            else
                            {
                                #region preedays work
                                //if ((callExecutionDataObjectnewRSM.isLive == "1" || callExecutionDataObjectnewRSM.isLive == "0") && Convert.ToDateTime(executedDateTime.ToString("MM/dd/yyyy")) == Convert.ToDateTime(System.DateTime.Now.ToString("MM/dd/yyyy")))
                                if ((callExecutionDataObjectnewRSM.isLive == "1" || callExecutionDataObjectnewRSM.isLive == "0"))
                                {
                                    string dt_temp = "";
                                    string pree_day = "0";
                                    int aloowsDays = 24;

                                    dt_temp = Convert.ToString(result).ToString();

                                    _nvCollection.Clear();
                                    _nvCollection.Add("@EmployeeId-bigint", callExecutionDataObjectnewRSM.employeeId.ToString());

                                    DataSet ds_p = _dl.GetData("sp_SelectEmployeePree_days_withEmpID", _nvCollection);
                                    if (ds_p != null)
                                    {
                                        if (ds_p.Tables[0].Rows.Count > 0)
                                        {
                                            pree_day = ds_p.Tables[0].Rows[0]["pree_days"].ToString();

                                            if (pree_day == "")
                                            {
                                                pree_day = "0";
                                            }
                                            else if (ds_p.Tables[0].Rows[0]["pree_days"] == null)
                                            {
                                                pree_day = "0";
                                            }

                                        }
                                    }

                                    //if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) <= Convert.ToDateTime(System.DateTime.Now.ToString("MM/dd/yyyy")))
                                    //{
                                    //    if (DATEDIFFForHours("Hours", Convert.ToDateTime(dt_temp), Convert.ToDateTime(System.DateTime.Now)) > 24)
                                    //    {
                                    //        if (DATEDIFFForHours("Hours", Convert.ToDateTime(dt_temp), Convert.ToDateTime(System.DateTime.Now)) > ((Convert.ToInt32(pree_day) * aloowsDays) + 0))
                                    //        {
                                    //            returnString = "PreeDays";
                                    //            goto Error;
                                    //        }
                                    //    }
                                    //}
                                    if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) <= Convert.ToDateTime(System.DateTime.Now.ToString("MM/dd/yyyy")))
                                    {
                                        if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) != Convert.ToDateTime(executedDateTime.ToString("MM/dd/yyyy")))
                                        {
                                            if (Convert.ToDateTime(Convert.ToDateTime(dt_temp).ToString("MM/dd/yyyy")) <= Convert.ToDateTime(executedDateTime.ToString("MM/dd/yyyy")))
                                            {
                                                if (DATEDIFF("Days", Convert.ToDateTime(dt_temp), Convert.ToDateTime(executedDateTime)) > Convert.ToInt32(pree_day))
                                                {
                                                    returnString = "PreeDays";
                                                    goto Error;
                                                }
                                            }
                                            else
                                            {
                                                returnString = "Not Allowed";
                                                goto Error;
                                            }
                                        }
                                    }
                                    else
                                    {
                                        returnString = "Not Allowed";
                                        goto Error;
                                    }
                                }
                                #endregion

                                #region Employee Information
                                var dsEmployeeMemberShipInfo = _dl.GetData("sp_EmployeeMembershipSelectByEmployee",
                                    new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnewRSM.employeeId } });
                                if (dsEmployeeMemberShipInfo != null)
                                {
                                    var dsEmployeeHierarchy = _dl.GetData("sp_EmplyeeHierarchySelect",
                                        new NameValueCollection { { "@SystemUserID-BIGINT", dsEmployeeMemberShipInfo.Tables[0].Rows[0]["SystemUserID"].ToString() } });
                                    if (dsEmployeeHierarchy != null)
                                    {
                                        level1 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId1"].ToString();
                                        level2 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId2"].ToString();
                                        level3 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId3"].ToString();
                                        level4 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId4"].ToString();
                                        level5 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId5"].ToString();
                                        level6 = dsEmployeeHierarchy.Tables[0].Rows[0]["LevelId6"].ToString();
                                    }
                                }
                                else
                                {
                                    returnString = "Employee Not Found";
                                    goto Error;
                                }
                                #endregion

                                var doctorCodeArray = callExecutionDataObjectnewRSM.docDetail.Split(',');
                                for (int k = 0; k < doctorCodeArray.Length; k++)
                                {

                                    #region Get Doctor Details
                                    var doctorCode = doctorCodeArray[k];
                                    //var dsGetMrDoctorDetails = _dl.GetData("sp_MRDoctorSelectByCode", new NameValueCollection { { "@EmployeeId-bigint", employeeId }, { "@Code-nvarchar-20", doctorCode } });+
                                    var dsGetMrDoctorDetails = _dl.GetData("sp_MRDoctorSelectByCodersm_RSM", new NameValueCollection { { "@EmployeeId-bigint", callExecutionDataObjectnewRSM.employeeId }, { "@Code-nvarchar-20", doctorCode }, { "@month-int", month.ToString() }, { "@year-int", year.ToString() } });
                                    if (dsGetMrDoctorDetails != null)
                                    {
                                        if (dsGetMrDoctorDetails.Tables[0].Rows.Count > 0)
                                        {
                                            doctorId = dsGetMrDoctorDetails.Tables[0].Rows[0]["DoctorId"].ToString();
                                            #region InRange /OutRange
                                            _nvCollection.Clear();
                                            _nvCollection.Add("@DoctorID-int", doctorId.ToString());
                                            _nvCollection.Add("@Address-varchar(Max)", callExecutionDataObjectnewRSM.Doc_Address.ToString());
                                            DataSet dslastlatlng = _dl.GetData("sp_Doctorlatlng", _nvCollection);
                                            string zero_lat = (dslastlatlng.Tables[0].Rows[0][0].ToString());
                                            string zero_long = (dslastlatlng.Tables[0].Rows[0][1].ToString());
                                            string getrange = ConfigurationManager.AppSettings["Range"].ToString();

                                     //       distanceInMeters = new GeoCoordinate(Convert.ToDouble(dslastlatlng.Tables[0].Rows[0][0].ToString()), Convert.ToDouble(dslastlatlng.Tables[0].Rows[0][1].ToString()))
                                      //    .GetDistanceTo(new GeoCoordinate(Convert.ToDouble(callExecutionDataObjectnewRSM.latitude.ToString()), Convert.ToDouble(callExecutionDataObjectnewRSM.longitude.ToString())));

                                            GeoCoordinate doctorLocation = new GeoCoordinate(Convert.ToDouble(zero_lat), Convert.ToDouble(zero_long));
                                            GeoCoordinate currentLocation = new GeoCoordinate(Convert.ToDouble(callExecutionDataObjectnewRSM.latitude.ToString()), Convert.ToDouble(callExecutionDataObjectnewRSM.longitude.ToString()));
                                          
                                            distanceInMeters = doctorLocation.GetDistanceTo(currentLocation);

                                            if (distanceInMeters <= Convert.ToDouble(getrange))
                                            {
                                                range = "InRange";
                                            }

                                            else if (zero_lat == "0" && zero_long == "0")
                                            {
                                                range = "InRange";
                                            }
                                            else
                                            {
                                                range = "OutRange";
                                                ForExpenseString = "OutrangeWithoutExpense";
                                                if (GeoFencingForExecution == "1")
                                                {
                                                    returnString = range;
                                                    goto Error;
                                                }
                                            }

                                            #endregion
                                            #region Get Class Of Doctor

                                            var doctorClassDetail = _dl.GetData("sp_ClassOfDoctorSelect",
                                                new NameValueCollection { { "@DoctorId-bigint", doctorId } });
                                            // var doctorClassDetail = _dl.GetData("sp_ClassOfDoctorOfSPOSelect",
                                            //   new NameValueCollection { { "@EmployeeId-bigint", callExecutionDataObjectnewRSM.employeeId }, { "@DoctorId-bigint", doctorId }, { "@month-int", month.ToString() }, { "@year-int", year.ToString() } });
                                            if (doctorClassDetail != null)
                                                if (doctorClassDetail.Tables[0].Rows.Count > 0)
                                                {
                                                    classId = doctorClassDetail.Tables[0].Rows[0]["ClassId"].ToString();
                                                }
                                                else
                                                {
                                                    returnString = "Class Of Doctor Not Found";
                                                    if (callExecutionDataObjectnewRSM.callType == "0") goto Error;
                                                }

                                            #endregion

                                            #region Get Speciality Of Doctor

                                            var doctorspecialitydetail = _dl.GetData("sp_doctorspecialityselectbydoctor",
                                                new NameValueCollection { { "@doctorid-bigint", doctorId } });
                                            if (doctorspecialitydetail != null)
                                                if (doctorspecialitydetail.Tables[0].Rows.Count > 0)
                                                {
                                                    specialityId = doctorspecialitydetail.Tables[0].Rows[0]["specialityid"].ToString();
                                                }
                                                else
                                                {
                                                    returnString = "speciality of doctor not found";
                                                    if (callExecutionDataObjectnewRSM.callType == "0") goto Error;
                                                }

                                            #endregion

                                            #region Get Qualification Of Doctor

                                            var doctorQualificationDetail = _dl.GetData("sp_QualificationsOfDoctorsSelectByDoctor",
                                                new NameValueCollection { { "@DoctorId-BIGINT", doctorId } });
                                            if (doctorQualificationDetail != null)
                                                if (doctorQualificationDetail.Tables[0].Rows.Count > 0)
                                                {
                                                    qulificationId = doctorQualificationDetail.Tables[0].Rows[0]["QulificationId"].ToString();
                                                }
                                                else
                                                {
                                                    returnString = "Qualification Of Doctor Not Found";
                                                    if (callExecutionDataObjectnewRSM.callType == "0") goto Error;
                                                }

                                            #endregion
                                        }
                                    }
                                    else
                                    {
                                        returnString = "Doctor Not Found in Doctor List Of MIO";
                                        if (callExecutionDataObjectnewRSM.callType == "0") goto Error;
                                    }

                                    #endregion

                                    #region Get Visit Shift

                                    var hour = Convert.ToInt32(result.ToString("HH"));

                                    string vt = callExecutionDataObjectnewRSM.VisitShift.ToString();
                                    //if (hour >= 0 && hour < 12)
                                    //{
                                    //    vt = "1";
                                    //}
                                    //else if (hour < 17)
                                    //{
                                    //    vt = "1";
                                    //}
                                    //else
                                    //{
                                    //    vt = "2";
                                    //}



                                    #endregion

                                    #region PreSalesCallInsert

                                    var getcountstand = _dl.GetData("getcountryStandardtime", new NameValueCollection { { "@employeeid-int", callExecutionDataObjectnewRSM.employeeId } });
                                    var inTimeZone = TimeZoneInfo.FindSystemTimeZoneById(getcountstand.Tables[0].Rows[0][0].ToString());
                                    DateTime inTime = TimeZoneInfo.ConvertTime(DateTime.Now, TimeZoneInfo.Local, inTimeZone);
                                    DataSet set = _dl.GetData("sp_check_call_execute_RSM", new NameValueCollection { { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QualificationId-int,", qulificationId }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnewRSM.employeeId }, { "@IsPlanned-VARCHAR-50", callExecutionDataObjectnewRSM.isPlannedRSM == "No" ? "NULL" : callExecutionDataObjectnewRSM.isPlannedRSM }, { "@visitdate-datetime", result.ToString() }, });

                                    if (set != null)
                                    {
                                        if (set.Tables[0].Rows.Count > 0)
                                    {
                                        returnString = "Already Executed";
                                        if (callExecutionDataObjectnewRSM.callType == "0") goto Error;
                                    }
                                    
                                        else
                                    {
                                        if (callExecutionDataObjectnewRSM.isPlannedRSM == "No")
                                        {

                                            DataSet set2 = _dl.GetData("sp_check_CallExecuteForUnplanned_RSM", new NameValueCollection { { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnewRSM.employeeId }, { "@visitdate-datetime", result.ToString() }, });
                                            if (set2.Tables[0].Rows.Count > 0)
                                            {
                                                iSPlannedAsUnplanned = Convert.ToInt64(set2.Tables[0].Rows[0]["pk_CPI_CallPlannerRSMLevelID"].ToString());
                                                var dsPreSalesCalls = _dl.GetData("sp_PreSalesCallsInsertRSM", new NameValueCollection { { "@VisitDateTime-datetime", result.ToString() }, { "@Level1LevelId-int,", level1 }, { "@Level2LevelId-int,", level2 }, { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QulificationId-int,", qulificationId }, { "@CreationDateTime-datetime", inTime.ToString() }, { "@CallTypeId-int", "1" }, { "@VisitShift-int,", vt }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnewRSM.employeeId }, { "@InboundId-bigint", "NULL" }, { "@DocCode-INT", doctorCode }, { "@IsPlannedRSM-VARCHAR-50", callExecutionDataObjectnewRSM.isPlannedRSM == "No" ? iSPlannedAsUnplanned.ToString() : callExecutionDataObjectnewRSM.isPlannedRSM }, { "@ActivityID-INT", callExecutionDataObjectnewRSM.activity }, { "@ReasonID-INT", callExecutionDataObjectnewRSM.reason } });
                                                if (dsPreSalesCalls != null)
                                                {
                                                    if (dsPreSalesCalls.Tables[0].Rows.Count > 0)
                                                    {
                                                        if (dsPreSalesCalls.Tables[0].Rows[0][0].ToString() == "alreadyexecuted")
                                                        {
                                                            returnString = "Already Executed";
                                                            return returnString;
                                                        }
                                                        else
                                                        {
                                                            salesCallsId = Convert.ToInt64(dsPreSalesCalls.Tables[0].Rows[0]["SalesCallId"].ToString());
                                                        }
                                                    }
                                                    else
                                                    {
                                                        returnString = "Error In Saving In PreSalesCalls";
                                                        if (callExecutionDataObjectnewRSM.callType == "0") goto Error;
                                                    }
                                                }
                                                else
                                                {
                                                    returnString = "Error In Saving In PreSalesCalls";
                                                    if (callExecutionDataObjectnewRSM.callType == "0") goto Error;
                                                }
                                            }
                                            else
                                            {
                                                var dsPreSalesCalls = _dl.GetData("sp_PreSalesCallsInsertRSM", new NameValueCollection { { "@VisitDateTime-datetime", result.ToString() }, { "@Level1LevelId-int,", level1 }, { "@Level2LevelId-int,", level2 }, { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QulificationId-int,", qulificationId }, { "@CreationDateTime-datetime", inTime.ToString() }, { "@CallTypeId-int", "1" }, { "@VisitShift-int,", vt }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnewRSM.employeeId }, { "@InboundId-bigint", "NULL" }, { "@DocCode-INT", doctorCode }, { "@IsPlannedRSM-VARCHAR-50", callExecutionDataObjectnewRSM.isPlannedRSM == "No" ? "NULL" : callExecutionDataObjectnewRSM.isPlannedRSM }, { "@ActivityID-INT", callExecutionDataObjectnewRSM.activity }, { "@ReasonID-INT", callExecutionDataObjectnewRSM.reason } });
                                                if (dsPreSalesCalls != null)
                                                {
                                                    if (dsPreSalesCalls.Tables[0].Rows.Count > 0)
                                                    {
                                                        salesCallsId = Convert.ToInt64(dsPreSalesCalls.Tables[0].Rows[0]["SalesCallId"].ToString());
                                                    }
                                                    else
                                                    {
                                                        returnString = "Error In Saving In PreSalesCalls";
                                                        if (callExecutionDataObjectnewRSM.callType == "0") goto Error;
                                                    }
                                                }
                                                else
                                                {
                                                    returnString = "Error In Saving In PreSalesCalls";
                                                    if (callExecutionDataObjectnewRSM.callType == "0") goto Error;
                                                }
                                            }
                                        }
                                        else
                                        {
                                            var dsPreSalesCalls = _dl.GetData("sp_PreSalesCallsInsertRSM", new NameValueCollection { { "@VisitDateTime-datetime", result.ToString() }, { "@Level1LevelId-int,", level1 }, { "@Level2LevelId-int,", level2 }, { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QulificationId-int,", qulificationId }, { "@CreationDateTime-datetime", inTime.ToString() }, { "@CallTypeId-int", "1" }, { "@VisitShift-int,", vt }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnewRSM.employeeId }, { "@InboundId-bigint", "NULL" }, { "@DocCode-INT", doctorCode }, { "@IsPlannedRSM-VARCHAR-50", callExecutionDataObjectnewRSM.isPlannedRSM == "No" ? "NULL" : callExecutionDataObjectnewRSM.isPlannedRSM }, { "@ActivityID-INT", callExecutionDataObjectnewRSM.activity }, { "@ReasonID-INT", callExecutionDataObjectnewRSM.reason } });
                                            if (dsPreSalesCalls != null)
                                            {
                                                if (dsPreSalesCalls.Tables[0].Rows.Count > 0)
                                                {
                                                    salesCallsId = Convert.ToInt64(dsPreSalesCalls.Tables[0].Rows[0]["SalesCallId"].ToString());
                                                }
                                                else
                                                {
                                                    returnString = "Error In Saving In PreSalesCalls";
                                                    if (callExecutionDataObjectnewRSM.callType == "0") goto Error;
                                                }
                                            }
                                            else
                                            {
                                                returnString = "Error In Saving In PreSalesCalls";
                                                if (callExecutionDataObjectnewRSM.callType == "0") goto Error;
                                            }
                                        }
                                    }
                                    
                                    }
                                    else
                                    {
                                        if (callExecutionDataObjectnewRSM.isPlannedRSM == "No")
                                        {

                                            DataSet set2 = _dl.GetData("sp_check_CallExecuteForUnplanned_RSM", new NameValueCollection { { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnewRSM.employeeId }, { "@visitdate-datetime", result.ToString() }, });
                                            if (set2.Tables[0].Rows.Count > 0)
                                            {
                                                iSPlannedAsUnplanned = Convert.ToInt64(set2.Tables[0].Rows[0]["pk_CPI_CallPlannerRSMLevelID"].ToString());
                                                var dsPreSalesCalls = _dl.GetData("sp_PreSalesCallsInsertRSM", new NameValueCollection { { "@VisitDateTime-datetime", result.ToString() }, { "@Level1LevelId-int,", level1 }, { "@Level2LevelId-int,", level2 }, { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QulificationId-int,", qulificationId }, { "@CreationDateTime-datetime", inTime.ToString() }, { "@CallTypeId-int", "1" }, { "@VisitShift-int,", vt }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnewRSM.employeeId }, { "@InboundId-bigint", "NULL" }, { "@DocCode-INT", doctorCode }, { "@IsPlannedRSM-VARCHAR-50", callExecutionDataObjectnewRSM.isPlannedRSM == "No" ? iSPlannedAsUnplanned.ToString() : callExecutionDataObjectnewRSM.isPlannedRSM }, { "@ActivityID-INT", callExecutionDataObjectnewRSM.activity }, { "@ReasonID-INT", callExecutionDataObjectnewRSM.reason } });
                                                if (dsPreSalesCalls != null)
                                                {
                                                    if (dsPreSalesCalls.Tables[0].Rows.Count > 0)
                                                    {
                                                        if (dsPreSalesCalls.Tables[0].Rows[0][0].ToString() == "alreadyexecuted")
                                                        {
                                                            returnString = "Already Executed";
                                                            return returnString;
                                                        }
                                                        else
                                                        {
                                                            salesCallsId = Convert.ToInt64(dsPreSalesCalls.Tables[0].Rows[0]["SalesCallId"].ToString());
                                                        }
                                                    }
                                                    else
                                                    {
                                                        returnString = "Error In Saving In PreSalesCalls";
                                                        if (callExecutionDataObjectnewRSM.callType == "0") goto Error;
                                                    }
                                                }
                                                else
                                                {
                                                    returnString = "Error In Saving In PreSalesCalls";
                                                    if (callExecutionDataObjectnewRSM.callType == "0") goto Error;
                                                }
                                            }
                                            else
                                            {
                                                var dsPreSalesCalls = _dl.GetData("sp_PreSalesCallsInsertRSM", new NameValueCollection { { "@VisitDateTime-datetime", result.ToString() }, { "@Level1LevelId-int,", level1 }, { "@Level2LevelId-int,", level2 }, { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QulificationId-int,", qulificationId }, { "@CreationDateTime-datetime", inTime.ToString() }, { "@CallTypeId-int", "1" }, { "@VisitShift-int,", vt }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnewRSM.employeeId }, { "@InboundId-bigint", "NULL" }, { "@DocCode-INT", doctorCode }, { "@IsPlannedRSM-VARCHAR-50", callExecutionDataObjectnewRSM.isPlannedRSM == "No" ? "NULL" : callExecutionDataObjectnewRSM.isPlannedRSM }, { "@ActivityID-INT", callExecutionDataObjectnewRSM.activity }, { "@ReasonID-INT", callExecutionDataObjectnewRSM.reason } });
                                                if (dsPreSalesCalls != null)
                                                {
                                                    if (dsPreSalesCalls.Tables[0].Rows.Count > 0)
                                                    {
                                                        salesCallsId = Convert.ToInt64(dsPreSalesCalls.Tables[0].Rows[0]["SalesCallId"].ToString());
                                                    }
                                                    else
                                                    {
                                                        returnString = "Error In Saving In PreSalesCalls";
                                                        if (callExecutionDataObjectnewRSM.callType == "0") goto Error;
                                                    }
                                                }
                                                else
                                                {
                                                    returnString = "Error In Saving In PreSalesCalls";
                                                    if (callExecutionDataObjectnewRSM.callType == "0") goto Error;
                                                }
                                            }
                                        }
                                        else
                                        {
                                            var dsPreSalesCalls = _dl.GetData("sp_PreSalesCallsInsertRSM", new NameValueCollection { { "@VisitDateTime-datetime", result.ToString() }, { "@Level1LevelId-int,", level1 }, { "@Level2LevelId-int,", level2 }, { "@Level3LevelId-int,", level3 }, { "@Level4LevelId-int,", level4 }, { "@Level5LevelId-int,", level5 }, { "@Level6LevelId-int,", level6 }, { "@ClassId-int,", classId }, { "@SpecialityId-int", specialityId }, { "@QulificationId-int,", qulificationId }, { "@CreationDateTime-datetime", inTime.ToString() }, { "@CallTypeId-int", "1" }, { "@VisitShift-int,", vt }, { "@DoctorId-bigint", doctorId }, { "@EmployeeId-bigint", callExecutionDataObjectnewRSM.employeeId }, { "@InboundId-bigint", "NULL" }, { "@DocCode-INT", doctorCode }, { "@IsPlannedRSM-VARCHAR-50", callExecutionDataObjectnewRSM.isPlannedRSM == "No" ? "NULL" : callExecutionDataObjectnewRSM.isPlannedRSM }, { "@ActivityID-INT", callExecutionDataObjectnewRSM.activity }, { "@ReasonID-INT", callExecutionDataObjectnewRSM.reason } });
                                            if (dsPreSalesCalls != null)
                                            {
                                                if (dsPreSalesCalls.Tables[0].Rows.Count > 0)
                                                {
                                                    salesCallsId = Convert.ToInt64(dsPreSalesCalls.Tables[0].Rows[0]["SalesCallId"].ToString());
                                                }
                                                else
                                                {
                                                    returnString = "Error In Saving In PreSalesCalls";
                                                    if (callExecutionDataObjectnewRSM.callType == "0") goto Error;
                                                }
                                            }
                                            else
                                            {
                                                returnString = "Error In Saving In PreSalesCalls";
                                                if (callExecutionDataObjectnewRSM.callType == "0") goto Error;
                                            }
                                        }
                                    }

                                    #endregion

                                    if (salesCallsId != 0)
                                    {
                                        #region Mobile Exec Time
                                        if (callExecutionDataObjectnewRSM.executionDateTime != null)
                                        {
                                            DateTime result1 = Convert.ToDateTime(result.ToShortDateString());
                                            DateTime executedDateTime1 = Convert.ToDateTime(executedDateTime.ToShortDateString());

                                            if (result1 < executedDateTime1)
                                            {
                                                executedDateTime = result;
                                            }

                                            _nvCollection.Clear();
                                            _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                            _nvCollection.Add("@mobexectime-datetime", executedDateTime.ToString());

                                            var mac = _dl.GetData("sp_Insert_MobExecutionTime", _nvCollection);
                                        }
                                        #endregion

                                        #region CallDoctors


                                        // ReSharper disable once UnusedVariable
                                        if (_dataContext != null)
                                        {
                                            var insertCallDoctors = _dataContext.sp_CallDoctorsInsert(salesCallsId, Convert.ToInt64(doctorId)).ToList();
                                        }

                                        #endregion

                                        #region CallVisitors
                                        if (!Convert.ToBoolean(callExecutionDataObjectnewRSM.coaching))
                                        {
                                            // ReSharper disable once UnusedVariable
                                            var dsIsCoaching = _dl.InserData("sp_InsertCallCoaching", new NameValueCollection {
                                                    {"@SalesCallId-INT", salesCallsId.ToString()},
                                                    {"@IsCoaching-VARCHAR-50", "0"}
                                            });
                                        }
                                        else
                                        {
                                            // ReSharper disable once UnusedVariable
                                            var dsIsCoaching = _dl.InserData("sp_InsertCallCoaching", new NameValueCollection {
                                                {"@SalesCallId-INT", salesCallsId.ToString()},
                                                {"@IsCoaching-VARCHAR-50", "1"}
                                            });
                                        }
                                        long jvflma = 0;
                                        long jvslma = 0;
                                        long jvftma = callExecutionDataObjectnewRSM.jvftm == "true" ? 1 : 0;
                                        //NSM
                                        long jvbuha = 0;
                                        //GM
                                        long jvgma = 0;
                                        long jvcooa = callExecutionDataObjectnewRSM.jvcoo == "true" ? 1 : 0;
                                        long jvcda = callExecutionDataObjectnewRSM.jvcd == "true" ? 1 : 0;
                                        long jvpma = callExecutionDataObjectnewRSM.jvpm == "true" ? 1 : 0;
                                        if (Convert.ToBoolean(callExecutionDataObjectnewRSM.jvflm))
                                        {
                                            var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnewRSM.employeeId } });
                                            if (dsFlm != null)
                                            {
                                                if (dsFlm.Tables[0].Rows.Count > 0)
                                                {
                                                    jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
                                                }
                                            }
                                        }
                                        if (Convert.ToBoolean(callExecutionDataObjectnewRSM.jvslm))
                                        {
                                            var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnewRSM.employeeId } });
                                            if (dsFlm != null)
                                            {
                                                if (dsFlm.Tables[0].Rows.Count > 0)
                                                {
                                                    jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
                                                    var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(jvflma) } });
                                                    if (dsSlm != null)
                                                    {
                                                        if (dsSlm.Tables[0].Rows.Count > 0)
                                                        {
                                                            jvslma = Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString());
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        //Check if Joint Visit is with NSM
                                        if (Convert.ToBoolean(callExecutionDataObjectnewRSM.jvbuh))
                                        {
                                            var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnewRSM.employeeId } });
                                            if (dsFlm != null)
                                            {
                                                if (dsFlm.Tables[0].Rows.Count > 0)
                                                {
                                                    jvbuha = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
                                                    //jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
                                                    ////var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(jvflma) } });
                                                    //var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });
                                                    //if (dsSlm != null)
                                                    //{
                                                    //    if (dsSlm.Tables[0].Rows.Count > 0)
                                                    //    {
                                                    //        jvslma = Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString());
                                                    //        var dsBuh = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });

                                                    //        if (dsBuh != null)
                                                    //        {
                                                    //            if (dsBuh.Tables[0].Rows.Count > 0)
                                                    //            {
                                                    //                jvbuha = Convert.ToInt64(dsBuh.Tables[0].Rows[0]["ManagerId"].ToString());
                                                    //            }
                                                    //        }
                                                    //    }
                                                    //}
                                                }
                                            }
                                        }
                                        //Check if Joint Visit is with GM
                                        if (Convert.ToBoolean(callExecutionDataObjectnewRSM.jvgm))
                                        {
                                            var dsFlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", callExecutionDataObjectnewRSM.employeeId } });
                                            if (dsFlm != null)
                                            {
                                                if (dsFlm.Tables[0].Rows.Count > 0)
                                                {
                                                    jvflma = Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString());
                                                    //var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(jvflma) } });
                                                    var dsSlm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsFlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });
                                                    if (dsSlm != null)
                                                    {
                                                        if (dsSlm.Tables[0].Rows.Count > 0)
                                                        {
                                                            jvslma = Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString());
                                                            var dsBuh = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsSlm.Tables[0].Rows[0]["ManagerId"].ToString())) } });

                                                            if (dsBuh != null)
                                                            {
                                                                if (dsBuh.Tables[0].Rows.Count > 0)
                                                                {
                                                                    jvbuha = Convert.ToInt64(dsBuh.Tables[0].Rows[0]["ManagerId"].ToString());
                                                                    var dsGm = _dl.GetData("sp_EmployeesSelect", new NameValueCollection { { "@EmployeeId-BIGINT", Convert.ToString(Convert.ToInt64(dsBuh.Tables[0].Rows[0]["ManagerId"].ToString())) } });
                                                                    if (dsGm != null)
                                                                    {
                                                                        if (dsGm.Tables[0].Rows.Count > 0)
                                                                        {
                                                                            jvgma = Convert.ToInt64((dsGm.Tables[0].Rows[0]["ManagerId"].ToString() == "" ? "1" : dsGm.Tables[0].Rows[0]["ManagerId"].ToString()));
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        jvflma = callExecutionDataObjectnewRSM.jvflm == "true" ? jvflma : 0;
                                        jvslma = callExecutionDataObjectnewRSM.jvslm == "true" ? jvslma : 0;
                                        jvbuha = callExecutionDataObjectnewRSM.jvbuh == "true" ? jvbuha : 0;
                                        jvgma = callExecutionDataObjectnewRSM.jvgm == "true" ? jvgma : 0;

                                        //if (Convert.ToBoolean(callExecutionDataObject.jvho1))
                                        //{
                                        //    jvHO1 = 1;
                                        //}
                                        //if (Convert.ToBoolean(callExecutionDataObject.jvho2))
                                        //{
                                        //    jvHO2 = 1;
                                        //}
                                        //// ReSharper disable once UnusedVariable
                                        long? nullable = null;
                                        if (_dataContext != null)
                                        {
                                            /* var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew(salesCallsId, Convert.ToInt64(callExecutionDataObject.employeeId),
                                                 ((jvflma == 0) ? nullable : jvflma),
                                                 ((jvslma == 0) ? nullable : jvslma),
                                                 ((jvHO1 == 0) ? nullable : jvHO1),
                                                 ((jvHO2 == 0) ? nullable : jvHO2)).ToList();*/
                                            var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew_withjv8(salesCallsId,
                                                Convert.ToInt64(callExecutionDataObjectnewRSM.employeeId),
                                                (!(Convert.ToBoolean(callExecutionDataObjectnewRSM.jvflm)) ? nullable : jvflma),
                                                (!(Convert.ToBoolean(callExecutionDataObjectnewRSM.jvslm)) ? nullable : jvslma),
                                                (!(Convert.ToBoolean(callExecutionDataObjectnewRSM.jvftm)) ? nullable : jvftma),
                                                (!(Convert.ToBoolean(callExecutionDataObjectnewRSM.jvbuh)) ? nullable : jvbuha),
                                                //ye parameter sahih lgane hain filhal temporary lgaye hen 
                                                (!(Convert.ToBoolean(callExecutionDataObjectnewRSM.jvgm)) ? nullable : jvgma),
                                                (!(Convert.ToBoolean(callExecutionDataObjectnewRSM.jvcoo)) ? nullable : jvcooa),
                                                (!(Convert.ToBoolean(callExecutionDataObjectnewRSM.jvcd)) ? nullable : jvcda),
                                                (!(Convert.ToBoolean(callExecutionDataObjectnewRSM.jvpm)) ? nullable : jvpma)
                                            ).ToList();

                                            /*if (jvflma == 0 && jvslma == 0)
                                            {
                                                var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew(salesCallsId, Convert.ToInt64(callExecutionDataObject.employeeId), null, null, null, null).ToList();
                                            }
                                            else
                                            {
                                                var insertCallVisitor = _dataContext.sp_CalVisitorsInsertNew(salesCallsId, Convert.ToInt64(callExecutionDataObject.employeeId), jvflma, jvslma, 0, 0).ToList();
                                            }*/

                                        }

                                        #endregion

                                        #region VisitFeedBack

                                        if (_dataContext != null)
                                        {
                                            // ReSharper disable once UnusedVariable
                                            var insertFeedBack = _dataContext.sp_VisitFeedBackInsert(salesCallsId, callExecutionDataObjectnewRSM.callNotes).ToList();
                                        }

                                        #endregion

                                        #region CallProducts

                                        // ReSharper disable once NotAccessedVariable
                                        List<CallProduct> insertCallProduct;

                                        if (callExecutionDataObjectnewRSM.product1 != "-1")
                                        {
                                            if (_dataContext != null)
                                            {
                                                // ReSharper disable once RedundantAssignment
                                                //insertCallProduct =
                                                //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product1), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product1), 1).ToList();
                                                insertCallProduct =
                                                    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnewRSM.product1), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnewRSM.product1), 1).ToList();

                                                if (callExecutionDataObjectnewRSM.p1Notes != "" && insertCallProduct.Count > 0)
                                                {
                                                    var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
                                                        new NameValueCollection {
                                                { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() },
                                                { "@Comment-varchar(max),", callExecutionDataObjectnewRSM.p1Notes}
                                            });
                                                }
                                            }


                                        }


                                        if (callExecutionDataObjectnewRSM.product2 != "-1")
                                        {
                                            if (_dataContext != null)
                                            {
                                                // ReSharper disable once RedundantAssignment
                                                //insertCallProduct =
                                                //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product2), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product1), 2).ToList();
                                                insertCallProduct =
                                                    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnewRSM.product2), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnewRSM.product2), 2).ToList();

                                                if (callExecutionDataObjectnewRSM.p2Notes != "" && insertCallProduct.Count > 0)
                                                {
                                                    var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
                                                        new NameValueCollection {
                                                { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() },
                                                { "@Comment-varchar(max),", callExecutionDataObjectnewRSM.p2Notes}
                                            });
                                                }

                                            }
                                        }

                                        if (callExecutionDataObjectnewRSM.product3 != "-1")
                                        {
                                            if (_dataContext != null)
                                            {
                                                // ReSharper disable once RedundantAssignment
                                                //insertCallProduct =
                                                //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product3), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product3), 3).ToList();
                                                insertCallProduct =
                                                    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnewRSM.product3), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnewRSM.product3), 3).ToList();

                                                if (callExecutionDataObjectnewRSM.p3Notes != "" && insertCallProduct.Count > 0)
                                                {
                                                    var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
                                                        new NameValueCollection {
                                                { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() },
                                                { "@Comment-varchar(max),", callExecutionDataObjectnewRSM.p3Notes}
                                            });
                                                }
                                            }
                                        }

                                        if (callExecutionDataObjectnewRSM.product4 != "-1")
                                        {
                                            if (_dataContext != null)
                                            {
                                                // ReSharper disable once RedundantAssignment
                                                //insertCallProduct =
                                                //    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObject.product4), salesCallsId, 0, Convert.ToInt32(callExecutionDataObject.product4), 4).ToList();
                                                insertCallProduct =
                                                    _dataContext.sp_CallProductsInsert(Convert.ToInt32(callExecutionDataObjectnewRSM.product4), salesCallsId, 0, Convert.ToInt32(callExecutionDataObjectnewRSM.product4), 4).ToList();

                                                if (callExecutionDataObjectnewRSM.p4Notes != "" && insertCallProduct.Count > 0)
                                                {
                                                    var dsPreSalesCalls = _dl.GetData("sp_CallProductCommentInsert",
                                                        new NameValueCollection {
                                                { "@CallProductId-bigint", insertCallProduct[0].CallProductid.ToString() },
                                                { "@Comment-varchar(max),", callExecutionDataObjectnewRSM.p4Notes}
                                            });
                                                }
                                            }

                                        }



                                        #endregion

                                        #region CallProductSamples

                                        if (callExecutionDataObjectnewRSM.sample1 != "-1" && callExecutionDataObjectnewRSM.sampleQty1 != "")
                                        {

                                            // var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample1 } });

                                            // int SampleProdID1 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());


                                            var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObjectnewRSM.sample1 } });

                                            int SampleProdID1 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
                                            _nvCollection.Clear();
                                            _nvCollection.Add("@mioid-int", callExecutionDataObjectnewRSM.employeeId.ToString());
                                            _nvCollection.Add("@sample_id-int", callExecutionDataObjectnewRSM.sample1.ToString());
                                            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                                            _nvCollection.Add("@month-int", smsmonth.ToString());
                                            _nvCollection.Add("@year-int", smsyear.ToString());
                                            var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
                                            if (checkSample1Balance.Tables[0].Rows.Count > 0)
                                            {
                                                int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
                                                int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
                                                int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

                                                if (balnc >= (qty + opening))
                                                {

                                                }
                                                else if ((Convert.ToInt32(callExecutionDataObjectnewRSM.sampleQty1) + balnc) > (qty + opening))
                                                {

                                                }
                                                else
                                                {
                                                    var newbalance = Convert.ToInt32(callExecutionDataObjectnewRSM.sampleQty1) + balnc;
                                                    _nvCollection.Clear();
                                                    _nvCollection.Add("@mioid-int", callExecutionDataObjectnewRSM.employeeId.ToString());
                                                    _nvCollection.Add("@sample_id-int", callExecutionDataObjectnewRSM.sample1.ToString());
                                                    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                                                    _nvCollection.Add("@Qty-int", newbalance.ToString());
                                                    _nvCollection.Add("@month-int", smsmonth.ToString());
                                                    _nvCollection.Add("@year-int", smsyear.ToString());
                                                    var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

                                                    _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID1, Convert.ToInt32(callExecutionDataObjectnewRSM.sample1), Convert.ToInt32(callExecutionDataObjectnewRSM.sampleQty1), 1).ToList();
                                                }
                                            }

                                        }

                                        if (callExecutionDataObjectnewRSM.sample2 != "-1" && callExecutionDataObjectnewRSM.sampleQty2 != "")
                                        {
                                            // var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample2 } });

                                            // int SampleProdID2 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

                                            // _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID2, Convert.ToInt32(callExecutionDataObject.sample2), Convert.ToInt32(callExecutionDataObject.sampleQty2), 2).ToList();


                                            var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObjectnewRSM.sample2 } });

                                            int SampleProdID2 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
                                            // int SampleProdID2 = Convert.ToInt32(sample2);
                                            _nvCollection.Clear();
                                            _nvCollection.Add("@mioid-int", callExecutionDataObjectnewRSM.employeeId.ToString());
                                            _nvCollection.Add("@sample_id-int", callExecutionDataObjectnewRSM.sample2.ToString());
                                            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                                            _nvCollection.Add("@month-int", smsmonth.ToString());
                                            _nvCollection.Add("@year-int", smsyear.ToString());
                                            var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
                                            if (checkSample1Balance.Tables[0].Rows.Count > 0)
                                            {
                                                int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
                                                int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
                                                int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

                                                if (balnc >= (qty + opening))
                                                {

                                                }
                                                else if ((Convert.ToInt32(callExecutionDataObjectnewRSM.sampleQty2) + balnc) > (qty + opening))
                                                {

                                                }
                                                else
                                                {
                                                    var newbalance = Convert.ToInt32(callExecutionDataObjectnewRSM.sampleQty2) + balnc;
                                                    _nvCollection.Clear();
                                                    _nvCollection.Add("@mioid-int", callExecutionDataObjectnewRSM.employeeId.ToString());
                                                    _nvCollection.Add("@sample_id-int", callExecutionDataObjectnewRSM.sample2.ToString());
                                                    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                                                    _nvCollection.Add("@Qty-int", newbalance.ToString());
                                                    _nvCollection.Add("@month-int", smsmonth.ToString());
                                                    _nvCollection.Add("@year-int", smsyear.ToString());
                                                    var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

                                                    _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID2, Convert.ToInt32(callExecutionDataObjectnewRSM.sample2), Convert.ToInt32(callExecutionDataObjectnewRSM.sampleQty2), 2).ToList();
                                                }
                                            }

                                        }

                                        if (callExecutionDataObjectnewRSM.sample3 != "-1" && callExecutionDataObjectnewRSM.sampleQty3 != "")
                                        {

                                            // var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample3 } });

                                            //   int SampleProdID3 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

                                            //   _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID3, Convert.ToInt32(callExecutionDataObject.sample3), Convert.ToInt32(callExecutionDataObject.sampleQty3), 3).ToList();

                                            var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObjectnewRSM.sample3 } });

                                            int SampleProdID3 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
                                            //  int SampleProdID3 = Convert.ToInt32(sample3);
                                            _nvCollection.Clear();
                                            _nvCollection.Add("@mioid-int", callExecutionDataObjectnewRSM.employeeId.ToString());
                                            _nvCollection.Add("@sample_id-int", callExecutionDataObjectnewRSM.sample3.ToString());
                                            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                                            _nvCollection.Add("@month-int", smsmonth.ToString());
                                            _nvCollection.Add("@year-int", smsyear.ToString());
                                            var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
                                            if (checkSample1Balance.Tables[0].Rows.Count > 0)
                                            {
                                                int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
                                                int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
                                                int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

                                                if (balnc >= (qty + opening))
                                                {

                                                }
                                                else if ((Convert.ToInt32(callExecutionDataObjectnewRSM.sampleQty3) + balnc) > (qty + opening))
                                                {

                                                }
                                                else
                                                {
                                                    var newbalance = Convert.ToInt32(callExecutionDataObjectnewRSM.sampleQty3) + balnc;
                                                    _nvCollection.Clear();
                                                    _nvCollection.Add("@mioid-int", callExecutionDataObjectnewRSM.employeeId.ToString());
                                                    _nvCollection.Add("@sample_id-int", callExecutionDataObjectnewRSM.sample3.ToString());
                                                    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                                                    _nvCollection.Add("@Qty-int", newbalance.ToString());
                                                    _nvCollection.Add("@month-int", smsmonth.ToString());
                                                    _nvCollection.Add("@year-int", smsyear.ToString());
                                                    var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

                                                    _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID3, Convert.ToInt32(callExecutionDataObjectnewRSM.sample3), Convert.ToInt32(callExecutionDataObjectnewRSM.sampleQty3), 3).ToList();
                                                }
                                            }

                                        }


                                        //if (callExecutionDataObject.sample4 != "-1" && callExecutionDataObject.sampleQty4 != "")
                                        //{

                                        //  //  var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample4 } });

                                        // //   int SampleProdID4 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

                                        //  //  _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID4, Convert.ToInt32(callExecutionDataObject.sample4), Convert.ToInt32(callExecutionDataObject.sampleQty4), 4).ToList();

                                        //    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample4 } });

                                        //    int SampleProdID4 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());
                                        //    //int SampleProdID4 = Convert.ToInt32(sample4);
                                        //    _nvCollection.Clear();
                                        //    _nvCollection.Add("@mioid-int", callExecutionDataObject.employeeId.ToString());
                                        //    _nvCollection.Add("@sample_id-int", callExecutionDataObject.sample4.ToString());
                                        //    _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                                        //    _nvCollection.Add("@month-int", smsmonth.ToString());
                                        //    _nvCollection.Add("@year-int", smsyear.ToString());
                                        //    var checkSample1Balance = _dl.GetData("sp_bln_increament_check", _nvCollection);
                                        //    if (checkSample1Balance.Tables[0].Rows.Count > 0)
                                        //    {
                                        //        int balnc = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["Balance"].ToString());
                                        //        int qty = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["IssueQTY"].ToString());
                                        //        int opening = Convert.ToInt32(checkSample1Balance.Tables[0].Rows[0]["opening"].ToString());

                                        //        if (balnc >= (qty + opening))
                                        //        {

                                        //        }
                                        //        else if ((Convert.ToInt32(callExecutionDataObject.sampleQty4) + balnc) > (qty + opening))
                                        //        {

                                        //        }
                                        //        else
                                        //        {
                                        //            var newbalance = Convert.ToInt32(callExecutionDataObject.sampleQty4) + balnc;
                                        //            _nvCollection.Clear();
                                        //            _nvCollection.Add("@mioid-int", callExecutionDataObject.employeeId.ToString());
                                        //            _nvCollection.Add("@sample_id-int", callExecutionDataObject.sample1.ToString());
                                        //            _nvCollection.Add("@rectype-nvarchar(100)", rectype.ToString());
                                        //            _nvCollection.Add("@Qty-int", newbalance.ToString());
                                        //            _nvCollection.Add("@month-int", smsmonth.ToString());
                                        //            _nvCollection.Add("@year-int", smsyear.ToString());
                                        //            var insertbalance1 = _dl.GetData("sp_bln_increament", _nvCollection);

                                        //            _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID4, Convert.ToInt32(callExecutionDataObject.sample4), Convert.ToInt32(callExecutionDataObject.sampleQty4), 4).ToList();
                                        //        }
                                        //    }

                                        //}

                                        //if (callExecutionDataObject.sample5 != "-1" && callExecutionDataObject.sampleQty5 != "")
                                        //{

                                        //    var ProdSkuID = _dl.GetData("sp_Prod_SKUID", new NameValueCollection { { "@skuID-int", callExecutionDataObject.sample5 } });

                                        //    int SampleProdID5 = Convert.ToInt32(ProdSkuID.Tables[0].Rows[0]["ProductId"].ToString());

                                        //    _dataContext.sp_CallProductSamplesInsert(salesCallsId, SampleProdID5, Convert.ToInt32(callExecutionDataObject.sample5), Convert.ToInt32(callExecutionDataObject.sampleQty5), 5).ToList();

                                        //}

                                        #endregion

                                        #region CallReminder

                                        if (callExecutionDataObjectnewRSM.reminder1 != "-1")
                                        {
                                            _dl.InserData("sp_CallReminderInsert", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@DetailReminder-int", callExecutionDataObjectnewRSM.reminder1 }, { "@OrderBy-int", "1" } });
                                        }

                                        if (callExecutionDataObjectnewRSM.reminder2 != "-1")
                                        {
                                            _dl.InserData("sp_CallReminderInsert", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@DetailReminder-int", callExecutionDataObjectnewRSM.reminder2 }, { "@OrderBy-int", "2" } });
                                        }

                                        if (callExecutionDataObjectnewRSM.reminder3 != "-1")
                                        {
                                            _dl.InserData("sp_CallReminderInsert", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@DetailReminder-int", callExecutionDataObjectnewRSM.reminder3 }, { "@OrderBy-int", "3" } });
                                        }


                                        #endregion

                                        #region CallGifts

                                        // ReSharper disable once NotAccessedVariable
                                        List<CallGift> insertCallGift;

                                        if (callExecutionDataObjectnewRSM.gift != "-1")
                                        {
                                            // ReSharper disable once RedundantAssignment
                                            insertCallGift = callExecutionDataObjectnewRSM.giftQty != "" ? _dataContext.sp_CallGiftsInsert(salesCallsId, Convert.ToInt32(callExecutionDataObjectnewRSM.gift), Convert.ToInt32(callExecutionDataObjectnewRSM.giftQty), 1).ToList() : _dataContext.sp_CallGiftsInsert(salesCallsId, Convert.ToInt32(callExecutionDataObjectnewRSM.gift), 0, 1).ToList();
                                        }


                                        #endregion

                                        #region MacAddress
                                        // macaddress = "123.213.163";
                                        if (callExecutionDataObjectnewRSM.macaddress != null)
                                        {
                                            _nvCollection.Clear();
                                            _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                            _nvCollection.Add("@EmployesID-int", callExecutionDataObjectnewRSM.employeeId.ToString());
                                            _nvCollection.Add("@macaddress-varchar(50)", callExecutionDataObjectnewRSM.macaddress.ToString());

                                            var mac = _dl.GetData("sp_insert_macaddress", _nvCollection);
                                        }
                                        #endregion

                                        #region Location
                                        if (callExecutionDataObjectnewRSM.longitude != null && callExecutionDataObjectnewRSM.latitude != null)
                                        {
                                            _nvCollection.Clear();
                                            _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                            _nvCollection.Add("@long-varchar(100)", callExecutionDataObjectnewRSM.longitude.ToString());
                                            _nvCollection.Add("@lat-varchar(100)", callExecutionDataObjectnewRSM.latitude.ToString());
                                            var ch = _dl.GetData("sp_Insert_Location", _nvCollection);
                                        }

                                        #endregion

                                        #region Fake Users Calls Data

                                        try
                                        {
                                            if (callExecutionDataObjectnewRSM.flag != null)
                                            {
                                                _nvCollection.Clear();

                                                _nvCollection.Clear();
                                                _nvCollection.Add("@SalesCalID-int", salesCallsId.ToString());
                                                _nvCollection.Add("@Flag-int", ((Convert.ToBoolean(callExecutionDataObjectnewRSM.flag.ToString())) ? "1" : "0"));
                                                _nvCollection.Add("@AppVersion-varchar(100)", callExecutionDataObjectnewRSM.appversion);
                                                _nvCollection.Add("@MacAddress-varchar(100)", callExecutionDataObjectnewRSM.macaddress);
                                                _nvCollection.Add("@ApplicationPackages-text", callExecutionDataObjectnewRSM.applicationpackages);
                                                _nvCollection.Add("@ModelNumber-text", callExecutionDataObjectnewRSM.modelnumber);
                                                var ch = _dl.GetData("sp_fakeUsersData", _nvCollection);


                                            }
                                        }
                                        catch (Exception)
                                        {

                                            //throw;
                                        }



                                        #endregion

                                        #region Range


                                        if (range.ToString() != "")
                                        {


                                            var rangestatus = _dl.GetData("sp_insertrangestatus", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@RangeStatus-varchar(50)", range.ToString() }, { "@Distance-varchar(100)", distanceInMeters.ToString() } });
                                        }
                                        else
                                        {
                                            var rangestatus = _dl.GetData("sp_insertrangestatus", new NameValueCollection { { "@SalesCallId-bigint", salesCallsId.ToString() }, { "@RangeStatus-varchar(50)", "NewTag" }, { "@Distance-varchar(100)", "0.0" } });
                                        }

                                        #endregion

                                        #region Doctortagging

                                        //string address = "";
                                        //long doctorid;
                                        //var dsDoctorTagPermision = _dl.GetData("sp_DoctorTagPermision", new NameValueCollection { { "@DoctorID-INT", doctorId } });
                                        //if (dsDoctorTagPermision != null)
                                        //{
                                        //    if (dsDoctorTagPermision.Tables[0].Rows.Count > 0)
                                        //    {
                                        //        doctorid = Convert.ToInt64(dsDoctorTagPermision.Tables[0].Rows[0]["DoctorID"].ToString());
                                        //        string url = "http://maps.googleapis.com/maps/api/geocode/xml?latlng=" + callExecutionDataObjectnewRSM.latitude.ToString() + "," + callExecutionDataObjectnewRSM.longitude.ToString() + "&sensor=false";
                                        //        WebRequest request = WebRequest.Create(url);
                                        //        using (WebResponse response = (HttpWebResponse)request.GetResponse())
                                        //        {
                                        //            using (StreamReader reader = new StreamReader(response.GetResponseStream(), Encoding.UTF8))
                                        //            {
                                        //                // empid = dt.Rows[i]["EmployeeId"].ToString();
                                        //                DataSet dsResult = new DataSet();
                                        //                dsResult.ReadXml(reader);//format in xml
                                        //                DataTable dtCoordinates = new DataTable();
                                        //                dtCoordinates.Columns.AddRange(new DataColumn[1] { new DataColumn("AreaAddress", typeof(string)) });

                                        //                if (dsResult.Tables.Count > 1)
                                        //                {
                                        //                    var data = dsResult.Tables[1];
                                        //                    var add1 = data.Rows[0]["formatted_address"].ToString();
                                        //                    var add2 = data.Rows[2]["formatted_address"].ToString();
                                        //                    string split = add1.Split(',')[0];
                                        //                    address = split + " " + add2;
                                        //                    // dt.Rows[i]["Address"] = address;
                                        //                }


                                        //            }
                                        //        }
                                        //    }

                                        //}

                                        #endregion

                                        #region Doctor Location
                                        //if (callExecutionDataObjectnewRSM.longitude != null && callExecutionDataObjectnewRSM.latitude != null)
                                        //{
                                        //    _nvCollection.Clear();
                                        //    _nvCollection.Add("@DoctorID-int", doctorId.ToString());

                                        //    DataSet dsloccount = _dl.GetData("sp_CountDoctorTagging", _nvCollection);

                                        //    if (dsloccount.Tables[0].Rows.Count < 1)
                                        //    {
                                        //        _nvCollection.Clear();
                                        //        _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                        //        _nvCollection.Add("@DoctorID-int", doctorId.ToString());
                                        //        _nvCollection.Add("@VisitShift-int", vt);
                                        //        _nvCollection.Add("@long-varchar(100)", callExecutionDataObjectnewRSM.longitude.ToString());
                                        //        _nvCollection.Add("@lat-varchar(100)", callExecutionDataObjectnewRSM.latitude.ToString());
                                        //        _nvCollection.Add("@Address-varchar(MAX)", address.ToString());
                                        //        var ch = _dl.GetData("sp_Insert_DoctorTagging", _nvCollection);
                                        //    }

                                        //}
                                        #endregion

                                        //-------------------------------------------------------------------------------------- Long Lat acc to wilson -----------------------------------------------//

                                        #region Doctortagging New 06/09/2023

                                        string address = "";

                                        //string apiKey = MapApiKey();
                                        //string url = string.Format("https://eu1.locationiq.com/v1/reverse.php?key={0}&lat={1}&lon={2}&format=xml", apiKey, callExecutionDataObjectnew.latitude.ToString(), callExecutionDataObjectnew.longitude.ToString());

                                        string url = "http://maps.googleapis.com/maps/api/geocode/xml?latlng=" + callExecutionDataObjectnewRSM.latitude.ToString() + "," + callExecutionDataObjectnewRSM.longitude.ToString() + "&sensor=false";
                                        //        WebRequest request = WebRequest.Create(url);
                                        //        using (WebResponse response = (HttpWebResponse)request.GetResponse())

                                        try
                                        {


                                            WebRequest request = WebRequest.Create(url);
                                            using (WebResponse response = (HttpWebResponse)request.GetResponse())
                                            {
                                                using (StreamReader reader = new StreamReader(response.GetResponseStream(), Encoding.UTF8))
                                                {
                                                    DataSet dsResult = new DataSet();
                                                    dsResult.ReadXml(reader);//format in xml
                                                    DataTable dtCoordinates = new DataTable();
                                                    dtCoordinates.Columns.AddRange(new DataColumn[1] { new DataColumn("AreaAddress", typeof(string)) });

                                                    if (dsResult.Tables.Count > 1)
                                                    {
                                                        var data = dsResult.Tables[1];
                                                        var add1 = data.Rows[0]["result_text"].ToString();
                                                        address = add1;
                                                    }

                                                }
                                            }


                                        }
                                        catch (Exception)
                                        {


                                        }

                                        #endregion

                                        #region Doctor Location New 

                                        if (callExecutionDataObjectnewRSM.longitude != null && callExecutionDataObjectnewRSM.latitude != null)
                                        {

                                            _nvCollection.Clear();
                                            _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                            _nvCollection.Add("@DoctorID-int", doctorId.ToString());
                                            //_nvCollection.Add("@VisitShift-int", vt);
                                            _nvCollection.Add("@VisitShift-varchar(250)", callExecutionDataObjectnewRSM.VisitShift.ToString());
                                            _nvCollection.Add("@lat-varchar(100)", callExecutionDataObjectnewRSM.latitude.ToString());
                                            _nvCollection.Add("@long-varchar(100)", callExecutionDataObjectnewRSM.longitude.ToString());
                                            _nvCollection.Add("@Address-varchar(MAX)", callExecutionDataObjectnewRSM.Doc_Address);
                                            var ch = _dl.GetData("sp_Insert_DoctorTaggingwithmultipleaddress", _nvCollection);
                                            //var ch = _dl.GetData("sp_Insert_DoctorTagging", _nvCollection);
                                            //}

                                        }
                                        #endregion

                                        //--------------------------------------------- End ----------------------------------------------------//

                                    }
                                }


                                #region EdetailingJson Data Deserialization
                                try
                                {
                                    var resultEdetailingJson = JsonConvert.DeserializeObject<EdetailingObject[]>(callExecutionDataObjectnewRSM.EdetailingJson);
                                    for (int j = 0; j < resultEdetailingJson.Length; j++)
                                    {
                                        var resultEdetailingObject = resultEdetailingJson[j];
                                        _nvCollection.Clear();
                                        _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                        _nvCollection.Add("@PDFId-int", resultEdetailingObject.pdfid);
                                        _nvCollection.Add("@PageNumId-int", resultEdetailingObject.pagenumber);
                                        _nvCollection.Add("@TimeDuration-varchar(50)", resultEdetailingObject.timeduration);
                                        _nvCollection.Add("@Type-int", "1"); //Type ID of PDF
                                        var ch = _dl.GetData("sp_InsertPDFCallMonitor", _nvCollection);
                                    }
                                }
                                catch (Exception ex)
                                {

                                }
                                #endregion

                                #region VideoEdetailingJson Data Deserialization

                                try
                                {
                                    var resultVideoJson = JsonConvert.DeserializeObject<VideoObject[]>(callExecutionDataObjectnewRSM.videosDetailingJson);
                                    if (resultVideoJson != null)
                                    {
                                        for (int j = 0; j < resultVideoJson.Length; j++)
                                        {
                                            var resultVideoObject = resultVideoJson[j];
                                            _nvCollection.Clear();
                                            _nvCollection.Add("@salescallid-int", salesCallsId.ToString());
                                            _nvCollection.Add("@PDFId-int", resultVideoObject.videoid);
                                            _nvCollection.Add("@PageNumId-int", resultVideoObject.videoduration);
                                            _nvCollection.Add("@TimeDuration-varchar(50)", resultVideoObject.timeduration);
                                            _nvCollection.Add("@Type-int", "2"); //Type ID of Video 
                                            var ch = _dl.GetData("sp_InsertPDFCallMonitor", _nvCollection);
                                        }
                                    }
                                }
                                catch (Exception ex)
                                {
                                    //    Constants.CallErrorLog("Error on Video Detailing Insertion: " + ex.Message);

                                }
                                #endregion

                                #region SurveyJson Data Deserialization

                                var SurveyData = JsonConvert.DeserializeObject<SurveyMainUploadDataObject[]>(callExecutionDataObjectnewRSM.surveyFormJson);
                                for (int k = 0; k < SurveyData.Length; k++)
                                {
                                    SurveyMainUploadDataObject var_surveymainupload = SurveyData[i];
                                    string Sdate = "";
                                    string SuerveyId = "";

                                    Sdate = var_surveymainupload.SurveyDateTime;
                                    if (!DateTime.TryParse(Sdate, out result))
                                    {
                                        returnString = "Survey DateTime Format Is invalid";
                                    }

                                    var getAllQuestions = JsonConvert.DeserializeObject<List<SurveyDataUploadDataObject>>(var_surveymainupload.QuestionObject);

                                    var getsurveyid = _dl.GetData("sp_InserSurveyMain", new NameValueCollection { { "@FormId-int", var_surveymainupload.formid.ToString() }, { "@EmpId-INT", var_surveymainupload.EmpId.ToString() }, { "@CustId-int", var_surveymainupload.CustId.ToString() }, { "@SalescallId-bigint", salesCallsId.ToString() }, { "@SurveyName-varchar(100)", var_surveymainupload.SurveyName }, { "@Description-varchar(250)", var_surveymainupload.Description }, { "@SurveyDateTime-DateTime", Sdate.ToString() } });
                                    if (getsurveyid.Tables[0].Rows.Count > 0)
                                    {
                                        SuerveyId = getsurveyid.Tables[0].Rows[0][0].ToString();
                                    }

                                    for (int j = 0; j < getAllQuestions.Count; j++)
                                    {
                                        var data = getAllQuestions[j];

                                        var getsurveycount = _dl.GetData("sp_insertSurveyData", new NameValueCollection { { "@SurveyId-int", SuerveyId }, { "@QuestionId-INT", data.QuestionId }, { "@AnswerId-int", data.AnswerId }, { "@Other-varchar(250)", data.Other } });

                                    }



                                }
                                #endregion

                                returnString = "CallSaved";
                                goto DoneExecution;
                            }
                        }
                    }
                    #endregion

                }
                catch (Exception exception)
                {

                    returnString = exception.Message;
                    Constants.ErrorLog("Exception Raising From MobileService.svc.cs UploadCallsData_RSM | " + exception.Message + " | Stack Trace | " + exception.StackTrace + ";");
                    goto Error;
                }

            Error:
            DoneExecution:
                {
                    CallExecutionResponseObject callExecutionResponseObject = new CallExecutionResponseObject();
                    callExecutionResponseObject.CallNo = i;
                    callExecutionResponseObject.isExecutedSuccessfully = (returnString == "CallSaved") ? true : false;
                    callExecutionResponseObject.CallResponseMessage = returnString + "," + ForExpenseString;
                    CallExecutionResponse.Add(callExecutionResponseObject);
                }

            }
            return js.Serialize(CallExecutionResponse);
        }

        private double DATEDIFF(string interval, DateTime visitdatetime, DateTime createdDatetime)
        {
            double daysdiff = 0;

            TimeSpan span = createdDatetime.Subtract(visitdatetime);

            if (interval == "Days")
            {
                daysdiff = span.TotalDays;
            }
            else if (interval == "Hours")
            {
                daysdiff = span.TotalHours;
            }
            else if (interval == "Minutes")
            {
                daysdiff = span.TotalMinutes;
            }
            else if (interval == "Seconds")
            {
                daysdiff = span.TotalSeconds;
            }

            return daysdiff;
        }

        public void Upload(Stream data)
        {
            ParseFiles(
                   data,
                   WebOperationContext.Current.IncomingRequest.ContentType,
                   ImageProcessExpense).Wait();
        }

        void ImageProcessExpense(string Name, string fileName, Stream fileContents)
        {
            NameValueCollection _nvCollection = new NameValueCollection();
            string ImageName = fileName;

            string pathExpenseCall = HostingEnvironment.MapPath("~/Uploads/ExpenseCallExecutionImages/");
            string pathIndivulImages = HostingEnvironment.MapPath("~/Uploads/ExpenseIndiviualImages/");
            try
            {
                // Zero(0) for Call executaion Image 
                if (Name.Contains("0"))
                {

                    FileStream fileToUpload = new FileStream(pathExpenseCall + ImageName.Replace("\"", ""), FileMode.Create);

                    byte[] bytearray = new byte[180000];
                    int bytesRead, totalBytesRead = 0;
                    do
                    {
                        bytesRead = fileContents.Read(bytearray, 0, bytearray.Length);
                        totalBytesRead += bytesRead;
                    } while (bytesRead > 0);

                    fileToUpload.Write(bytearray, 0, bytearray.Length);
                    fileToUpload.Close();
                    fileToUpload.Dispose();

                    // Constants.ImagesErrorLog("Error in  file To Upload " + fileToUpload + " & " + "Image Path" + pathCus);

                    _nvCollection.Clear();
                    _nvCollection.Add("@ImagePath-varchar(500)", ExpenseExecutionImagesPath + "/" + ImageName.Replace("\"", ""));
                    _nvCollection.Add("@EmployeeId-int", "0");
                    _nvCollection.Add("@isProfile-varchar(200)", "CallExecutationExpense");
                    var syncimage = _dl.GetData("sp_InsertSyncImage", _nvCollection);
                    // Constants.ImagesSuccesLog("Save Image Success at: " + ExpenseExecutionImagesPath + "/" + ImageName.Replace("\"", ""));

                    #region Update Customer Image
                    try
                    {
                        _nvCollection.Clear();
                        _nvCollection.Add("@ImagePath-varchar(500)", ExpenseExecutionImagesPath + "/" + ImageName.Replace("\"", ""));
                        var ch = _dl.GetData("sp_getCallExecutionImages", _nvCollection);
                        if (ch != null)
                        {
                            Constants.ImagesSuccesLog("Call exist against this : " + ExpenseExecutionImagesPath + "/" + ImageName.Replace("\"", "") + " and count is " + ch.Tables[0].Rows.Count);
                            if (ch.Tables[0].Rows.Count != 0)
                            {
                                Constants.ImagesSuccesLog("Initial Status: " + ch.Tables[0].Rows[0][0].ToString() + " of this image : " + ExpenseExecutionImagesPath + "/" + ImageName.Replace("\"", ""));
                                _nvCollection.Clear();
                                _nvCollection.Add("@ImagePath-Varchar(500)", ExpenseExecutionImagesPath + "/" + ImageName.Replace("\"", ""));
                                _dl.GetData("sp_changeStatusCallExecutionImages", _nvCollection);
                                Constants.ImagesSuccesLog("Updated Status: 1 of this image : " + ExpenseExecutionImagesPath + "/" + ImageName.Replace("\"", ""));

                            }
                        }
                    }
                    #endregion
                    catch (Exception ex)
                    {

                        //  Constants.ImagesErrorLog("Error in  CallExecutionImages " + ex.Message + " " + ex.StackTrace.ToString());
                    }
                }
                else
                {

                    FileStream fileToUpload = new FileStream(pathIndivulImages + ImageName.Replace("\"", ""), FileMode.Create);

                    byte[] bytearray = new byte[180000];
                    int bytesRead, totalBytesRead = 0;
                    do
                    {
                        bytesRead = fileContents.Read(bytearray, 0, bytearray.Length);
                        totalBytesRead += bytesRead;
                    } while (bytesRead > 0);

                    fileToUpload.Write(bytearray, 0, bytearray.Length);
                    fileToUpload.Close();
                    fileToUpload.Dispose();

                    //Constants.ImagesErrorLog("Error in  file To Upload " + fileToUpload + " & " + "Image Path" + pathCus);

                    _nvCollection.Clear();
                    _nvCollection.Add("@ImagePath-varchar(500)", ExpenseIndiImagesPath + "/" + ImageName.Replace("\"", ""));
                    _nvCollection.Add("@EmployeeId-int", "0");
                    _nvCollection.Add("@isProfile-varchar(200)", "Indiviual Expense");
                    var syncimage = _dl.GetData("sp_InsertSyncImage", _nvCollection);
                    Constants.ImagesSuccesLog("Save Image Success at: " + ExpenseIndiImagesPath + "/" + ImageName.Replace("\"", ""));

                    #region Update Customer Image
                    try
                    {
                        _nvCollection.Clear();
                        _nvCollection.Add("@ImagePath-varchar(500)", ExpenseExecutionImagesPath + "/" + ImageName.Replace("\"", ""));
                        var ch = _dl.GetData("sp_getCallExecutionImages", _nvCollection);
                        if (ch != null)
                            Constants.ImagesSuccesLog("Call exist against this : " + ExpenseExecutionImagesPath + "/" + ImageName.Replace("\"", "") + " and count is " + ch.Tables[0].Rows.Count);
                        if (ch.Tables[0].Rows.Count != 0)
                        {
                            Constants.ImagesSuccesLog("Initial Status: " + ch.Tables[0].Rows[0][0].ToString() + " of this image : " + ExpenseExecutionImagesPath + "/" + ImageName.Replace("\"", ""));
                            _nvCollection.Clear();
                            _nvCollection.Add("@ImagePath-Varchar(500)", ExpenseExecutionImagesPath + "/" + ImageName.Replace("\"", ""));
                            Constants.ImagesSuccesLog("Updated Status: 1 of this image : " + ExpenseExecutionImagesPath + "/" + ImageName.Replace("\"", ""));

                        }
                    }
                    //     }
                    catch (Exception ex)
                    {

                        //   Constants.ImagesErrorLog("Error in  CallExecutionImages " + ex.Message + " " + ex.StackTrace.ToString());
                    }
                }
                    #endregion

                //}
                //// TWO(2) for Call New Farmer Image 

                //else
                //{
                //    Constants.ImagesSuccesLog("No Conditon Apply Flag of image :" + Name + " & Path :" + pathPro + " " + pathCus);
                //}

            }
            catch (Exception ex)
            {
                //Constants.ImagesErrorLog("Field Image Saving " + ex.Message + " " + ex.StackTrace.ToString());
            }
        }

        public static async Task ParseFiles(Stream data, string contentType, Action<string, string, Stream> fileProcessor)
        {
            using (var streamContent = new StreamContent(data))
            {
                streamContent.Headers.ContentType = MediaTypeHeaderValue.Parse(contentType);
                //await TaskEx.Run(async() => await Request.Content.ReadAsMultipartAsync(provider))
                try
                {
                    var provider = await streamContent.ReadAsMultipartAsync();

                    foreach (var httpContent in provider.Contents)
                    {
                        var fileName = httpContent.Headers.ContentDisposition.FileName;
                        var Name = httpContent.Headers.ContentDisposition.Name;

                        if (string.IsNullOrWhiteSpace(fileName))
                        {
                            continue;
                        }
                        if (fileName.Replace("\"", "") != string.Empty)
                        {
                            using (Stream fileContents = await httpContent.ReadAsStreamAsync())
                            {
                                fileProcessor(Name, fileName, fileContents);
                            }
                        }
                    }
                }
                catch (Exception e)
                {
                    PocketDCR2.Classes.Constants.ErrorLog("Image Process for Customer" + e.StackTrace.ToString());
                }
            }
        }


        public string UploadVoiceRecording(string fileName,string callId, Stream stream)
        {
            JavaScriptSerializer js = new JavaScriptSerializer();
            VoiceResponseObject responseObj = new VoiceResponseObject();
            string isSuccess = "";
            try
            {

               
                int checking = 0;
                string strTempFolderPath = ConfigurationManager.AppSettings.Get("VoiceRecordingPath");
                try
                {
                    if (!Directory.Exists(strTempFolderPath))
                    {
                        Directory.CreateDirectory(strTempFolderPath);
                    }
                }
                catch (Exception exception)
                {
                    Console.Out.WriteLine(exception.Message);
                }
                string FilePath = Path.Combine(strTempFolderPath, fileName);
                int length = 0;
                using (FileStream writer = new FileStream(FilePath, FileMode.Create))
                {
                    int readCount;
                    var buffer = new byte[8192];
                   
                    while ((readCount = stream.Read(buffer, 0, buffer.Length)) != 0)
                    {
                        writer.Write(buffer, 0, readCount);
                        length += readCount;
                        checking++;
                    }
                }

                if (checking > 1)
                {
                    var check = _dl.GetData("sp_CheckSameSallsCallId", new NameValueCollection { { "@callId-int", callId } });
                    if (check.Tables[0].Rows[0][0].ToString() == "SalesCallId Not Exist")
                    {
                        responseObj.CallNo = 0;
                        responseObj.Status =false ;
                        responseObj.VoiceResponseMessage ="SalesCallId Not Exist";
                        return js.Serialize(responseObj);
                    }
                    else if (check.Tables[0].Rows[0][0].ToString() == "Already File Exist With This Id")
                    {
                        responseObj.CallNo = 0;
                        responseObj.Status = false;
                        responseObj.VoiceResponseMessage = "Already File Exist With This SalesCallId";
                        return js.Serialize(responseObj);
                      
                    }
                    else
                    {
                        var dsData = _dl.GetData("sp_SalesCallRecordings", new NameValueCollection {
                            { "@Path-varchar(200)", FilePath } ,{ "@callId-int", callId }});
                        responseObj.CallNo = 0;
                        responseObj.Status = true;
                        responseObj.VoiceResponseMessage = "File Has Been Inserted Successfully";
                        return js.Serialize(responseObj);
                    } 
                }
                else
                {
                    responseObj.CallNo = 0;
                    responseObj.Status = false;
                    responseObj.VoiceResponseMessage = "Please Select File first";
                    return js.Serialize(responseObj);
                }
               
               
            }
            catch (Exception ex)
            {
                return ex.Message;
            }

        }


      

        #region Comment By Rahim on Behalf of Ahmer
        //public string UploadRatingData(string fileName, Stream stream)
        //{
        //    List<RatingExecutionResponseObject> SaveDataResponse = new List<RatingExecutionResponseObject>();
        //    string FilePath = Path.Combine(HostingEnvironment.MapPath("~/Uploads/RatingFiles"), fileName);
        //    int length = 0;
        //    using (FileStream writer = new FileStream(FilePath, FileMode.Create))
        //    {
        //        int readCount;
        //        var buffer = new byte[8192];
        //        while ((readCount = stream.Read(buffer, 0, buffer.Length)) != 0)
        //        {
        //            writer.Write(buffer, 0, readCount);
        //            length += readCount;
        //        }
        //    }
        //    JavaScriptSerializer js = new JavaScriptSerializer();

        //    string jsondata = System.IO.File.ReadAllText(FilePath);
        //    var RatingData = js.Deserialize<List<RatingMainDataObject>>(jsondata);
        //    string returnString;
        //    for (int i = 0; i < RatingData.Count; i++)
        //    {
        //        var var_ratingmain = RatingData[i];
        //        string date = "";
        //        string RatingExecutionMainID = "";
        //        try
        //        {
        //            date = var_ratingmain.RatingDateTime;
        //            DateTime result;
        //            //if (!DateTime.TryParse(date, out result))
        //            if (!DateTime.TryParseExact(var_ratingmain.RatingDateTime, "dd/MM/yyyy HH:mm:ss",
        //                System.Globalization.CultureInfo.InvariantCulture,
        //                System.Globalization.DateTimeStyles.None, out result))
        //            {
        //                returnString = "DateTime Format Is invalid";
        //                goto Error;
        //            }



        //            /*DateTime executedDateTime = DateTime.ParseExact(callExecutionDataObject.executionDateTime, "dd/MM/yyyy HH:mm:ss",
        //                             CultureInfo.InvariantCulture);*/

        //            #region CheckRating

        //            DataSet set0 = _dl.GetData("sp_check_Rating",
        //                                        new NameValueCollection { 
        //                                        { "@RatingBy-bigint", var_ratingmain.RatingBy }, 
        //                                        { "@RatingFor-bigint", var_ratingmain.RatingFor }, 
        //                                        { "@ShiftSession-int", var_ratingmain.ShiftSession },
        //                                        { "@RatingDateTime-datetime", result.ToString() } 
        //                                        });
        //            if (set0.Tables[0].Rows.Count > 0)
        //            {
        //                returnString = set0.Tables[0].Rows[0][0].ToString();
        //                if (returnString != "RatingNotExists")
        //                {
        //                    goto Error;
        //                }
        //            }

        //            #endregion

        //            var getRatingExecutionMainID = _dl.GetData("sp_insertRatingMainData", new NameValueCollection { 
        //                                            { "@RatingBy-bigint", var_ratingmain.RatingBy },
        //                                            { "@RatingFor-bigint", var_ratingmain.RatingFor },
        //                                            { "@ShiftSession-nvarchar(max)", var_ratingmain.ShiftSession },
        //                                            { "@NumberOfCalls-nvarchar(max)", var_ratingmain.NumberOfCalls },
        //                                            { "@TypeOfWrk-nvarchar(max)", var_ratingmain.TypeOfWrk },
        //                                            { "@TownVisited-nvarchar(max)", var_ratingmain.TownVisited },
        //                                            { "@BricksWorked-nvarchar(max)", var_ratingmain.BricksWorked },
        //                                            { "@StartTime-datetime", var_ratingmain.StartTime },
        //                                            { "@EndTime-datetime", var_ratingmain.EndTime },
        //                                            { "@SalescallId-bigint", var_ratingmain.SalescallId },
        //                                            { "@RatingDateTime-datetime", result.ToString() },
        //                                            { "@RatingComment-varchar(max)", var_ratingmain.RatingComment },
        //                                            { "@Latitude-varchar(max)", var_ratingmain.Latitude },
        //                                            { "@Longitude-varchar(max)", var_ratingmain.Longitude },
        //                                            { "@IsFake-bit", var_ratingmain.IsFake },
        //                                            { "@ApplicationPackages-nvarchar(max)", var_ratingmain.ApplicationPackages },
        //                                            { "@AppVersion-nvarchar(max)", var_ratingmain.AppVersion },
        //                                            { "@DeviceUDID-nvarchar(max)", var_ratingmain.DeviceUDID }
        //            });

        //            if (getRatingExecutionMainID.Tables[0].Rows.Count > 0)
        //            {
        //                RatingExecutionMainID = getRatingExecutionMainID.Tables[0].Rows[0][0].ToString();
        //            }

        //            var getAllBricksWithShiftSession = JsonConvert.DeserializeObject<List<BricksWithShiftSessionObject>>(var_ratingmain.BricksWorkedObject);
        //            for (int j = 0; j < getAllBricksWithShiftSession.Count; j++)
        //            {
        //                var var_brickwithshiftsession = getAllBricksWithShiftSession[j];
        //                _dl.GetData("sp_insertRatingBrickShiftRelation", new NameValueCollection { 
        //                                                    { "@RatingExecutionMainID-bigint", RatingExecutionMainID },
        //                                                    { "@ShiftSession-nvarchar(max)", var_brickwithshiftsession.ShiftSession },
        //                                                    { "@BricksWorked-nvarchar(max)", var_brickwithshiftsession.BrickWorked }});
        //            }

        //            var getAllForms = JsonConvert.DeserializeObject<List<RatingFormMainDataObject>>(var_ratingmain.RatingFormsObject);
        //            for (int j = 0; j < getAllForms.Count; j++)
        //            {
        //                string RatingExecutionMainDataID = "";
        //                var var_ratingformmain = getAllForms[j];
        //                //insert rating form main data
        //                var getRatingExecutionMainDataID = _dl.GetData("sp_insertRatingFormMainData", new NameValueCollection { 
        //                                                    { "@RatingExecutionMainID-bigint", RatingExecutionMainID },
        //                                                    { "@RatingFormId-bigint", var_ratingformmain.RatingFormId },
        //                                                    { "@RatingName-nvarchar(max)", var_ratingformmain.RatingName },
        //                                                    { "@RatingFormGroupAverage-nvarchar(max)", var_ratingformmain.RatingFormGroupAverage },
        //                                                    { "@RatingFormComment-nvarchar(max)", var_ratingformmain.RatingFormComment }});

        //                if (getRatingExecutionMainDataID.Tables[0].Rows.Count > 0)
        //                {
        //                    RatingExecutionMainDataID = getRatingExecutionMainDataID.Tables[0].Rows[0][0].ToString();
        //                }

        //                var getAllQuestions = JsonConvert.DeserializeObject<List<RatingFormDetailDataObject>>(var_ratingformmain.QuestionAnswerObject);
        //                for (int k = 0; k < getAllQuestions.Count; k++)
        //                {
        //                    var data = getAllQuestions[k];
        //                    //insert rating form question answer data
        //                    _dl.GetData("sp_insertRatingFormDetailData", new NameValueCollection { 
        //                                                        { "@RatingExecutionMainDataID-bigint", RatingExecutionMainDataID },
        //                                                        { "@RatingFormId-bigint", var_ratingformmain.RatingFormId },
        //                                                        { "@QuestionId-bigint", data.QuestionId },
        //                                                        { "@AnswerId-bigint", (data.AnswerId == null)?"-1":data.AnswerId },
        //                                                        { "@Other-nvarchar(max)", data.Other } });

        //                }
        //            }




        //            returnString = "DataSaved";
        //            goto DoneInsertion;
        //        }
        //        catch (Exception exception)
        //        {
        //            //returnString = "Message: " + exception.Message + " - StackTrace: " + exception.StackTrace;		
        //            returnString = exception.Message;
        //            goto Error;
        //        }

        //    Error:
        //    DoneInsertion:
        //        {
        //            RatingExecutionResponseObject saveResponseObject = new RatingExecutionResponseObject();
        //            saveResponseObject.RecordNo = i;
        //            saveResponseObject.isInsertedSuccessfully = (returnString == "DataSaved") ? true : false;
        //            saveResponseObject.ResponseMessage = returnString;
        //            SaveDataResponse.Add(saveResponseObject);
        //        }

        //    }
        //    return js.Serialize(SaveDataResponse);

        //}

        //public string UploadQuizData(string fileName, Stream stream)
        //{
        //    List<SurrveyExecutionResponseObject> SaveDataResponse = new List<SurrveyExecutionResponseObject>();
        //    string FilePath = Path.Combine(HostingEnvironment.MapPath("~/Uploads/Files"), fileName);
        //    int length = 0;
        //    using (FileStream writer = new FileStream(FilePath, FileMode.Create))
        //    {
        //        int readCount;
        //        var buffer = new byte[8192];
        //        while ((readCount = stream.Read(buffer, 0, buffer.Length)) != 0)
        //        {
        //            writer.Write(buffer, 0, readCount);
        //            length += readCount;
        //        }
        //    }
        //    JavaScriptSerializer js = new JavaScriptSerializer();

        //    string jsondata = System.IO.File.ReadAllText(FilePath);
        //    var QuizData = js.Deserialize<List<QuizMainUploadDataObject>>(jsondata);
        //    string returnString;
        //    for (int i = 0; i < QuizData.Count; i++)
        //    {
        //        QuizMainUploadDataObject var_quizmainupload = QuizData[i];
        //        string date = "";
        //        string QuizId = "";
        //        try
        //        {
        //            date = var_quizmainupload.QuizDateTime;
        //            DateTime result;
        //            if (!DateTime.TryParse(date, out result))
        //            {
        //                returnString = "DateTime Format Is invalid";
        //                goto Error;
        //            }

        //            DataSet set = _dl.GetData("sp_check_quiz_execute", new NameValueCollection { { "@FormId-bigint", var_quizmainupload.formid.ToString() }, { "@EmployeeId-bigint", var_quizmainupload.EmpId } });
        //            if (set.Tables[0].Rows.Count > 0)
        //            {
        //                returnString = "Already Executed";
        //                goto Error;
        //            }

        //            else
        //            {


        //                var getAllQuestions = JsonConvert.DeserializeObject<List<QuizDataUploadDataObject>>(var_quizmainupload.QuestionObject);

        //                var getquizid = _dl.GetData("sp_InsertQuizMain", new NameValueCollection { { "@fk_QuizId-int", var_quizmainupload.formid.ToString() }, { "@EmpId-int", var_quizmainupload.EmpId.ToString() }, { "@QuizName-varchar(100)", var_quizmainupload.QuizName }, { "@Description-varchar(250)", var_quizmainupload.Description }, { "@QuizDateTime-DateTime", date.ToString() } });
        //                if (getquizid.Tables[0].Rows.Count > 0)
        //                {
        //                    QuizId = getquizid.Tables[0].Rows[0][0].ToString();
        //                }

        //                for (int j = 0; j < getAllQuestions.Count; j++)
        //                {
        //                    var data = getAllQuestions[j];

        //                    var getquizcount = _dl.GetData("sp_insertQuizData", new NameValueCollection { { "@QuizId-int", QuizId }, { "@QuestionId-int", data.QuestionId }, { "@AnswerId-int", data.AnswerId }, { "@Other-varchar(250)", data.Other } });

        //                }


        //                returnString = "DataSaved";
        //                goto DoneInsertion;
        //            }
        //        }
        //        catch (Exception exception)
        //        {
        //            //returnString = "Message: " + exception.Message + " - StackTrace: " + exception.StackTrace;		
        //            returnString = exception.Message;
        //            Constants.ErrorLog("Exception Raising From MobileService.svc.cs UploadQuizData | " + exception.Message + " | Stack Trace | " + exception.StackTrace + ";");
        //            goto Error;
        //        }

        //    Error:
        //    DoneInsertion:
        //        {
        //            SurrveyExecutionResponseObject saveResponseObject = new SurrveyExecutionResponseObject();
        //            saveResponseObject.RecordNo = Convert.ToInt32(QuizId);
        //            saveResponseObject.isInsertedSuccessfully = (returnString == "DataSaved") ? true : false;
        //            saveResponseObject.ResponseMessage = returnString;
        //            SaveDataResponse.Add(saveResponseObject);
        //        }

        //    }
        //    return js.Serialize(SaveDataResponse);

        //}

        //private double DATEDIFFForHours(string interval, DateTime visitdatetime, DateTime createdDatetime)
        //{
        //    double daysdiff = 0;

        //    TimeSpan span = createdDatetime.Subtract(visitdatetime);
        //    daysdiff = span.TotalHours;
        //    return daysdiff;

        //}

        //public string UploadCSRData(string fileName, Stream stream)
        //{
        //    List<CSRExecutionResponseObject> SaveDataResponse = new List<CSRExecutionResponseObject>();
        //    string FilePath = Path.Combine(HostingEnvironment.MapPath("~/Uploads/CsrFiles"), fileName);
        //    int length = 0;
        //    using (FileStream writer = new FileStream(FilePath, FileMode.Create))
        //    {
        //        int readCount;
        //        var buffer = new byte[8192];
        //        while ((readCount = stream.Read(buffer, 0, buffer.Length)) != 0)
        //        {
        //            writer.Write(buffer, 0, readCount);
        //            length += readCount;
        //        }
        //    }
        //    JavaScriptSerializer js = new JavaScriptSerializer();

        //    string jsondata = System.IO.File.ReadAllText(FilePath);
        //    var CSRData = js.Deserialize<List<CSRMainDataObject>>(jsondata);
        //    string returnString;
        //    for (int i = 0; i < CSRData.Count; i++)
        //    {
        //        var var_csrmain = CSRData[i];
        //        string date = "";
        //        string CsrExecutionMainID = "";
        //        try
        //        {
        //            date = var_csrmain.MobileDatetime;
        //            DateTime result;
        //            //if (!DateTime.TryParse(date, out result))
        //            if (!DateTime.TryParseExact(var_csrmain.MobileDatetime, "dd/MM/yyyy HH:mm:ss",
        //                System.Globalization.CultureInfo.InvariantCulture,
        //                System.Globalization.DateTimeStyles.None, out result))
        //            {
        //                returnString = "DateTime Format Is invalid";
        //                goto Error;
        //            }




        //            DateTime CsrDateresult;
        //            if (!DateTime.TryParseExact(var_csrmain.CsrDate, "MM/dd/yyyy",
        //                System.Globalization.CultureInfo.InvariantCulture,
        //                System.Globalization.DateTimeStyles.None, out CsrDateresult))
        //            {
        //                returnString = "Csr Date Format Is invalid";
        //                goto Error;
        //            }





        //            DateTime RequiredOnresult;
        //            if (!DateTime.TryParseExact(var_csrmain.RequiredOn, "dd/MM/yyyy HH:mm:ss",
        //                System.Globalization.CultureInfo.InvariantCulture,
        //                System.Globalization.DateTimeStyles.None, out RequiredOnresult))
        //            {
        //                returnString = "Csr Required Date Format Is invalid";
        //                goto Error;
        //            }

        //            int durationmonths = Convert.ToInt32(var_csrmain.ActDuration);
        //            DateTime durationStartDate = CsrDateresult;
        //            DateTime durationEndDate = CsrDateresult.AddMonths(durationmonths);




        //            /*DateTime executedDateTime = DateTime.ParseExact(callExecutionDataObject.executionDateTime, "dd/MM/yyyy HH:mm:ss",
        //                             CultureInfo.InvariantCulture);*/

        //            #region CheckCSR

        //            //DataSet set0 = _dl.GetData("sp_check_Rating",
        //            //                            new NameValueCollection { 
        //            //                            { "@RatingBy-bigint", var_ratingmain.RatingBy }, 
        //            //                            { "@RatingFor-bigint", var_ratingmain.RatingFor }, 
        //            //                            { "@ShiftSession-int", var_ratingmain.ShiftSession },
        //            //                            { "@RatingDateTime-datetime", result.ToString() } 
        //            //                            });
        //            //if (set0.Tables[0].Rows.Count > 0)
        //            //{
        //            //    returnString = set0.Tables[0].Rows[0][0].ToString();
        //            //    if (returnString != "RatingNotExists")
        //            //    {
        //            //        goto Error;
        //            //    }
        //            //}

        //            #endregion

        //            string instructname = var_csrmain.InstructForExecutionArray.Split(',')[0].ToString();


        //            string pkInstructId;
        //            DataSet PkINSId = _dl.GetData("sp_getInstructIdByName",
        //                                        new NameValueCollection { 
        //                                        { "@InstructName-var", instructname }, 

        //                                        });
        //            if (PkINSId.Tables[0].Rows.Count != 0)
        //            {
        //                pkInstructId = PkINSId.Tables[0].Rows[0][0].ToString();

        //            }
        //            else
        //            {

        //                returnString = "Instruct Id Not Found";
        //                goto Error;

        //            }



        //            var getCsrExecutionMainID = _dl.GetData("sp_insertCSRMainData", new NameValueCollection { 
        //                                            { "@EmployeeId-bigint", var_csrmain.EmployeeId },
        //                                            { "@DoctorId-bigint", var_csrmain.DoctorId },
        //                                            { "@DoctorCode-varchar", var_csrmain.DoctorCode },
        //                                            { "@RequiredCost-float", var_csrmain.RequiredCost },
        //                                            { "@RequiredOn-datetime", RequiredOnresult.ToString() },
        //                                            { "@InstructForExecutionID-int", pkInstructId },
        //                                            { "@DurationStartDate-datetime", durationStartDate.ToString() },
        //                                            { "@DurationEndDate-datetime", durationEndDate.ToString() },
        //                                            { "@ActDurationMonths-int", durationmonths.ToString() },
        //                                            { "@CommentDescription-varchar", var_csrmain.CommentDescription },
        //                                            { "@MobileDatetime-datetime", result.ToString() },
        //                                            { "@Latitude-varchar(max)", var_csrmain.Latitude },
        //                                            { "@Longitude-varchar(max)", var_csrmain.Longitude },
        //                                            { "@IsFake-bit", var_csrmain.IsFake },
        //                                            { "@ApplicationPackages-nvarchar(max)", var_csrmain.ApplicationPackages },
        //                                            { "@AppVersion-nvarchar(max)", var_csrmain.AppVersion },
        //                                            { "@DeviceUDID-nvarchar(max)", var_csrmain.DeviceUDID }
        //            });

        //            if (getCsrExecutionMainID.Tables[0].Rows.Count > 0)
        //            {
        //                CsrExecutionMainID = getCsrExecutionMainID.Tables[0].Rows[0][0].ToString();
        //            }

        //            var getAllRequiredItemsObject = JsonConvert.DeserializeObject<List<CSRRequiredItemsObject>>(var_csrmain.RequiredItemsObject);
        //            for (int j = 0; j < getAllRequiredItemsObject.Count; j++)
        //            {
        //                var var_RequiredItemObject = getAllRequiredItemsObject[j];
        //                _dl.GetData("sp_insertCSRItems", new NameValueCollection { 
        //                                                    { "@csrmaindataid-int", CsrExecutionMainID },
        //                                                    { "@csritemid-bigint", var_RequiredItemObject.CSRItemId },
        //                                                    { "@Cost-float", var_RequiredItemObject.CSRItemCost }});
        //            }

        //            var getAllProductsObject = JsonConvert.DeserializeObject<List<CSRProductsObject>>(var_csrmain.ProductsObject);
        //            for (int j = 0; j < getAllProductsObject.Count; j++)
        //            {
        //                string ProductObjectID = "";
        //                var var_ProductObject = getAllProductsObject[j];
        //                //insert rating form main data
        //                var getProductObjectID = _dl.GetData("sp_insertCSRProducts", new NameValueCollection { 
        //                                                    { "@csrmaindataid-int", CsrExecutionMainID },
        //                                                    { "@csrproductid-int", var_ProductObject.ProductID },
        //                                                    { "@csrproductskuid-int", var_ProductObject.SkuID },
        //                                                    { "@ExpectedUnits-float", var_ProductObject.ExpectedUnits },
        //                                                    { "@IncrUnits-float", var_ProductObject.IncrUnits }});

        //                if (getProductObjectID.Tables[0].Rows.Count > 0)
        //                {
        //                    ProductObjectID = getProductObjectID.Tables[0].Rows[0][0].ToString();
        //                }

        //                var getAllMonitoringObject = JsonConvert.DeserializeObject<List<CSRMonitoringObject>>(var_ProductObject.MonitoringObject);
        //                for (int k = 0; k < getAllMonitoringObject.Count; k++)
        //                {
        //                    var data = getAllMonitoringObject[k];
        //                    //insert rating form question answer data
        //                    _dl.GetData("sp_insertCSRMonitoring", new NameValueCollection { 
        //                                                        { "@salesbrickid-int", data.SalesBrickID },
        //                                                        { "@pharmacyid-int", data.PharmacyID },
        //                                                        { "@csrproductdataid-int", ProductObjectID },
        //                                                        { "@Percentage-float", data.Percentage}});

        //                }
        //            }




        //            returnString = "DataSaved";
        //            goto DoneInsertion;
        //        }
        //        catch (Exception exception)
        //        {
        //            //returnString = "Message: " + exception.Message + " - StackTrace: " + exception.StackTrace;		
        //            returnString = exception.Message;
        //            goto Error;
        //        }

        //    Error:
        //    DoneInsertion:
        //        {
        //            CSRExecutionResponseObject saveResponseObject = new CSRExecutionResponseObject();
        //            saveResponseObject.RecordNo = i;
        //            saveResponseObject.isInsertedSuccessfully = (returnString == "DataSaved") ? true : false;
        //            saveResponseObject.ResponseMessage = returnString;
        //            SaveDataResponse.Add(saveResponseObject);
        //        }

        //    }
        //    return js.Serialize(SaveDataResponse);

        //}
        #endregion

        #region unImplemented image code in Hudson

        // public void Upload(Stream data)
        // {
        //ParseFiles(
        //       data,
        //       WebOperationContext.Current.IncomingRequest.ContentType,
        //       ImageProcess).Wait();
        //  }

        //void ImageProcess(string Name, string fileName, Stream fileContents)
        //{
        //    NameValueCollection _nvCollection = new NameValueCollection();
        //    string ImageName = fileName;
        //    string path = HostingEnvironment.MapPath("~/JsonUploads/CallExecutionImages/");

        //    FileStream fileToUpload = new FileStream(path + ImageName.Replace("\"", ""), FileMode.Create);

        //    byte[] bytearray = new byte[10000000];
        //    int bytesRead, totalBytesRead = 0;
        //    do
        //    {
        //        bytesRead = fileContents.Read(bytearray, 0, bytearray.Length);
        //        totalBytesRead += bytesRead;
        //    } while (bytesRead > 0);

        //    fileToUpload.Write(bytearray, 0, bytearray.Length);
        //    fileToUpload.Close();
        //    fileToUpload.Dispose();

        //    _nvCollection.Clear();
        //    _nvCollection.Add("@ImagePath-text", path + ImageName.Replace("\"", ""));
        //    var ch = _dl.GetData("sp_getCallExecutionImages", _nvCollection);
        //    if (ch != null)
        //    {
        //        if (ch.Tables[0].Rows.Count != 0)
        //        {
        //            _nvCollection.Clear();
        //            _nvCollection.Add("@ImagePath-text", path + ImageName.Replace("\"", ""));
        //            _nvCollection.Add("@system-text", "");
        //            _dl.GetData("sp_getCallExecutionImages", _nvCollection);
        //        }
        //    }
        //}

        public void UploadProfileImage(Stream data)
        {
            //ParseFiles(
            //       data,
            //       WebOperationContext.Current.IncomingRequest.ContentType,
            //       ProfileImageProcess).Wait();
        }

        void ProfileImageProcess(string Name, string fileName, Stream fileContents)
        {
            NameValueCollection _nvCollection = new NameValueCollection();
            string ImageName = fileName;

            string path = HostingEnvironment.MapPath("~/JsonUploads/CustomerProfileImages/");

            //  string path = "../JsonUploads/CustomerProfileImages/";

            FileStream fileToUpload = new FileStream(path + ImageName.Replace("\"", ""), FileMode.Create);

            byte[] bytearray = new byte[1000000];
            int bytesRead, totalBytesRead = 0;
            do
            {
                bytesRead = fileContents.Read(bytearray, 0, bytearray.Length);
                totalBytesRead += bytesRead;
            } while (bytesRead > 0);

            fileToUpload.Write(bytearray, 0, bytearray.Length);
            fileToUpload.Close();
            fileToUpload.Dispose();


            if (Name == "true")
            {
                _nvCollection.Clear();
                _nvCollection.Add("@ImagePath-text", "../JsonUploads/CustomerProfileImages/" + ImageName.Replace("\"", ""));
                var ch = _dl.GetData("sp_getNewProfileImages", _nvCollection);
                if (ch != null)
                {
                    if (ch.Tables[0].Rows.Count != 0)
                    {
                        _nvCollection.Clear();
                        _nvCollection.Add("@ImagePath-text", "../JsonUploads/CustomerProfileImages/" + ImageName.Replace("\"", ""));
                        _nvCollection.Add("@IsNew-Varchar(20)", Name);


                        _dl.GetData("sp_changeStatusProfileImages", _nvCollection);
                    }
                }

            }
            else
            {
                _nvCollection.Clear();
                _nvCollection.Add("@ImagePath-text", "../JsonUploads/CustomerProfileImages/" + ImageName.Replace("\"", ""));
                var ch = _dl.GetData("sp_getProfileImages", _nvCollection);
                if (ch != null)
                {
                    if (ch.Tables[0].Rows.Count != 0)
                    {
                        _nvCollection.Clear();
                        _nvCollection.Add("@ImagePath-text", "../JsonUploads/CustomerProfileImages/" + ImageName.Replace("\"", ""));
                        _nvCollection.Add("@IsNew-Varchar(20)", Name);

                        _dl.GetData("sp_changeStatusProfileImages", _nvCollection);
                    }
                }

            }

            PocketDCR2.Classes.Constants.ErrorLog("The Value of name is " + Name);

        }

        //public static async Task ParseFiles(
        //Stream data, string contentType, Action<string, string, Stream> fileProcessor)
        //{
        //    using (var streamContent = new StreamContent(data))
        //    {
        //        streamContent.Headers.ContentType = MediaTypeHeaderValue.Parse(contentType);
        //        //await TaskEx.Run(async() => await Request.Content.ReadAsMultipartAsync(provider))
        //        try
        //        {
        //            var provider = await streamContent.ReadAsMultipartAsync();

        //            foreach (var httpContent in provider.Contents)
        //            {
        //                var fileName = httpContent.Headers.ContentDisposition.FileName;
        //                var Name = httpContent.Headers.ContentDisposition.Name;

        //                if (string.IsNullOrWhiteSpace(fileName))
        //                {
        //                    continue;

        //                }
        //                if (fileName.Replace("\"", "") != string.Empty)
        //                {
        //                    using (Stream fileContents = await httpContent.ReadAsStreamAsync())
        //                    {
        //                        fileProcessor(Name, fileName, fileContents);
        //                    }
        //                }

        //            }

        //        }
        //        catch (Exception e)
        //        {
        //            PocketDCR2.Classes.Constants.ErrorLog("Image Process for Customer" + e.StackTrace.ToString());
        //        }
        //    }
        //}

        #endregion
    }

    [DataContract]
    public class CallExecutionDataObject
    {
        [DataMember(Name = "isPlanned")]
        public string isPlanned { get; set; }

        [DataMember(Name = "date")]
        public string date { get; set; }

        [DataMember(Name = "startTime")]
        public string startTime { get; set; }

        [DataMember(Name = "docDetail")]
        public string docDetail { get; set; }

        [DataMember(Name = "endTime")]
        public string endTime { get; set; }

        [DataMember(Name = "activity")]
        public string activity { get; set; }

        [DataMember(Name = "reason")]
        public string reason { get; set; }

        [DataMember(Name = "product1")]
        public string product1 { get; set; }

        [DataMember(Name = "p1Notes")]
        public string p1Notes { get; set; }

        [DataMember(Name = "product2")]
        public string product2 { get; set; }

        [DataMember(Name = "p2Notes")]
        public string p2Notes { get; set; }

        [DataMember(Name = "product3")]
        public string product3 { get; set; }

        [DataMember(Name = "p3Notes")]
        public string p3Notes { get; set; }

        [DataMember(Name = "product4")]
        public string product4 { get; set; }

        [DataMember(Name = "p4Notes")]
        public string p4Notes { get; set; }

        [DataMember(Name = "sample1")]
        public string sample1 { get; set; }

        [DataMember(Name = "sampleQty1")]
        public string sampleQty1 { get; set; }

        [DataMember(Name = "sample2")]
        public string sample2 { get; set; }

        [DataMember(Name = "sampleQty2")]
        public string sampleQty2 { get; set; }

        [DataMember(Name = "sample3")]
        public string sample3 { get; set; }

        [DataMember(Name = "sampleQty3")]
        public string sampleQty3 { get; set; }

        [DataMember(Name = "sample4")]
        public string sample4 { get; set; }

        [DataMember(Name = "sampleQty4")]
        public string sampleQty4 { get; set; }

        [DataMember(Name = "reminder1")]
        public string reminder1 { get; set; }

        [DataMember(Name = "reminder2")]
        public string reminder2 { get; set; }

        [DataMember(Name = "reminder3")]
        public string reminder3 { get; set; }

        [DataMember(Name = "jvflm")]
        public string jvflm { get; set; }

        [DataMember(Name = "jvslm")]
        public string jvslm { get; set; }

        [DataMember(Name = "jvho1")]
        public string jvho1 { get; set; }

        [DataMember(Name = "jvsho2")]
        public string jvho2 { get; set; }

        [DataMember(Name = "gift")]
        public string gift { get; set; }

        [DataMember(Name = "giftQty")]
        public string giftQty { get; set; }

        [DataMember(Name = "callNotes")]
        public string callNotes { get; set; }

        [DataMember(Name = "employeeId")]
        public string employeeId { get; set; }

        [DataMember(Name = "coaching")]
        public string coaching { get; set; }

        [DataMember(Name = "latitude")]
        public string latitude { get; set; }

        [DataMember(Name = "longitude")]
        public string longitude { get; set; }

        [DataMember(Name = "macaddress")]
        public string macaddress { get; set; }

        [DataMember(Name = "Doc_Address")]
        public string Doc_Address { get; set; }


        [DataMember(Name = "callType")]
        public string callType { get; set; }

        [DataMember(Name = "groupIdPlanned")]
        public string groupIdPlanned { get; set; }

        //[DataMember(Name = "doctorIDArray")]
        //public string doctorIDArray { get; set; }

        [DataMember(Name = "executionDateTime")]
        public string executionDateTime { get; set; }

        [DataMember(Name = "EdetailingJson")]
        public string EdetailingJson { get; set; }

        [DataMember(Name = "DoctorDetailsJson")]
        public string DoctorDetailsJson { get; set; }

        [DataMember(Name = "fileDataJson")]
        public string fileDataJson { get; set; }

        [DataMember(Name = "PurposeID")]
        public string PurposeID { get; set; }

        [DataMember(Name = "surveyFormJson")]
        public string surveyFormJson { get; set; }

        [DataMember(Name = "ProfileDataJson")]
        public string ProfileDataJson { get; set; }


        [DataMember(Name = "videosDetailingJson")]
        public string videosDetailingJson { get; set; }

        [DataMember(Name = "ExpenseDataJson")]
        public string ExpenseDataJson { get; set; }

        [DataMember(Name = "CallDitanceForMobile")]
        public string CallDitanceForMobile { get; set; }
    }

    public class ExpenseDataJsonObject
    {
        public string descSelect { get; set; }

        public string doctorSelect { get; set; }

        public string expenseData { get; set; }




        //[{"descSelect":"[{\"ExpenseActivityId\":\"3\"\"ActivityTypeName\":\"PEN\",\"DoctorID\":\"139268\",\"Expense\":\"500\",\"TagCount\":\"1\"},{\"ExpenseActivityId\":\"3\"\"ActivityTypeName\":\"NotePad\",\"DoctorID\":\"139268\",\"Expense\":\"500\",\"TagCount\":\"2\"},{\"ExpenseActivityId\":\"3\",\"ActivityTypeName\":\"Visiting Card\",\"DoctorID\":\"139268\",\"Expense\":\"1500\",\"TagCount\":\"3\"}]",
        //"doctorSelect":"ExpenseDuringCall",
        //"expenseData":" DR IQBAL",
        //"fileName":"","filePath":"JPEG_20190515_125222_7887578420632526647.jpg"}]
    }

    public class ExpenseDetailDataJsonObject
    {
        public string ActivityTypeID { get; set; }

        public string Expense { get; set; }


    }

    [DataContract]
    public class CallExecutionDataObjectnew
    {
        [DataMember(Name = "CallActivity")]
        public string CallActivity { get; set; }

        [DataMember(Name = "isLive")]
        public string isLive { get; set; }

        [DataMember(Name = "IMEIAddress")]
        public string IMEIAddress { get; set; }

        [DataMember(Name = "VisitShiftPKMultiaddID")]
        public string VisitShiftPKMultiaddID { get; set; }

        [DataMember(Name = "isPlanned")]
        public string isPlanned { get; set; }

        [DataMember(Name = "date")]
        public string date { get; set; }

        [DataMember(Name = "startTime")]
        public string startTime { get; set; }

        [DataMember(Name = "docDetail")]
        public string docDetail { get; set; }

        [DataMember(Name = "endTime")]
        public string endTime { get; set; }

        [DataMember(Name = "activity")]
        public string activity { get; set; }

        [DataMember(Name = "reason")]
        public string reason { get; set; }

        [DataMember(Name = "product1")]
        public string product1 { get; set; }

        [DataMember(Name = "p1Notes")]
        public string p1Notes { get; set; }

        [DataMember(Name = "product2")]
        public string product2 { get; set; }

        [DataMember(Name = "p2Notes")]
        public string p2Notes { get; set; }

        [DataMember(Name = "product3")]
        public string product3 { get; set; }

        [DataMember(Name = "p3Notes")]
        public string p3Notes { get; set; }

        [DataMember(Name = "product4")]
        public string product4 { get; set; }

        [DataMember(Name = "p4Notes")]
        public string p4Notes { get; set; }

        [DataMember(Name = "sample1")]
        public string sample1 { get; set; }

        [DataMember(Name = "sampleQty1")]
        public string sampleQty1 { get; set; }

        [DataMember(Name = "sample2")]
        public string sample2 { get; set; }

        [DataMember(Name = "sampleQty2")]
        public string sampleQty2 { get; set; }

        [DataMember(Name = "sample3")]
        public string sample3 { get; set; }

        [DataMember(Name = "sampleQty3")]
        public string sampleQty3 { get; set; }

        [DataMember(Name = "sample4")]
        public string sample4 { get; set; }

        [DataMember(Name = "sampleQty4")]
        public string sampleQty4 { get; set; }

        [DataMember(Name = "reminder1")]
        public string reminder1 { get; set; }

        [DataMember(Name = "reminder2")]
        public string reminder2 { get; set; }

        [DataMember(Name = "reminder3")]
        public string reminder3 { get; set; }

        [DataMember(Name = "jvflm")]
        public string jvflm { get; set; }

        [DataMember(Name = "jvslm")]
        public string jvslm { get; set; }

        [DataMember(Name = "jvftm")]
        public string jvftm { get; set; }

        [DataMember(Name = "jvbuh")]
        public string jvbuh { get; set; }

        [DataMember(Name = "jvgm")]
        public string jvgm { get; set; }

        [DataMember(Name = "jvcoo")]
        public string jvcoo { get; set; }

        [DataMember(Name = "jvcd")]
        public string jvcd { get; set; }

        [DataMember(Name = "jvpm")]
        public string jvpm { get; set; }

        [DataMember(Name = "gift")]
        public string gift { get; set; }

        [DataMember(Name = "giftQty")]
        public string giftQty { get; set; }

        [DataMember(Name = "callNotes")]
        public string callNotes { get; set; }

        [DataMember(Name = "employeeId")]
        public string employeeId { get; set; }

        [DataMember(Name = "coaching")]
        public string coaching { get; set; }

        [DataMember(Name = "latitude")]
        public string latitude { get; set; }

        [DataMember(Name = "longitude")]
        public string longitude { get; set; }

        [DataMember(Name = "macaddress")]
        public string macaddress { get; set; }


        [DataMember(Name = "Doc_Address")]
        public string Doc_Address { get; set; }

        [DataMember(Name = "VisitShift")]
        public string VisitShift { get; set; }

        

        [DataMember(Name = "flag")]
        public string flag { get; set; }

        [DataMember(Name = "appversion")]
        public string appversion { get; set; }

        [DataMember(Name = "applicationpackages")]
        public string applicationpackages { get; set; }

        [DataMember(Name = "modelnumber")]
        public string modelnumber { get; set; }

        [DataMember(Name = "callType")]
        public string callType { get; set; }

        [DataMember(Name = "groupIdPlanned")]
        public string groupIdPlanned { get; set; }

        //[DataMember(Name = "doctorIDArray")]
        //public string doctorIDArray { get; set; }

        [DataMember(Name = "executionDateTime")]
        public string executionDateTime { get; set; }

        [DataMember(Name = "EdetailingJson")]
        public string EdetailingJson { get; set; }

        [DataMember(Name = "DoctorDetailsJson")]
        public string DoctorDetailsJson { get; set; }

        [DataMember(Name = "fileDataJson")]
        public string fileDataJson { get; set; }

        [DataMember(Name = "PurposeID")]
        public string PurposeID { get; set; }

        [DataMember(Name = "surveyFormJson")]
        public string surveyFormJson { get; set; }

        [DataMember(Name = "ProfileDataJson")]
        public string ProfileDataJson { get; set; }

        [DataMember(Name = "videosDetailingJson")]
        public string videosDetailingJson { get; set; }

        [DataMember(Name = "ExpenseDataJson")]
        public string ExpenseDataJson { get; set; }

        [DataMember(Name = "CallDitanceForMobile")]
        public string CallDitanceForMobile { get; set; }

        [DataMember(Name = "Callno")]
        public string Callno { get; set; }
    }

    [DataContract]
    public class CallExecutionDataObjectnewZSM
    {
        [DataMember(Name = "CallActivity")]
        public string CallActivity { get; set; }

        [DataMember(Name = "isLive")]
        public string isLive { get; set; }

        [DataMember(Name = "IMEIAddress")]
        public string IMEIAddress { get; set; }

        [DataMember(Name = "VisitShiftPKMultiaddID")]
        public string VisitShiftPKMultiaddID { get; set; }

        [DataMember(Name = "isPlanned")]
        public string isPlanned { get; set; }

        [DataMember(Name = "isPlannedZSM")]
        public string isPlannedZSM { get; set; }

        [DataMember(Name = "date")]
        public string date { get; set; }

        [DataMember(Name = "startTime")]
        public string startTime { get; set; }

        [DataMember(Name = "docDetail")]
        public string docDetail { get; set; }

        [DataMember(Name = "endTime")]
        public string endTime { get; set; }

        [DataMember(Name = "activity")]
        public string activity { get; set; }

        [DataMember(Name = "reason")]
        public string reason { get; set; }

        [DataMember(Name = "product1")]
        public string product1 { get; set; }

        [DataMember(Name = "p1Notes")]
        public string p1Notes { get; set; }

        [DataMember(Name = "product2")]
        public string product2 { get; set; }

        [DataMember(Name = "p2Notes")]
        public string p2Notes { get; set; }

        [DataMember(Name = "product3")]
        public string product3 { get; set; }

        [DataMember(Name = "p3Notes")]
        public string p3Notes { get; set; }

        [DataMember(Name = "product4")]
        public string product4 { get; set; }

        [DataMember(Name = "p4Notes")]
        public string p4Notes { get; set; }

        [DataMember(Name = "sample1")]
        public string sample1 { get; set; }

        [DataMember(Name = "sampleQty1")]
        public string sampleQty1 { get; set; }

        [DataMember(Name = "sample2")]
        public string sample2 { get; set; }

        [DataMember(Name = "sampleQty2")]
        public string sampleQty2 { get; set; }

        [DataMember(Name = "sample3")]
        public string sample3 { get; set; }

        [DataMember(Name = "sampleQty3")]
        public string sampleQty3 { get; set; }

        [DataMember(Name = "sample4")]
        public string sample4 { get; set; }

        [DataMember(Name = "sampleQty4")]
        public string sampleQty4 { get; set; }

        [DataMember(Name = "reminder1")]
        public string reminder1 { get; set; }

        [DataMember(Name = "reminder2")]
        public string reminder2 { get; set; }

        [DataMember(Name = "reminder3")]
        public string reminder3 { get; set; }

        [DataMember(Name = "jvflm")]
        public string jvflm { get; set; }

        [DataMember(Name = "jvslm")]
        public string jvslm { get; set; }

        [DataMember(Name = "jvftm")]
        public string jvftm { get; set; }

        [DataMember(Name = "jvbuh")]
        public string jvbuh { get; set; }

        [DataMember(Name = "jvgm")]
        public string jvgm { get; set; }

        [DataMember(Name = "jvcoo")]
        public string jvcoo { get; set; }

        [DataMember(Name = "jvcd")]
        public string jvcd { get; set; }

        [DataMember(Name = "jvpm")]
        public string jvpm { get; set; }

        [DataMember(Name = "gift")]
        public string gift { get; set; }

        [DataMember(Name = "giftQty")]
        public string giftQty { get; set; }

        [DataMember(Name = "callNotes")]
        public string callNotes { get; set; }

        [DataMember(Name = "employeeId")]
        public string employeeId { get; set; }

        [DataMember(Name = "coaching")]
        public string coaching { get; set; }

        [DataMember(Name = "latitude")]
        public string latitude { get; set; }

        [DataMember(Name = "longitude")]
        public string longitude { get; set; }

        [DataMember(Name = "macaddress")]
        public string macaddress { get; set; }

        [DataMember(Name = "Doc_Address")]
        public string Doc_Address { get; set; }


        [DataMember(Name = "VisitShift")]
        public string VisitShift { get; set; }

        


        [DataMember(Name = "flag")]
        public string flag { get; set; }

        [DataMember(Name = "appversion")]
        public string appversion { get; set; }

        [DataMember(Name = "applicationpackages")]
        public string applicationpackages { get; set; }

        [DataMember(Name = "modelnumber")]
        public string modelnumber { get; set; }

        [DataMember(Name = "callType")]
        public string callType { get; set; }

        [DataMember(Name = "groupIdPlanned")]
        public string groupIdPlanned { get; set; }

        //[DataMember(Name = "doctorIDArray")]
        //public string doctorIDArray { get; set; }

        [DataMember(Name = "executionDateTime")]
        public string executionDateTime { get; set; }

        [DataMember(Name = "EdetailingJson")]
        public string EdetailingJson { get; set; }

        [DataMember(Name = "DoctorDetailsJson")]
        public string DoctorDetailsJson { get; set; }

        [DataMember(Name = "fileDataJson")]
        public string fileDataJson { get; set; }

        [DataMember(Name = "PurposeID")]
        public string PurposeID { get; set; }

        [DataMember(Name = "surveyFormJson")]
        public string surveyFormJson { get; set; }

        [DataMember(Name = "ProfileDataJson")]
        public string ProfileDataJson { get; set; }

        [DataMember(Name = "videosDetailingJson")]
        public string videosDetailingJson { get; set; }

        [DataMember(Name = "ExpenseDataJson")]
        public string ExpenseDataJson { get; set; }

        [DataMember(Name = "CallDitanceForMobile")]
        public string CallDitanceForMobile { get; set; }

        [DataMember(Name = "Callno")]
        public string Callno { get; set; }
    }

    [DataContract]
    public class CallExecutionDataObjectnewRSM
    {
        [DataMember(Name = "CallActivity")]
        public string CallActivity { get; set; }

        [DataMember(Name = "isLive")]
        public string isLive { get; set; }

        [DataMember(Name = "IMEIAddress")]
        public string IMEIAddress { get; set; }

        [DataMember(Name = "VisitShiftPKMultiaddID")]
        public string VisitShiftPKMultiaddID { get; set; }

        [DataMember(Name = "isPlanned")]
        public string isPlanned { get; set; }

        [DataMember(Name = "isPlannedRSM")]
        public string isPlannedRSM { get; set; }

        [DataMember(Name = "date")]
        public string date { get; set; }

        [DataMember(Name = "startTime")]
        public string startTime { get; set; }

        [DataMember(Name = "docDetail")]
        public string docDetail { get; set; }

        [DataMember(Name = "endTime")]
        public string endTime { get; set; }

        [DataMember(Name = "activity")]
        public string activity { get; set; }

        [DataMember(Name = "reason")]
        public string reason { get; set; }

        [DataMember(Name = "product1")]
        public string product1 { get; set; }

        [DataMember(Name = "p1Notes")]
        public string p1Notes { get; set; }

        [DataMember(Name = "product2")]
        public string product2 { get; set; }

        [DataMember(Name = "p2Notes")]
        public string p2Notes { get; set; }

        [DataMember(Name = "product3")]
        public string product3 { get; set; }

        [DataMember(Name = "p3Notes")]
        public string p3Notes { get; set; }

        [DataMember(Name = "product4")]
        public string product4 { get; set; }

        [DataMember(Name = "p4Notes")]
        public string p4Notes { get; set; }

        [DataMember(Name = "sample1")]
        public string sample1 { get; set; }

        [DataMember(Name = "sampleQty1")]
        public string sampleQty1 { get; set; }

        [DataMember(Name = "sample2")]
        public string sample2 { get; set; }

        [DataMember(Name = "sampleQty2")]
        public string sampleQty2 { get; set; }

        [DataMember(Name = "sample3")]
        public string sample3 { get; set; }

        [DataMember(Name = "sampleQty3")]
        public string sampleQty3 { get; set; }

        [DataMember(Name = "sample4")]
        public string sample4 { get; set; }

        [DataMember(Name = "sampleQty4")]
        public string sampleQty4 { get; set; }

        [DataMember(Name = "reminder1")]
        public string reminder1 { get; set; }

        [DataMember(Name = "reminder2")]
        public string reminder2 { get; set; }

        [DataMember(Name = "reminder3")]
        public string reminder3 { get; set; }

        [DataMember(Name = "jvflm")]
        public string jvflm { get; set; }

        [DataMember(Name = "jvslm")]
        public string jvslm { get; set; }

        [DataMember(Name = "jvftm")]
        public string jvftm { get; set; }

        [DataMember(Name = "jvbuh")]
        public string jvbuh { get; set; }

        [DataMember(Name = "jvgm")]
        public string jvgm { get; set; }

        [DataMember(Name = "jvcoo")]
        public string jvcoo { get; set; }

        [DataMember(Name = "jvcd")]
        public string jvcd { get; set; }

        [DataMember(Name = "jvpm")]
        public string jvpm { get; set; }

        [DataMember(Name = "gift")]
        public string gift { get; set; }

        [DataMember(Name = "giftQty")]
        public string giftQty { get; set; }

        [DataMember(Name = "callNotes")]
        public string callNotes { get; set; }

        [DataMember(Name = "employeeId")]
        public string employeeId { get; set; }

        [DataMember(Name = "coaching")]
        public string coaching { get; set; }

        [DataMember(Name = "latitude")]
        public string latitude { get; set; }

        [DataMember(Name = "longitude")]
        public string longitude { get; set; }

        [DataMember(Name = "macaddress")]
        public string macaddress { get; set; }

        [DataMember(Name = "Doc_Address")]
        public string Doc_Address { get; set; }

        [DataMember(Name = "VisitShift")]
        public string VisitShift { get; set; }

        [DataMember(Name = "flag")]
        public string flag { get; set; }

        [DataMember(Name = "appversion")]
        public string appversion { get; set; }

        [DataMember(Name = "applicationpackages")]
        public string applicationpackages { get; set; }

        [DataMember(Name = "modelnumber")]
        public string modelnumber { get; set; }

        [DataMember(Name = "callType")]
        public string callType { get; set; }

        [DataMember(Name = "groupIdPlanned")]
        public string groupIdPlanned { get; set; }

        //[DataMember(Name = "doctorIDArray")]
        //public string doctorIDArray { get; set; }

        [DataMember(Name = "executionDateTime")]
        public string executionDateTime { get; set; }

        [DataMember(Name = "EdetailingJson")]
        public string EdetailingJson { get; set; }

        [DataMember(Name = "DoctorDetailsJson")]
        public string DoctorDetailsJson { get; set; }

        [DataMember(Name = "fileDataJson")]
        public string fileDataJson { get; set; }

        [DataMember(Name = "PurposeID")]
        public string PurposeID { get; set; }

        [DataMember(Name = "surveyFormJson")]
        public string surveyFormJson { get; set; }

        [DataMember(Name = "ProfileDataJson")]
        public string ProfileDataJson { get; set; }

        [DataMember(Name = "videosDetailingJson")]
        public string videosDetailingJson { get; set; }

        [DataMember(Name = "ExpenseDataJson")]
        public string ExpenseDataJson { get; set; }

        [DataMember(Name = "CallDitanceForMobile")]
        public string CallDitanceForMobile { get; set; }

        [DataMember(Name = "Callno")]
        public string Callno { get; set; }
    }

    public class expensedata
    {
        [DataMember(Name = "ActivityTypeID")]
        public string ActivityTypeID { get; set; }

        [DataMember(Name = "DoctorID")]
        public string DoctorID { get; set; }

        [DataMember(Name = "Expense")]
        public string Expense { get; set; }

        [DataMember(Name = "File")]
        public string File { get; set; }
    }

    public class IndiviualExpenseDataDetailObject
    {
        [DataMember(Name = "EmployeeId")]
        public string EmployeeId { get; set; }

        [DataMember(Name = "executionDateTime")]
        public string executionDateTime { get; set; }

        [DataMember(Name = "date")]
        public string date { get; set; }

        [DataMember(Name = "AppVersion")]
        public string AppVersion { get; set; }

        [DataMember(Name = "Latitude")]
        public string Latitude { get; set; }

        [DataMember(Name = "Longitude")]
        public string Longitude { get; set; }


        [DataMember(Name = "RunningApplicationPackages")]
        public string RunningApplicationPackages { get; set; }

        [DataMember(Name = "descSelect")]
        public string descSelect { get; set; }

        [DataMember(Name = "doctorSelect")]
        public string doctorSelect { get; set; }

        [DataMember(Name = "expenseData")]
        public String expenseData { get; set; }

        [DataMember(Name = "isMock")]
        public string isMock { get; set; }

        [DataMember(Name = "IMEIAddress")]
        public string IMEIAddress { get; set; }



    }

    [DataContract]
    public class RatingMainDataObject
    {
        //[RatingBy] [bigint] NULL,
        //[RatingFor] [bigint] NULL,
        //[ShiftSession] [nvarchar](100) NULL,
        //[NumberOfCalls] [nvarchar](50) NULL,
        //[TypeOfWrk] [nvarchar](100) NULL,
        //[TownVisited] [nvarchar](255) NULL,
        //[BricksWorked] [nvarchar](255) NULL,
        //[StartTime] datetime NULL,
        //[EndTime] datetime NULL,
        //[SalescallId] [bigint] NULL,
        //[RatingDateTime] [datetime] NULL,
        //[RatingComment] [varchar](500) NULL,
        //[Latitude] [varchar](250) NULL,
        //[Longitude] [varchar](250) NULL,
        //[IsFake] [bit] NULL,
        //[ApplicationPackages] [nvarchar](500) NULL,
        //[AppVersion] [nvarchar](100) NULL,
        //[DeviceUDID] [nvarchar](100) NULL,
        //[RatingFormObject]

        [DataMember(Name = "RatingBy")]
        public string RatingBy { get; set; }

        [DataMember(Name = "RatingFor")]
        public string RatingFor { get; set; }

        [DataMember(Name = "ShiftSession")]
        public string ShiftSession { get; set; }

        [DataMember(Name = "NumberOfCalls")]
        public string NumberOfCalls { get; set; }

        [DataMember(Name = "TypeOfWrk")]
        public string TypeOfWrk { get; set; }

        [DataMember(Name = "TownVisited")]
        public string TownVisited { get; set; }

        [DataMember(Name = "BricksWorked")]
        public string BricksWorked { get; set; }

        [DataMember(Name = "BricksWorkedObject")]
        public string BricksWorkedObject { get; set; }

        [DataMember(Name = "StartTime")]
        public string StartTime { get; set; }

        [DataMember(Name = "EndTime")]
        public string EndTime { get; set; }

        [DataMember(Name = "SalescallId")]
        public string SalescallId { get; set; }

        [DataMember(Name = "RatingDateTime")]
        public string RatingDateTime { get; set; }

        [DataMember(Name = "RatingComment")]
        public string RatingComment { get; set; }

        [DataMember(Name = "Latitude")]
        public string Latitude { get; set; }

        [DataMember(Name = "Longitude")]
        public string Longitude { get; set; }

        [DataMember(Name = "IsFake")]
        public string IsFake { get; set; }

        [DataMember(Name = "ApplicationPackages")]
        public string ApplicationPackages { get; set; }

        [DataMember(Name = "AppVersion")]
        public string AppVersion { get; set; }

        [DataMember(Name = "DeviceUDID")]
        public string DeviceUDID { get; set; }

        [DataMember(Name = "RatingFormsObject")]
        public string RatingFormsObject { get; set; }
    }

    [DataContract]
    public class BricksWithShiftSessionObject
    {
        [DataMember(Name = "ShiftSession")]
        public string ShiftSession { get; set; }

        [DataMember(Name = "BrickWorked")]
        public string BrickWorked { get; set; }
    }

    [DataContract]
    public class RatingFormMainDataObject
    {
        //[RatingFormId] [int] NULL,
        //[RatingName] [varchar](100) NULL,
        //[RatingFormGroupAverage] [varchar](50) NULL,
        //[RatingFormComment] [varchar](500) NULL,
        //[QuestionAnswerObject]

        [DataMember(Name = "RatingFormId")]
        public string RatingFormId { get; set; }

        [DataMember(Name = "RatingName")]
        public string RatingName { get; set; }

        [DataMember(Name = "RatingFormGroupAverage")]
        public string RatingFormGroupAverage { get; set; }

        [DataMember(Name = "RatingFormComment")]
        public string RatingFormComment { get; set; }

        [DataMember(Name = "QuestionAnswerObject")]
        public string QuestionAnswerObject { get; set; }
    }

    [DataContract]
    public class RatingFormDetailDataObject
    {

        [DataMember(Name = "QuestionId")]
        public string QuestionId { get; set; }

        [DataMember(Name = "AnswerId")]
        public string AnswerId { get; set; }

        [DataMember(Name = "Other")]
        public string Other { get; set; }
    }

    [DataContract]
    public class CSRMainDataObject
    {
        //EmployeeId bigint,
        //DoctorId bigint,
        //DoctorCode bigint,
        //RequiredCost float,
        //RequiredOn datetime,
        //fk_instructid int,
        //DurationStartDate datetime,
        //DurationEndDate datetime,
        //ActDuration varchar(255),
        //CSRStatus varchar(255),
        //CSRStatusFlag bit,
        //CommentDescription varchar(max),
        //MobileDatetime datetime,
        //Latitude varchar(250) NULL,
        //Longitude varchar(250) NULL,
        //IsFake bit NULL,
        //ApplicationPackages nvarchar(500) NULL,
        //AppVersion nvarchar(100) NULL,
        //DeviceUDID nvarchar(100) NULL,

        [DataMember(Name = "EmployeeId")]
        public string EmployeeId { get; set; }

        [DataMember(Name = "DoctorId")]
        public string DoctorId { get; set; }

        [DataMember(Name = "DoctorCode")]
        public string DoctorCode { get; set; }

        [DataMember(Name = "CsrDate")]
        public string CsrDate { get; set; }

        [DataMember(Name = "RequiredCost")]
        public string RequiredCost { get; set; }

        [DataMember(Name = "RequiredOn")]
        public string RequiredOn { get; set; }

        [DataMember(Name = "InstructForExecutionArray")]
        public string InstructForExecutionArray { get; set; }

        [DataMember(Name = "RequiredItemsObject")]
        public string RequiredItemsObject { get; set; }

        [DataMember(Name = "ProductsObject")]
        public string ProductsObject { get; set; }

        [DataMember(Name = "ActDuration")]
        public string ActDuration { get; set; }

        [DataMember(Name = "CommentDescription")]
        public string CommentDescription { get; set; }

        [DataMember(Name = "MobileDatetime")]
        public string MobileDatetime { get; set; }

        [DataMember(Name = "Latitude")]
        public string Latitude { get; set; }

        [DataMember(Name = "Longitude")]
        public string Longitude { get; set; }

        [DataMember(Name = "IsFake")]
        public string IsFake { get; set; }

        [DataMember(Name = "ApplicationPackages")]
        public string ApplicationPackages { get; set; }

        [DataMember(Name = "AppVersion")]
        public string AppVersion { get; set; }

        [DataMember(Name = "DeviceUDID")]
        public string DeviceUDID { get; set; }

    }

    [DataContract]
    public class CSRRequiredItemsObject
    {
        [DataMember(Name = "CSRItemId")]
        public string CSRItemId { get; set; }

        [DataMember(Name = "CSRItemCost")]
        public string CSRItemCost { get; set; }
    }

    [DataContract]
    public class CSRProductsObject
    {
        [DataMember(Name = "ProductID")]
        public string ProductID { get; set; }

        [DataMember(Name = "SkuID")]
        public string SkuID { get; set; }

        [DataMember(Name = "ExpectedUnits")]
        public string ExpectedUnits { get; set; }

        [DataMember(Name = "IncrUnits")]
        public string IncrUnits { get; set; }

        [DataMember(Name = "MonitoringObject")]
        public string MonitoringObject { get; set; }

    }

    [DataContract]
    public class CSRMonitoringObject
    {
        [DataMember(Name = "SalesBrickID")]
        public string SalesBrickID { get; set; }

        [DataMember(Name = "PharmacyID")]
        public string PharmacyID { get; set; }

        [DataMember(Name = "Percentage")]
        public string Percentage { get; set; }
    }

    [DataContract]
    public class SurveyMainUploadDataObject
    {
        [DataMember(Name = "formid")]
        public string formid { get; set; }

        [DataMember(Name = "EmpId")]
        public string EmpId { get; set; }

        [DataMember(Name = "CustId")]
        public string CustId { get; set; }

        [DataMember(Name = "SurveyName")]
        public string SurveyName { get; set; }

        [DataMember(Name = "Description")]
        public string Description { get; set; }

        [DataMember(Name = "SurveyDateTime")]
        public string SurveyDateTime { get; set; }

        [DataMember(Name = "QuestionObject")]
        public string QuestionObject { get; set; }
    }

    [DataContract]
    public class SurveyDataUploadDataObject
    {

        [DataMember(Name = "QuestionId")]
        public string QuestionId { get; set; }

        [DataMember(Name = "AnswerId")]
        public string AnswerId { get; set; }

        [DataMember(Name = "Other")]
        public string Other { get; set; }
    }

    [DataContract]
    public class QuizMainUploadDataObject
    {
        [DataMember(Name = "formid")]
        public string formid { get; set; }

        [DataMember(Name = "EmpId")]
        public string EmpId { get; set; }

        [DataMember(Name = "QuizName")]
        public string QuizName { get; set; }

        [DataMember(Name = "Description")]
        public string Description { get; set; }

        [DataMember(Name = "QuizDateTime")]
        public string QuizDateTime { get; set; }

        [DataMember(Name = "QuestionObject")]
        public string QuestionObject { get; set; }
    }

    [DataContract]
    public class QuizDataUploadDataObject
    {

        [DataMember(Name = "QuestionId")]
        public string QuestionId { get; set; }

        [DataMember(Name = "AnswerId")]
        public string AnswerId { get; set; }

        [DataMember(Name = "Other")]
        public string Other { get; set; }
    }

    public class CallExecutionResponseObject
    {
        public int CallNo { get; set; }
        public bool isExecutedSuccessfully { get; set; }
        public string CallResponseMessage { get; set; }
    }

    public class VoiceResponseObject
    {
        public int CallNo { get; set; }
        public bool Status { get; set; }
        public string VoiceResponseMessage { get; set; }
    }
    public class CallExecutionResponseObjectForVoiceRecording
    {
        public int CallNo { get; set; }
        public bool isExecutedSuccessfully { get; set; }
        public string CallResponseMessage { get; set; }
        public long? SalesCallId { get; set; }

    }
    public class RatingExecutionResponseObject
    {
        public int RecordNo { get; set; }
        public bool isInsertedSuccessfully { get; set; }
        public string ResponseMessage { get; set; }
    }

    public class SurrveyExecutionResponseObject
    {
        public int RecordNo { get; set; }
        public bool isInsertedSuccessfully { get; set; }
        public string ResponseMessage { get; set; }
    }

    public class CSRExecutionResponseObject
    {
        public int RecordNo { get; set; }
        public bool isInsertedSuccessfully { get; set; }
        public string ResponseMessage { get; set; }
    }

    public class EdetailingObject
    {
        public string pdfid { get; set; }
        public string pagenumber { get; set; }
        public string timeduration { get; set; }
    }

    public class DoctorDetailsObject
    {
        public string city { get; set; }
        public string doc_address { get; set; }

        public string VisitShift { get; set; }

        public string doc_cnic_num { get; set; }
        public string doc_desig { get; set; }
        public string doc_email { get; set; }
        public string doc_name { get; set; }
        public string doc_phone_num { get; set; }
        public string doc_qualification { get; set; }
        public string docs_speciality { get; set; }
        public string genderSelection { get; set; }
        public string imagefilename { get; set; }


    }

    public class VideoObject
    {
        public string videoid { get; set; }
        public string videoduration { get; set; }
        public string timeduration { get; set; }
    }

    public class fileNameObject
    {
        public string fileName { get; set; }
        public string filePath { get; set; }
    }

    public class imagefileNameObject
    {
        public string imagefilename { get; set; }
    }
}